/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 19-Sep-2006.
 */
#ifndef URN_OMA_BCAST_ESG_2005_H
#define URN_OMA_BCAST_ESG_2005_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"

/**************************************************************/
/*                                                            */
/*  GenreElementType                                          */
/*                                                            */
/**************************************************************/

#define TV_GenreElementType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* GenreElementType;

EXTERN int asn1E_GenreElementType (OSCTXT* pctxt,
   GenreElementType pvalue, ASN1TagType tagging);

EXTERN int asn1D_GenreElementType (OSCTXT* pctxt,
   GenreElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_GenreElementType (OSCTXT* pctxt, GenreElementType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GenreElementType (OSCTXT* pctxt, GenreElementType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_GenreElementType
   (const char* name, GenreElementType pvalue);

/**************************************************************/
/*                                                            */
/*  PreviewDataIDType                                         */
/*                                                            */
/**************************************************************/

#define TV_PreviewDataIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* PreviewDataIDType;

EXTERN int asn1E_PreviewDataIDType (OSCTXT* pctxt,
   PreviewDataIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_PreviewDataIDType (OSCTXT* pctxt,
   PreviewDataIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PreviewDataIDType (OSCTXT* pctxt, PreviewDataIDType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PreviewDataIDType (OSCTXT* pctxt, PreviewDataIDType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PreviewDataIDType
   (const char* name, PreviewDataIDType pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateType                                          */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateType	(TM_UNIV|TM_PRIM|2)

typedef OSUINT32 RelativeDateType;

EXTERN int asn1E_RelativeDateType (OSCTXT* pctxt,
   RelativeDateType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateType (OSCTXT* pctxt,
   RelativeDateType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateType (OSCTXT* pctxt, RelativeDateType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateType (OSCTXT* pctxt, RelativeDateType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_RelativeDateType
   (const char* name, RelativeDateType* pvalue);

/**************************************************************/
/*                                                            */
/*  ContentIDType                                             */
/*                                                            */
/**************************************************************/

#define TV_ContentIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* ContentIDType;

EXTERN int asn1E_ContentIDType (OSCTXT* pctxt,
   ContentIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContentIDType (OSCTXT* pctxt,
   ContentIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContentIDType (OSCTXT* pctxt, ContentIDType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContentIDType (OSCTXT* pctxt, ContentIDType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ContentIDType
   (const char* name, ContentIDType pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduleIDType                                            */
/*                                                            */
/**************************************************************/

#define TV_ScheduleIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* ScheduleIDType;

EXTERN int asn1E_ScheduleIDType (OSCTXT* pctxt,
   ScheduleIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduleIDType (OSCTXT* pctxt,
   ScheduleIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduleIDType (OSCTXT* pctxt, ScheduleIDType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduleIDType (OSCTXT* pctxt, ScheduleIDType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ScheduleIDType
   (const char* name, ScheduleIDType pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceIDType                                             */
/*                                                            */
/**************************************************************/

#define TV_ServiceIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* ServiceIDType;

EXTERN int asn1E_ServiceIDType (OSCTXT* pctxt,
   ServiceIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_ServiceIDType (OSCTXT* pctxt,
   ServiceIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ServiceIDType (OSCTXT* pctxt, ServiceIDType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ServiceIDType (OSCTXT* pctxt, ServiceIDType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ServiceIDType
   (const char* name, ServiceIDType pvalue);

/**************************************************************/
/*                                                            */
/*  AccessIDType                                              */
/*                                                            */
/**************************************************************/

#define TV_AccessIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* AccessIDType;

EXTERN int asn1E_AccessIDType (OSCTXT* pctxt,
   AccessIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessIDType (OSCTXT* pctxt,
   AccessIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessIDType (OSCTXT* pctxt, AccessIDType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessIDType (OSCTXT* pctxt, AccessIDType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessIDType
   (const char* name, AccessIDType pvalue);

/**************************************************************/
/*                                                            */
/*  TextType                                                  */
/*                                                            */
/**************************************************************/

#define TV_TextType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* TextType;

EXTERN int asn1E_TextType (OSCTXT* pctxt,
   TextType pvalue, ASN1TagType tagging);

EXTERN int asn1D_TextType (OSCTXT* pctxt,
   TextType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TextType (OSCTXT* pctxt, TextType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TextType (OSCTXT* pctxt, TextType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TextType
   (const char* name, TextType pvalue);

/**************************************************************/
/*                                                            */
/*  InteractivityDataIDType                                   */
/*                                                            */
/**************************************************************/

#define TV_InteractivityDataIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* InteractivityDataIDType;

EXTERN int asn1E_InteractivityDataIDType (OSCTXT* pctxt,
   InteractivityDataIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_InteractivityDataIDType (OSCTXT* pctxt,
   InteractivityDataIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InteractivityDataIDType (OSCTXT* pctxt, 
   InteractivityDataIDType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InteractivityDataIDType (OSCTXT* pctxt, 
   InteractivityDataIDType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_InteractivityDataIDType
   (const char* name, InteractivityDataIDType pvalue);

/**************************************************************/
/*                                                            */
/*  InteractivityMediaIDType                                  */
/*                                                            */
/**************************************************************/

#define TV_InteractivityMediaIDType	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* InteractivityMediaIDType;

EXTERN int asn1E_InteractivityMediaIDType (OSCTXT* pctxt,
   InteractivityMediaIDType pvalue, ASN1TagType tagging);

EXTERN int asn1D_InteractivityMediaIDType (OSCTXT* pctxt,
   InteractivityMediaIDType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InteractivityMediaIDType (OSCTXT* pctxt, 
   InteractivityMediaIDType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InteractivityMediaIDType (OSCTXT* pctxt, 
   InteractivityMediaIDType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_InteractivityMediaIDType
   (const char* name, InteractivityMediaIDType pvalue);

/**************************************************************/
/*                                                            */
/*  TargetUserProfileType                                     */
/*                                                            */
/**************************************************************/

#define TV_TargetUserProfileType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TargetUserProfileType {
   const OSUTF8CHAR* profileAttributeName;
   const OSUTF8CHAR* profileAttributeValue;
} TargetUserProfileType;

EXTERN int asn1E_TargetUserProfileType (OSCTXT* pctxt,
   TargetUserProfileType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TargetUserProfileType (OSCTXT* pctxt,
   TargetUserProfileType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TargetUserProfileType (OSCTXT* pctxt, 
   TargetUserProfileType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TargetUserProfileType (OSCTXT* pctxt, 
   TargetUserProfileType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TargetUserProfileType
   (const char* name, TargetUserProfileType* pvalue);

EXTERN int DOMTest_TargetUserProfileType (OSCTXT* pctxt, 
   TargetUserProfileType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TargetUserProfileType (TargetUserProfileType* pvalue);

/**************************************************************/
/*                                                            */
/*  PreviewDataIDRefType                                      */
/*                                                            */
/**************************************************************/

#define TV_PreviewDataIDRefType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PreviewDataIDRefType {
   struct {
      unsigned usagePresent : 1;
   } m;
   OSINT8 usage;
   const OSUTF8CHAR* base;
} PreviewDataIDRefType;

EXTERN int asn1E_PreviewDataIDRefType (OSCTXT* pctxt,
   PreviewDataIDRefType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PreviewDataIDRefType (OSCTXT* pctxt,
   PreviewDataIDRefType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PreviewDataIDRefType (OSCTXT* pctxt, 
   PreviewDataIDRefType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PreviewDataIDRefType (OSCTXT* pctxt, 
   PreviewDataIDRefType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PreviewDataIDRefType
   (const char* name, PreviewDataIDRefType* pvalue);

EXTERN int DOMTest_PreviewDataIDRefType (OSCTXT* pctxt, PreviewDataIDRefType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PreviewDataIDRefType (PreviewDataIDRefType* pvalue);

/**************************************************************/
/*                                                            */
/*  Broadcast_areaType_target_area                            */
/*                                                            */
/**************************************************************/

#define TV_Broadcast_areaType_target_area	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Broadcast_areaType_target_area {
   struct {
      unsigned shapePresent : 1;
      unsigned ccPresent : 1;
      unsigned name_areaPresent : 1;
      unsigned zip_codePresent : 1;
      unsigned cell_Group_IDPresent : 1;
   } m;
   const OSUTF8CHAR* shape;
   const OSUTF8CHAR* cc;
   const OSUTF8CHAR* name_area;
   OSINT32 zip_code;
   /* List of const OSUTF8CHAR* */
   OSRTDList cell_ID_list;
   const OSUTF8CHAR* cell_Group_ID;
} Broadcast_areaType_target_area;

EXTERN int asn1E_Broadcast_areaType_target_area (OSCTXT* pctxt,
   Broadcast_areaType_target_area *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Broadcast_areaType_target_area (OSCTXT* pctxt,
   Broadcast_areaType_target_area *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Broadcast_areaType_target_area (OSCTXT* pctxt, 
   Broadcast_areaType_target_area* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Broadcast_areaType_target_area (OSCTXT* pctxt, 
   Broadcast_areaType_target_area* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Broadcast_areaType_target_area
   (const char* name, Broadcast_areaType_target_area* pvalue);

EXTERN int DOMTest_Broadcast_areaType_target_area (OSCTXT* pctxt, 
   Broadcast_areaType_target_area* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Broadcast_areaType_target_area (
   Broadcast_areaType_target_area* pvalue);

/**************************************************************/
/*                                                            */
/*  Broadcast_areaType                                        */
/*                                                            */
/**************************************************************/

#define TV_Broadcast_areaType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Broadcast_areaType {
   OSBOOL polarity;
   /* List of Broadcast_areaType_target_area */
   OSRTDList target_area_list;
   /* List of OSXSDAny */
   OSRTDList hor_ac_list;
} Broadcast_areaType;

EXTERN int asn1E_Broadcast_areaType (OSCTXT* pctxt,
   Broadcast_areaType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Broadcast_areaType (OSCTXT* pctxt,
   Broadcast_areaType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Broadcast_areaType (OSCTXT* pctxt, 
   Broadcast_areaType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Broadcast_areaType (OSCTXT* pctxt, 
   Broadcast_areaType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Broadcast_areaType
   (const char* name, Broadcast_areaType* pvalue);

EXTERN int DOMTest_Broadcast_areaType (OSCTXT* pctxt, Broadcast_areaType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Broadcast_areaType (Broadcast_areaType* pvalue);

/**************************************************************/
/*                                                            */
/*  ServiceType                                               */
/*                                                            */
/**************************************************************/

#define TV_ServiceType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ServiceType {
   struct {
      unsigned serviceBaseCIDPresent : 1;
      unsigned serviceProtectionPresent : 1;
      unsigned weightPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned globalServiceIDPresent : 1;
      unsigned broadcast_areaPresent : 1;
   } m;
   const OSUTF8CHAR* serviceBaseCID;
   OSBOOL serviceProtection;
   OSUINT32 weight;
   const OSUTF8CHAR* id;
   OSINT8 type;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   const OSUTF8CHAR* globalServiceID;
   /* List of const OSUTF8CHAR* */
   OSRTDList name_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList parentalRating_list;
   /* List of TargetUserProfileType */
   OSRTDList targetUserProfile_list;
   /* List of GenreElementType */
   OSRTDList genre_list;
   struct  {
      OSUINT32 n;
      OSINT32 *elem;
   } userRating_list;
   /* List of PreviewDataIDRefType */
   OSRTDList previewDataIDRef_list;
   Broadcast_areaType broadcast_area;
} ServiceType;

EXTERN int asn1E_ServiceType (OSCTXT* pctxt,
   ServiceType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ServiceType (OSCTXT* pctxt,
   ServiceType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ServiceType (OSCTXT* pctxt, ServiceType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ServiceType (OSCTXT* pctxt, ServiceType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ServiceType
   (const char* name, ServiceType* pvalue);

EXTERN int DOMTest_ServiceType (OSCTXT* pctxt, ServiceType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ServiceType (ServiceType* pvalue);

/**************************************************************/
/*                                                            */
/*  Distribution_WindowType_repeatType                        */
/*                                                            */
/**************************************************************/

#define TV_Distribution_WindowType_repeatType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Distribution_WindowType_repeatType {
   OSINT32 num;
   OSINT32 unit;
} Distribution_WindowType_repeatType;

EXTERN int asn1E_Distribution_WindowType_repeatType (OSCTXT* pctxt,
   Distribution_WindowType_repeatType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Distribution_WindowType_repeatType (OSCTXT* pctxt,
   Distribution_WindowType_repeatType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Distribution_WindowType_repeatType (OSCTXT* pctxt, 
   Distribution_WindowType_repeatType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Distribution_WindowType_repeatType (OSCTXT* pctxt, 
   Distribution_WindowType_repeatType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Distribution_WindowType_repeatType
   (const char* name, Distribution_WindowType_repeatType* pvalue);

EXTERN int DOMTest_Distribution_WindowType_repeatType (OSCTXT* pctxt, 
   Distribution_WindowType_repeatType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Distribution_WindowType_repeatType (
   Distribution_WindowType_repeatType* pvalue);

/**************************************************************/
/*                                                            */
/*  Distribution_WindowType                                   */
/*                                                            */
/**************************************************************/

#define TV_Distribution_WindowType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Distribution_WindowType {
   struct {
      unsigned dWidPresent : 1;
      unsigned distribution_End_TimePresent : 1;
      unsigned distribution_Start_TimePresent : 1;
      unsigned durationPresent : 1;
      unsigned repeatTypePresent : 1;
   } m;
   OSINT32 dWid;
   OSUINT32 distribution_End_Time;
   OSUINT32 distribution_Start_Time;
   OSINT32 duration;
   Distribution_WindowType_repeatType repeatType;
} Distribution_WindowType;

EXTERN int asn1E_Distribution_WindowType (OSCTXT* pctxt,
   Distribution_WindowType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Distribution_WindowType (OSCTXT* pctxt,
   Distribution_WindowType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Distribution_WindowType (OSCTXT* pctxt, 
   Distribution_WindowType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Distribution_WindowType (OSCTXT* pctxt, 
   Distribution_WindowType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Distribution_WindowType
   (const char* name, Distribution_WindowType* pvalue);

EXTERN int DOMTest_Distribution_WindowType (OSCTXT* pctxt, 
   Distribution_WindowType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Distribution_WindowType (Distribution_WindowType* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduleType_interactivityDataIDRef                       */
/*                                                            */
/**************************************************************/

#define TV_ScheduleType_interactivityDataIDRef	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ScheduleType_interactivityDataIDRef {
   struct {
      unsigned autoStartPresent : 1;
   } m;
   OSBOOL autoStart;
   const OSUTF8CHAR* idRef;
   /* List of Distribution_WindowType */
   OSRTDList distribution_Window_list;
} ScheduleType_interactivityDataIDRef;

EXTERN int asn1E_ScheduleType_interactivityDataIDRef (OSCTXT* pctxt,
   ScheduleType_interactivityDataIDRef *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduleType_interactivityDataIDRef (OSCTXT* pctxt,
   ScheduleType_interactivityDataIDRef *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduleType_interactivityDataIDRef (OSCTXT* pctxt, 
   ScheduleType_interactivityDataIDRef* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduleType_interactivityDataIDRef (OSCTXT* pctxt, 
   ScheduleType_interactivityDataIDRef* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ScheduleType_interactivityDataIDRef
   (const char* name, ScheduleType_interactivityDataIDRef* pvalue);

EXTERN int DOMTest_ScheduleType_interactivityDataIDRef (OSCTXT* pctxt, 
   ScheduleType_interactivityDataIDRef* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScheduleType_interactivityDataIDRef (
   ScheduleType_interactivityDataIDRef* pvalue);

/**************************************************************/
/*                                                            */
/*  Presentation_WindowType_repeatType                        */
/*                                                            */
/**************************************************************/

#define TV_Presentation_WindowType_repeatType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Presentation_WindowType_repeatType {
   OSINT32 num;
   OSINT32 unit;
} Presentation_WindowType_repeatType;

EXTERN int asn1E_Presentation_WindowType_repeatType (OSCTXT* pctxt,
   Presentation_WindowType_repeatType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Presentation_WindowType_repeatType (OSCTXT* pctxt,
   Presentation_WindowType_repeatType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Presentation_WindowType_repeatType (OSCTXT* pctxt, 
   Presentation_WindowType_repeatType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Presentation_WindowType_repeatType (OSCTXT* pctxt, 
   Presentation_WindowType_repeatType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Presentation_WindowType_repeatType
   (const char* name, Presentation_WindowType_repeatType* pvalue);

EXTERN int DOMTest_Presentation_WindowType_repeatType (OSCTXT* pctxt, 
   Presentation_WindowType_repeatType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Presentation_WindowType_repeatType (
   Presentation_WindowType_repeatType* pvalue);

/**************************************************************/
/*                                                            */
/*  Presentation_WindowType                                   */
/*                                                            */
/**************************************************************/

#define TV_Presentation_WindowType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Presentation_WindowType {
   struct {
      unsigned durationPresent : 1;
      unsigned pWidPresent : 1;
      unsigned presentation_End_TimePresent : 1;
      unsigned presentation_Start_TimePresent : 1;
      unsigned repeatTypePresent : 1;
   } m;
   OSINT32 duration;
   OSINT32 pWid;
   RelativeDateType presentation_End_Time;
   RelativeDateType presentation_Start_Time;
   Presentation_WindowType_repeatType repeatType;
} Presentation_WindowType;

EXTERN int asn1E_Presentation_WindowType (OSCTXT* pctxt,
   Presentation_WindowType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Presentation_WindowType (OSCTXT* pctxt,
   Presentation_WindowType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Presentation_WindowType (OSCTXT* pctxt, 
   Presentation_WindowType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Presentation_WindowType (OSCTXT* pctxt, 
   Presentation_WindowType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_Presentation_WindowType
   (const char* name, Presentation_WindowType* pvalue);

EXTERN int DOMTest_Presentation_WindowType (OSCTXT* pctxt, 
   Presentation_WindowType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Presentation_WindowType (Presentation_WindowType* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduleType_contentIDRef                                 */
/*                                                            */
/**************************************************************/

#define TV_ScheduleType_contentIDRef	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ScheduleType_contentIDRef {
   struct {
      unsigned autoStartPresent : 1;
      unsigned repeatPlaybackPresent : 1;
   } m;
   OSBOOL autoStart;
   OSBOOL repeatPlayback;
   ContentIDType idRef;
   /* List of Distribution_WindowType */
   OSRTDList distribution_Window_list;
   /* List of Presentation_WindowType */
   OSRTDList presentation_Window_list;
} ScheduleType_contentIDRef;

EXTERN int asn1E_ScheduleType_contentIDRef (OSCTXT* pctxt,
   ScheduleType_contentIDRef *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduleType_contentIDRef (OSCTXT* pctxt,
   ScheduleType_contentIDRef *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduleType_contentIDRef (OSCTXT* pctxt, 
   ScheduleType_contentIDRef* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduleType_contentIDRef (OSCTXT* pctxt, 
   ScheduleType_contentIDRef* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ScheduleType_contentIDRef
   (const char* name, ScheduleType_contentIDRef* pvalue);

EXTERN int DOMTest_ScheduleType_contentIDRef (OSCTXT* pctxt, 
   ScheduleType_contentIDRef* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScheduleType_contentIDRef (ScheduleType_contentIDRef* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduleType                                              */
/*                                                            */
/**************************************************************/

#define TV_ScheduleType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ScheduleType {
   struct {
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
   } m;
   ServiceIDType serviceIDRef;
   ScheduleIDType id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of ScheduleType_interactivityDataIDRef */
   OSRTDList interactivityDataIDRef_list;
   /* List of ScheduleType_contentIDRef */
   OSRTDList contentIDRef_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList name_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   /* List of PreviewDataIDRefType */
   OSRTDList previewDataIDRef_list;
} ScheduleType;

EXTERN int asn1E_ScheduleType (OSCTXT* pctxt,
   ScheduleType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduleType (OSCTXT* pctxt,
   ScheduleType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduleType (OSCTXT* pctxt, ScheduleType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduleType (OSCTXT* pctxt, ScheduleType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ScheduleType
   (const char* name, ScheduleType* pvalue);

EXTERN int DOMTest_ScheduleType (OSCTXT* pctxt, ScheduleType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScheduleType (ScheduleType* pvalue);

/**************************************************************/
/*                                                            */
/*  FileType                                                  */
/*                                                            */
/**************************************************************/

#define TV_FileType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FileType {
   struct {
      unsigned content_EncodingPresent : 1;
      unsigned content_LengthPresent : 1;
      unsigned content_MD5Present : 1;
      unsigned content_TypePresent : 1;
      unsigned fEC_OTI_Encoding_Symbol_LengthPresent : 1;
      unsigned fEC_OTI_FEC_Instance_IDPresent : 1;
      unsigned fEC_OTI_Max_Number_of_Encoding_SymbolsPresent : 1;
      unsigned fEC_OTI_Maximum_Source_Block_LengthPresent : 1;
      unsigned transfer_LengthPresent : 1;
   } m;
   const OSUTF8CHAR* content_Encoding;
   OSUINT64 content_Length;
   const OSUTF8CHAR* content_Location;
   ASN1DynOctStr content_MD5;
   const OSUTF8CHAR* content_Type;
   OSUINT64 fEC_OTI_Encoding_Symbol_Length;
   OSUINT64 fEC_OTI_FEC_Instance_ID;
   OSUINT64 fEC_OTI_Max_Number_of_Encoding_Symbols;
   OSUINT64 fEC_OTI_Maximum_Source_Block_Length;
   OSUINT32 tOI;
   OSUINT64 transfer_Length;
} FileType;

EXTERN int asn1E_FileType (OSCTXT* pctxt,
   FileType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FileType (OSCTXT* pctxt,
   FileType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FileType (OSCTXT* pctxt, FileType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FileType (OSCTXT* pctxt, FileType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_FileType
   (const char* name, FileType* pvalue);

EXTERN int DOMTest_FileType (OSCTXT* pctxt, FileType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FileType (FileType* pvalue);

/**************************************************************/
/*                                                            */
/*  FileDescriptionType                                       */
/*                                                            */
/**************************************************************/

#define TV_FileDescriptionType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FileDescriptionType {
   struct {
      unsigned content_EncodingPresent : 1;
      unsigned content_LengthPresent : 1;
      unsigned content_MD5Present : 1;
      unsigned content_TypePresent : 1;
      unsigned fEC_OTI_Encoding_Symbol_LengthPresent : 1;
      unsigned fEC_OTI_FEC_Instance_IDPresent : 1;
      unsigned fEC_OTI_Max_Number_of_Encoding_SymbolsPresent : 1;
      unsigned fEC_OTI_Maximum_Source_Block_LengthPresent : 1;
      unsigned transfer_LengthPresent : 1;
   } m;
   const OSUTF8CHAR* content_Encoding;
   OSUINT64 content_Length;
   ASN1DynOctStr content_MD5;
   const OSUTF8CHAR* content_Type;
   OSUINT64 fEC_OTI_Encoding_Symbol_Length;
   OSUINT64 fEC_OTI_FEC_Instance_ID;
   OSUINT64 fEC_OTI_Max_Number_of_Encoding_Symbols;
   OSUINT64 fEC_OTI_Maximum_Source_Block_Length;
   OSUINT64 transfer_Length;
   /* List of FileType */
   OSRTDList file_list;
} FileDescriptionType;

EXTERN int asn1E_FileDescriptionType (OSCTXT* pctxt,
   FileDescriptionType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FileDescriptionType (OSCTXT* pctxt,
   FileDescriptionType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FileDescriptionType (OSCTXT* pctxt, 
   FileDescriptionType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FileDescriptionType (OSCTXT* pctxt, 
   FileDescriptionType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_FileDescriptionType
   (const char* name, FileDescriptionType* pvalue);

EXTERN int DOMTest_FileDescriptionType (OSCTXT* pctxt, FileDescriptionType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FileDescriptionType (FileDescriptionType* pvalue);

/**************************************************************/
/*                                                            */
/*  ContentType                                               */
/*                                                            */
/**************************************************************/

#define TV_ContentType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ContentType {
   struct {
      unsigned contentTypePresent : 1;
      unsigned serviceIDRefPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned targetUserProfilePresent : 1;
      unsigned userRatingPresent : 1;
      unsigned broadcast_areaPresent : 1;
      unsigned fileDescriptionPresent : 1;
   } m;
   const OSUTF8CHAR* contentType;
   ServiceIDType serviceIDRef;
   ContentIDType id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList name_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList parentalRating_list;
   TargetUserProfileType targetUserProfile;
   /* List of GenreElementType */
   OSRTDList genre_list;
   OSINT32 userRating;
   /* List of PreviewDataIDRefType */
   OSRTDList previewDataIDRef_list;
   Broadcast_areaType broadcast_area;
   FileDescriptionType fileDescription;
} ContentType;

EXTERN int asn1E_ContentType (OSCTXT* pctxt,
   ContentType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContentType (OSCTXT* pctxt,
   ContentType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContentType (OSCTXT* pctxt, ContentType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContentType (OSCTXT* pctxt, ContentType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ContentType
   (const char* name, ContentType* pvalue);

EXTERN int DOMTest_ContentType (OSCTXT* pctxt, ContentType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ContentType (ContentType* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessTypeType_broadcastTransmission_sessionDescriptionR  */
/*                                                            */
/**************************************************************/

#define TV_AccessTypeType_broadcastTransmission_sessionDescriptionReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessTypeType_broadcastTransmission_sessionDescriptionReference {
   struct {
      unsigned uRIPresent : 1;
      unsigned idRefPresent : 1;
   } m;
   OSINT32 type;
   const OSUTF8CHAR* uRI;
   const OSUTF8CHAR* idRef;
} AccessTypeType_broadcastTransmission_sessionDescriptionReference;

EXTERN int asn1E_AccessTypeType_broadcastTransmission_sessionDescriptionReference (OSCTXT* pctxt,
   AccessTypeType_broadcastTransmission_sessionDescriptionReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessTypeType_broadcastTransmission_sessionDescriptionReference (OSCTXT* pctxt,
   AccessTypeType_broadcastTransmission_sessionDescriptionReference *pvalue, ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_AccessTypeType_broadcastTransmission_sessionDescriptionReference 
   (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission_sessionDescriptionReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_AccessTypeType_broadcastTransmission_sessionDescriptionReference 
   (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission_sessionDescriptionReference* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessTypeType_broadcastTransmission_sessionDescriptionReference
   (const char* name, AccessTypeType_broadcastTransmission_sessionDescriptionReference* pvalue);

EXTERN int DOMTest_AccessTypeType_broadcastTransmission_sessionDescriptionReference (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission_sessionDescriptionReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessTypeType_broadcastTransmission_sessionDescriptionReference (
   AccessTypeType_broadcastTransmission_sessionDescriptionReference* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessTypeType_broadcastTransmission                      */
/*                                                            */
/**************************************************************/

#define TV_AccessTypeType_broadcastTransmission	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessTypeType_broadcastTransmission {
   struct {
      unsigned iPAddressPresent : 1;
      unsigned sDPPresent : 1;
   } m;
   const OSUTF8CHAR* iPAddress;
   /* List of AccessTypeType_broadcastTransmission_sessionDescriptionReference */
   OSRTDList sessionDescriptionReference_list;
   const OSUTF8CHAR* sDP;
} AccessTypeType_broadcastTransmission;

EXTERN int asn1E_AccessTypeType_broadcastTransmission (OSCTXT* pctxt,
   AccessTypeType_broadcastTransmission *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessTypeType_broadcastTransmission (OSCTXT* pctxt,
   AccessTypeType_broadcastTransmission *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessTypeType_broadcastTransmission (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessTypeType_broadcastTransmission (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessTypeType_broadcastTransmission
   (const char* name, AccessTypeType_broadcastTransmission* pvalue);

EXTERN int DOMTest_AccessTypeType_broadcastTransmission (OSCTXT* pctxt, 
   AccessTypeType_broadcastTransmission* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessTypeType_broadcastTransmission (
   AccessTypeType_broadcastTransmission* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessTypeType_interactiveTransmissionScheme              */
/*                                                            */
/**************************************************************/

#define TV_AccessTypeType_interactiveTransmissionScheme	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessTypeType_interactiveTransmissionScheme {
   OSINT32 transmissionSchemeType;
   /* List of const OSUTF8CHAR* */
   OSRTDList accessServerIPAddress_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList accessServerURL_list;
   struct  {
      OSUINT32 n;
      OSINT32 *elem;
   } accessServerPhoneNumber_list;
} AccessTypeType_interactiveTransmissionScheme;

EXTERN int asn1E_AccessTypeType_interactiveTransmissionScheme (OSCTXT* pctxt,
   AccessTypeType_interactiveTransmissionScheme *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessTypeType_interactiveTransmissionScheme (OSCTXT* pctxt,
   AccessTypeType_interactiveTransmissionScheme *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessTypeType_interactiveTransmissionScheme (OSCTXT* pctxt, 
   AccessTypeType_interactiveTransmissionScheme* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessTypeType_interactiveTransmissionScheme (OSCTXT* pctxt, 
   AccessTypeType_interactiveTransmissionScheme* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessTypeType_interactiveTransmissionScheme
   (const char* name, AccessTypeType_interactiveTransmissionScheme* pvalue);

EXTERN int DOMTest_AccessTypeType_interactiveTransmissionScheme (OSCTXT* pctxt, 
   AccessTypeType_interactiveTransmissionScheme* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessTypeType_interactiveTransmissionScheme (
   AccessTypeType_interactiveTransmissionScheme* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessTypeType                                            */
/*                                                            */
/**************************************************************/

#define TV_AccessTypeType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessTypeType {
   struct {
      unsigned broadcastTransmissionPresent : 1;
      unsigned interactiveTransmissionSchemePresent : 1;
   } m;
   OSINT32 transmissionMedia;
   AccessTypeType_broadcastTransmission broadcastTransmission;
   AccessTypeType_interactiveTransmissionScheme interactiveTransmissionScheme;
} AccessTypeType;

EXTERN int asn1E_AccessTypeType (OSCTXT* pctxt,
   AccessTypeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessTypeType (OSCTXT* pctxt,
   AccessTypeType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessTypeType (OSCTXT* pctxt, AccessTypeType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessTypeType (OSCTXT* pctxt, AccessTypeType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessTypeType
   (const char* name, AccessTypeType* pvalue);

EXTERN int DOMTest_AccessTypeType (OSCTXT* pctxt, AccessTypeType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessTypeType (AccessTypeType* pvalue);

/**************************************************************/
/*                                                            */
/*  KMSType                                                   */
/*                                                            */
/**************************************************************/

#define TV_KMSType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN KMSType {
   struct {
      unsigned rightsIssuerURIPresent : 1;
      unsigned protectionTypePresent : 1;
   } m;
   const OSUTF8CHAR* rightsIssuerURI;
   OSINT32 protectionType;
   const OSUTF8CHAR* base;
} KMSType;

EXTERN int asn1E_KMSType (OSCTXT* pctxt,
   KMSType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_KMSType (OSCTXT* pctxt,
   KMSType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_KMSType (OSCTXT* pctxt, KMSType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_KMSType (OSCTXT* pctxt, KMSType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_KMSType
   (const char* name, KMSType* pvalue);

EXTERN int DOMTest_KMSType (OSCTXT* pctxt, KMSType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_KMSType (KMSType* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessType_scheduleIDRef                                  */
/*                                                            */
/**************************************************************/

#define TV_AccessType_scheduleIDRef	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessType_scheduleIDRef {
   struct {
      unsigned distributionWindowIDPresent : 1;
   } m;
   const OSUTF8CHAR* distributionWindowID;
   const OSUTF8CHAR* base;
} AccessType_scheduleIDRef;

EXTERN int asn1E_AccessType_scheduleIDRef (OSCTXT* pctxt,
   AccessType_scheduleIDRef *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessType_scheduleIDRef (OSCTXT* pctxt,
   AccessType_scheduleIDRef *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessType_scheduleIDRef (OSCTXT* pctxt, 
   AccessType_scheduleIDRef* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessType_scheduleIDRef (OSCTXT* pctxt, 
   AccessType_scheduleIDRef* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessType_scheduleIDRef
   (const char* name, AccessType_scheduleIDRef* pvalue);

EXTERN int DOMTest_AccessType_scheduleIDRef (OSCTXT* pctxt, 
   AccessType_scheduleIDRef* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessType_scheduleIDRef (AccessType_scheduleIDRef* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessType_choice                                         */
/*                                                            */
/**************************************************************/

#define TV_AccessType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AccessType_choice_serviceIDRef_list 1
#define T_AccessType_choice_scheduleIDRef_list 2

typedef struct EXTERN AccessType_choice {
   int t;
   union {
      /* t = 1 */
      /* List of ServiceIDType */
      OSRTDList *serviceIDRef_list;
      /* t = 2 */
      /* List of AccessType_scheduleIDRef */
      OSRTDList *scheduleIDRef_list;
   } u;
} AccessType_choice;

EXTERN int asn1E_AccessType_choice (OSCTXT* pctxt,
   AccessType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessType_choice (OSCTXT* pctxt,
   AccessType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessType_choice (OSCTXT* pctxt, AccessType_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessType_choice (OSCTXT* pctxt, AccessType_choice* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessType_choice
   (const char* name, AccessType_choice* pvalue);

EXTERN int DOMTest_AccessType_choice (OSCTXT* pctxt, AccessType_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessType_choice (AccessType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType_video_bitrate           */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType_video_bitrate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType_video_bitrate {
   struct {
      unsigned averagePresent : 1;
      unsigned maximumPresent : 1;
   } m;
   OSUINT16 average;
   OSUINT16 maximum;
} TerminalCapabilityRequirementType_video_bitrate;

EXTERN int asn1E_TerminalCapabilityRequirementType_video_bitrate (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video_bitrate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType_video_bitrate (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video_bitrate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType_video_bitrate 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_video_bitrate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType_video_bitrate 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_video_bitrate* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType_video_bitrate
   (const char* name, TerminalCapabilityRequirementType_video_bitrate* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType_video_bitrate (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_video_bitrate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType_video_bitrate (
   TerminalCapabilityRequirementType_video_bitrate* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType_video_resolution        */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType_video_resolution	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType_video_resolution {
   OSUINT16 horizontal;
   OSUINT16 vertical;
} TerminalCapabilityRequirementType_video_resolution;

EXTERN int asn1E_TerminalCapabilityRequirementType_video_resolution (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video_resolution *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType_video_resolution (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video_resolution *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType_video_resolution 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_video_resolution* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType_video_resolution 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_video_resolution* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType_video_resolution
   (const char* name, TerminalCapabilityRequirementType_video_resolution* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType_video_resolution (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_video_resolution* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType_video_resolution (
   TerminalCapabilityRequirementType_video_resolution* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType_video                   */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType_video	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType_video {
   struct {
      unsigned bitratePresent : 1;
      unsigned resolutionPresent : 1;
      unsigned minimumBufferSizePresent : 1;
   } m;
   TerminalCapabilityRequirementType_video_bitrate bitrate;
   TerminalCapabilityRequirementType_video_resolution resolution;
   OSUINT32 minimumBufferSize;
} TerminalCapabilityRequirementType_video;

EXTERN int asn1E_TerminalCapabilityRequirementType_video (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType_video (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_video *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType_video (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_video* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType_video (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_video* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType_video
   (const char* name, TerminalCapabilityRequirementType_video* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType_video (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_video* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType_video (
   TerminalCapabilityRequirementType_video* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType_audio_bitrate           */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType_audio_bitrate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType_audio_bitrate {
   struct {
      unsigned averagePresent : 1;
      unsigned maximumPresent : 1;
   } m;
   OSUINT16 average;
   OSUINT16 maximum;
} TerminalCapabilityRequirementType_audio_bitrate;

EXTERN int asn1E_TerminalCapabilityRequirementType_audio_bitrate (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_audio_bitrate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType_audio_bitrate (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_audio_bitrate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType_audio_bitrate 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_audio_bitrate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType_audio_bitrate 
   (OSCTXT* pctxt, TerminalCapabilityRequirementType_audio_bitrate* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType_audio_bitrate
   (const char* name, TerminalCapabilityRequirementType_audio_bitrate* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType_audio_bitrate (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_audio_bitrate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType_audio_bitrate (
   TerminalCapabilityRequirementType_audio_bitrate* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType_audio                   */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType_audio	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType_audio {
   struct {
      unsigned bitratePresent : 1;
      unsigned minimumBufferSizePresent : 1;
   } m;
   TerminalCapabilityRequirementType_audio_bitrate bitrate;
   OSUINT32 minimumBufferSize;
} TerminalCapabilityRequirementType_audio;

EXTERN int asn1E_TerminalCapabilityRequirementType_audio (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_audio *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType_audio (OSCTXT* pctxt,
   TerminalCapabilityRequirementType_audio *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType_audio (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_audio* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType_audio (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_audio* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType_audio
   (const char* name, TerminalCapabilityRequirementType_audio* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType_audio (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType_audio* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType_audio (
   TerminalCapabilityRequirementType_audio* pvalue);

/**************************************************************/
/*                                                            */
/*  TerminalCapabilityRequirementType                         */
/*                                                            */
/**************************************************************/

#define TV_TerminalCapabilityRequirementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TerminalCapabilityRequirementType {
   struct {
      unsigned videoPresent : 1;
      unsigned audioPresent : 1;
      unsigned downloadFilePresent : 1;
   } m;
   TerminalCapabilityRequirementType_video video;
   TerminalCapabilityRequirementType_audio audio;
   /* List of OSRTDList */
   OSRTDList downloadFile;
} TerminalCapabilityRequirementType;

EXTERN int asn1E_TerminalCapabilityRequirementType (OSCTXT* pctxt,
   TerminalCapabilityRequirementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TerminalCapabilityRequirementType (OSCTXT* pctxt,
   TerminalCapabilityRequirementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TerminalCapabilityRequirementType (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TerminalCapabilityRequirementType (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_TerminalCapabilityRequirementType
   (const char* name, TerminalCapabilityRequirementType* pvalue);

EXTERN int DOMTest_TerminalCapabilityRequirementType (OSCTXT* pctxt, 
   TerminalCapabilityRequirementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TerminalCapabilityRequirementType (
   TerminalCapabilityRequirementType* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationReceptionType                                 */
/*                                                            */
/**************************************************************/

#define TV_NotificationReceptionType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotificationReceptionType {
   const OSUTF8CHAR* notificationAddress;
   OSINT32 notificationPort;
} NotificationReceptionType;

EXTERN int asn1E_NotificationReceptionType (OSCTXT* pctxt,
   NotificationReceptionType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotificationReceptionType (OSCTXT* pctxt,
   NotificationReceptionType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotificationReceptionType (OSCTXT* pctxt, 
   NotificationReceptionType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotificationReceptionType (OSCTXT* pctxt, 
   NotificationReceptionType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_NotificationReceptionType
   (const char* name, NotificationReceptionType* pvalue);

EXTERN int DOMTest_NotificationReceptionType (OSCTXT* pctxt, 
   NotificationReceptionType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotificationReceptionType (NotificationReceptionType* pvalue);

/**************************************************************/
/*                                                            */
/*  AccessType                                                */
/*                                                            */
/**************************************************************/

#define TV_AccessType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AccessType {
   struct {
      unsigned audioLanguagePresent : 1;
      unsigned serviceProtectionPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned choicePresent : 1;
      unsigned terminalCapabilityRequirementPresent : 1;
      unsigned bandwidthRequirementPresent : 1;
      unsigned notificationReceptionPresent : 1;
   } m;
   const OSUTF8CHAR* audioLanguage;
   OSBOOL serviceProtection;
   AccessIDType id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   AccessTypeType accessType;
   /* List of KMSType */
   OSRTDList keyManagementSystem_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   AccessType_choice choice;
   /* List of const OSUTF8CHAR* */
   OSRTDList usageInfo_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList alternativeAccessURL_list;
   TerminalCapabilityRequirementType terminalCapabilityRequirement;
   OSINT32 bandwidthRequirement;
   /* List of const OSUTF8CHAR* */
   OSRTDList serviceClass_list;
   /* List of PreviewDataIDRefType */
   OSRTDList previewDataIDRef_list;
   NotificationReceptionType notificationReception;
} AccessType;

EXTERN int asn1E_AccessType (OSCTXT* pctxt,
   AccessType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AccessType (OSCTXT* pctxt,
   AccessType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AccessType (OSCTXT* pctxt, AccessType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AccessType (OSCTXT* pctxt, AccessType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AccessType
   (const char* name, AccessType* pvalue);

EXTERN int DOMTest_AccessType (OSCTXT* pctxt, AccessType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AccessType (AccessType* pvalue);

/**************************************************************/
/*                                                            */
/*  PictureType                                               */
/*                                                            */
/**************************************************************/

#define TV_PictureType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PictureType {
   struct {
      unsigned pictureURIPresent : 1;
      unsigned pictureDataPresent : 1;
      unsigned codecPresent : 1;
      unsigned alternativeTextPresent : 1;
   } m;
   const OSUTF8CHAR* pictureURI;
   ASN1DynOctStr pictureData;
   OSINT32 codec;
   TextType alternativeText;
} PictureType;

EXTERN int asn1E_PictureType (OSCTXT* pctxt,
   PictureType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PictureType (OSCTXT* pctxt,
   PictureType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PictureType (OSCTXT* pctxt, PictureType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PictureType (OSCTXT* pctxt, PictureType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PictureType
   (const char* name, PictureType* pvalue);

EXTERN int DOMTest_PictureType (OSCTXT* pctxt, PictureType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PictureType (PictureType* pvalue);

/**************************************************************/
/*                                                            */
/*  VideoType                                                 */
/*                                                            */
/**************************************************************/

#define TV_VideoType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN VideoType {
   struct {
      unsigned codecPresent : 1;
      unsigned alternativeTextPresent : 1;
      unsigned alternativePicturePresent : 1;
   } m;
   const OSUTF8CHAR* videoURI;
   OSINT32 codec;
   TextType alternativeText;
   PictureType alternativePicture;
} VideoType;

EXTERN int asn1E_VideoType (OSCTXT* pctxt,
   VideoType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VideoType (OSCTXT* pctxt,
   VideoType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_VideoType (OSCTXT* pctxt, VideoType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VideoType (OSCTXT* pctxt, VideoType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_VideoType
   (const char* name, VideoType* pvalue);

EXTERN int DOMTest_VideoType (OSCTXT* pctxt, VideoType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_VideoType (VideoType* pvalue);

/**************************************************************/
/*                                                            */
/*  AudioType                                                 */
/*                                                            */
/**************************************************************/

#define TV_AudioType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AudioType {
   struct {
      unsigned codecPresent : 1;
      unsigned alternativeTextPresent : 1;
      unsigned alternativePicturePresent : 1;
   } m;
   const OSUTF8CHAR* audioURI;
   OSINT32 codec;
   TextType alternativeText;
   PictureType alternativePicture;
} AudioType;

EXTERN int asn1E_AudioType (OSCTXT* pctxt,
   AudioType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AudioType (OSCTXT* pctxt,
   AudioType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AudioType (OSCTXT* pctxt, AudioType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AudioType (OSCTXT* pctxt, AudioType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_AudioType
   (const char* name, AudioType* pvalue);

EXTERN int DOMTest_AudioType (OSCTXT* pctxt, AudioType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AudioType (AudioType* pvalue);

/**************************************************************/
/*                                                            */
/*  PreviewDataType                                           */
/*                                                            */
/**************************************************************/

#define TV_PreviewDataType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PreviewDataType {
   struct {
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned sMILPresent : 1;
      unsigned videoPresent : 1;
      unsigned audioPresent : 1;
      unsigned picturePresent : 1;
      unsigned textPresent : 1;
      unsigned accessIDRefPresent : 1;
   } m;
   PreviewDataIDType id;
   OSINT32 validFrom;
   OSINT32 validTo;
   OSUINT32 version;
   const OSUTF8CHAR* sMIL;
   VideoType video;
   AudioType audio;
   PictureType picture;
   TextType text;
   AccessIDType accessIDRef;
} PreviewDataType;

EXTERN int asn1E_PreviewDataType (OSCTXT* pctxt,
   PreviewDataType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PreviewDataType (OSCTXT* pctxt,
   PreviewDataType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PreviewDataType (OSCTXT* pctxt, PreviewDataType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PreviewDataType (OSCTXT* pctxt, PreviewDataType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PreviewDataType
   (const char* name, PreviewDataType* pvalue);

EXTERN int DOMTest_PreviewDataType (OSCTXT* pctxt, PreviewDataType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PreviewDataType (PreviewDataType* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseItemType                                          */
/*                                                            */
/**************************************************************/

#define TV_PurchaseItemType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseItemType {
   struct {
      unsigned weightPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned parentalRatingPresent : 1;
   } m;
   OSUINT32 weight;
   const OSUTF8CHAR* id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList serviceIDRef_list;
   /* List of ScheduleIDType */
   OSRTDList scheduleIDRef_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList contentIDRef_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList name_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   OSINT32 parentalRating;
   /* List of const OSUTF8CHAR* */
   OSRTDList purchaseDataIDRef_list;
} PurchaseItemType;

EXTERN int asn1E_PurchaseItemType (OSCTXT* pctxt,
   PurchaseItemType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseItemType (OSCTXT* pctxt,
   PurchaseItemType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseItemType (OSCTXT* pctxt, PurchaseItemType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseItemType (OSCTXT* pctxt, PurchaseItemType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseItemType
   (const char* name, PurchaseItemType* pvalue);

EXTERN int DOMTest_PurchaseItemType (OSCTXT* pctxt, PurchaseItemType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseItemType (PurchaseItemType* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType_priceInfo_subscriptionUnit               */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType_priceInfo_subscriptionUnit	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType_priceInfo_subscriptionUnit {
   OSINT32 type;
   OSINT32 unit;
   OSINT32 value;
} PurchaseDataType_priceInfo_subscriptionUnit;

EXTERN int asn1E_PurchaseDataType_priceInfo_subscriptionUnit (OSCTXT* pctxt,
   PurchaseDataType_priceInfo_subscriptionUnit *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType_priceInfo_subscriptionUnit (OSCTXT* pctxt,
   PurchaseDataType_priceInfo_subscriptionUnit *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType_priceInfo_subscriptionUnit (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_subscriptionUnit* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType_priceInfo_subscriptionUnit (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_subscriptionUnit* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType_priceInfo_subscriptionUnit
   (const char* name, PurchaseDataType_priceInfo_subscriptionUnit* pvalue);

EXTERN int DOMTest_PurchaseDataType_priceInfo_subscriptionUnit (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_subscriptionUnit* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType_priceInfo_subscriptionUnit (
   PurchaseDataType_priceInfo_subscriptionUnit* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType_priceInfo_price                          */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType_priceInfo_price	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType_priceInfo_price {
   const OSUTF8CHAR* currency;
   OSINT32 value;
} PurchaseDataType_priceInfo_price;

EXTERN int asn1E_PurchaseDataType_priceInfo_price (OSCTXT* pctxt,
   PurchaseDataType_priceInfo_price *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType_priceInfo_price (OSCTXT* pctxt,
   PurchaseDataType_priceInfo_price *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType_priceInfo_price (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_price* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType_priceInfo_price (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_price* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType_priceInfo_price
   (const char* name, PurchaseDataType_priceInfo_price* pvalue);

EXTERN int DOMTest_PurchaseDataType_priceInfo_price (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo_price* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType_priceInfo_price (
   PurchaseDataType_priceInfo_price* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType_priceInfo                                */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType_priceInfo	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType_priceInfo {
   PurchaseDataType_priceInfo_subscriptionUnit subscriptionUnit;
   const OSUTF8CHAR* unitText;
   /* List of PurchaseDataType_priceInfo_price */
   OSRTDList price_list;
} PurchaseDataType_priceInfo;

EXTERN int asn1E_PurchaseDataType_priceInfo (OSCTXT* pctxt,
   PurchaseDataType_priceInfo *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType_priceInfo (OSCTXT* pctxt,
   PurchaseDataType_priceInfo *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType_priceInfo (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType_priceInfo (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType_priceInfo
   (const char* name, PurchaseDataType_priceInfo* pvalue);

EXTERN int DOMTest_PurchaseDataType_priceInfo (OSCTXT* pctxt, 
   PurchaseDataType_priceInfo* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType_priceInfo (PurchaseDataType_priceInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType_mediaInformation                         */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType_mediaInformation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType_mediaInformation {
   const OSUTF8CHAR* idRef;
   OSINT32 usage;
} PurchaseDataType_mediaInformation;

EXTERN int asn1E_PurchaseDataType_mediaInformation (OSCTXT* pctxt,
   PurchaseDataType_mediaInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType_mediaInformation (OSCTXT* pctxt,
   PurchaseDataType_mediaInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType_mediaInformation (OSCTXT* pctxt, 
   PurchaseDataType_mediaInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType_mediaInformation (OSCTXT* pctxt, 
   PurchaseDataType_mediaInformation* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType_mediaInformation
   (const char* name, PurchaseDataType_mediaInformation* pvalue);

EXTERN int DOMTest_PurchaseDataType_mediaInformation (OSCTXT* pctxt, 
   PurchaseDataType_mediaInformation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType_mediaInformation (
   PurchaseDataType_mediaInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType_promotionInfo                            */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType_promotionInfo	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType_promotionInfo {
   struct {
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned targetUserProfilePresent : 1;
      unsigned descriptionPresent : 1;
      unsigned uRLPresent : 1;
   } m;
   OSUINT32 id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   const OSUTF8CHAR* title;
   OSXSDAny targetUserProfile;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* uRL;
} PurchaseDataType_promotionInfo;

EXTERN int asn1E_PurchaseDataType_promotionInfo (OSCTXT* pctxt,
   PurchaseDataType_promotionInfo *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType_promotionInfo (OSCTXT* pctxt,
   PurchaseDataType_promotionInfo *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType_promotionInfo (OSCTXT* pctxt, 
   PurchaseDataType_promotionInfo* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType_promotionInfo (OSCTXT* pctxt, 
   PurchaseDataType_promotionInfo* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType_promotionInfo
   (const char* name, PurchaseDataType_promotionInfo* pvalue);

EXTERN int DOMTest_PurchaseDataType_promotionInfo (OSCTXT* pctxt, 
   PurchaseDataType_promotionInfo* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType_promotionInfo (
   PurchaseDataType_promotionInfo* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseDataType                                          */
/*                                                            */
/**************************************************************/

#define TV_PurchaseDataType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseDataType {
   struct {
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   const OSUTF8CHAR* purchaseItemIDRef;
   /* List of const OSUTF8CHAR* */
   OSRTDList purchaseChannelIDRef_list;
   /* List of PurchaseDataType_priceInfo */
   OSRTDList priceInfo_list;
   /* List of PurchaseDataType_mediaInformation */
   OSRTDList mediaInformation_list;
   /* List of PurchaseDataType_promotionInfo */
   OSRTDList promotionInfo_list;
} PurchaseDataType;

EXTERN int asn1E_PurchaseDataType (OSCTXT* pctxt,
   PurchaseDataType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseDataType (OSCTXT* pctxt,
   PurchaseDataType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseDataType (OSCTXT* pctxt, PurchaseDataType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseDataType (OSCTXT* pctxt, PurchaseDataType* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseDataType
   (const char* name, PurchaseDataType* pvalue);

EXTERN int DOMTest_PurchaseDataType (OSCTXT* pctxt, PurchaseDataType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseDataType (PurchaseDataType* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseChannelType_selector                              */
/*                                                            */
/**************************************************************/

#define TV_PurchaseChannelType_selector	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseChannelType_selector {
   const OSUTF8CHAR* type;
   const OSUTF8CHAR* base;
} PurchaseChannelType_selector;

EXTERN int asn1E_PurchaseChannelType_selector (OSCTXT* pctxt,
   PurchaseChannelType_selector *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseChannelType_selector (OSCTXT* pctxt,
   PurchaseChannelType_selector *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseChannelType_selector (OSCTXT* pctxt, 
   PurchaseChannelType_selector* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseChannelType_selector (OSCTXT* pctxt, 
   PurchaseChannelType_selector* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseChannelType_selector
   (const char* name, PurchaseChannelType_selector* pvalue);

EXTERN int DOMTest_PurchaseChannelType_selector (OSCTXT* pctxt, 
   PurchaseChannelType_selector* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseChannelType_selector (
   PurchaseChannelType_selector* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseChannelType_connection_purchaseURL                */
/*                                                            */
/**************************************************************/

#define TV_PurchaseChannelType_connection_purchaseURL	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseChannelType_connection_purchaseURL {
   OSINT32 bearer;
   const OSUTF8CHAR* base;
} PurchaseChannelType_connection_purchaseURL;

EXTERN int asn1E_PurchaseChannelType_connection_purchaseURL (OSCTXT* pctxt,
   PurchaseChannelType_connection_purchaseURL *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseChannelType_connection_purchaseURL (OSCTXT* pctxt,
   PurchaseChannelType_connection_purchaseURL *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseChannelType_connection_purchaseURL (OSCTXT* pctxt, 
   PurchaseChannelType_connection_purchaseURL* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseChannelType_connection_purchaseURL (OSCTXT* pctxt, 
   PurchaseChannelType_connection_purchaseURL* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseChannelType_connection_purchaseURL
   (const char* name, PurchaseChannelType_connection_purchaseURL* pvalue);

EXTERN int DOMTest_PurchaseChannelType_connection_purchaseURL (OSCTXT* pctxt, 
   PurchaseChannelType_connection_purchaseURL* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseChannelType_connection_purchaseURL (
   PurchaseChannelType_connection_purchaseURL* pvalue);

/**************************************************************/
/*                                                            */
/*  PurchaseChannelType                                       */
/*                                                            */
/**************************************************************/

#define TV_PurchaseChannelType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PurchaseChannelType {
   struct {
      unsigned rightsIssuerURIPresent : 1;
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
      unsigned portalURLPresent : 1;
      unsigned contactInfoPresent : 1;
   } m;
   const OSUTF8CHAR* rightsIssuerURI;
   const OSUTF8CHAR* id;
   OSBOOL localflag;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   PurchaseChannelType_selector selector;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList name_list;
   const OSUTF8CHAR* portalURL;
   /* List of const OSUTF8CHAR* */
   OSRTDList description_list;
   /* List of OSRTDList */
   OSRTDList connection_list;
   const OSUTF8CHAR* contactInfo;
} PurchaseChannelType;

EXTERN int asn1E_PurchaseChannelType (OSCTXT* pctxt,
   PurchaseChannelType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PurchaseChannelType (OSCTXT* pctxt,
   PurchaseChannelType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PurchaseChannelType (OSCTXT* pctxt, 
   PurchaseChannelType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PurchaseChannelType (OSCTXT* pctxt, 
   PurchaseChannelType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_PurchaseChannelType
   (const char* name, PurchaseChannelType* pvalue);

EXTERN int DOMTest_PurchaseChannelType (OSCTXT* pctxt, PurchaseChannelType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PurchaseChannelType (PurchaseChannelType* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduleReferenceType                                     */
/*                                                            */
/**************************************************************/

#define TV_ScheduleReferenceType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ScheduleReferenceType {
   ScheduleIDType idRef;
   struct  {
      OSUINT32 n;
      OSINT32 *elem;
   } presentationWindowID_list;
} ScheduleReferenceType;

EXTERN int asn1E_ScheduleReferenceType (OSCTXT* pctxt,
   ScheduleReferenceType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduleReferenceType (OSCTXT* pctxt,
   ScheduleReferenceType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduleReferenceType (OSCTXT* pctxt, 
   ScheduleReferenceType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduleReferenceType (OSCTXT* pctxt, 
   ScheduleReferenceType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ScheduleReferenceType
   (const char* name, ScheduleReferenceType* pvalue);

EXTERN int DOMTest_ScheduleReferenceType (OSCTXT* pctxt, 
   ScheduleReferenceType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScheduleReferenceType (ScheduleReferenceType* pvalue);

/**************************************************************/
/*                                                            */
/*  InteractivityWindowType                                   */
/*                                                            */
/**************************************************************/

#define TV_InteractivityWindowType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InteractivityWindowType {
   RelativeDateType interactivityWindowEndTime;
   RelativeDateType interactivityWindowStartTime;
} InteractivityWindowType;

EXTERN int asn1E_InteractivityWindowType (OSCTXT* pctxt,
   InteractivityWindowType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InteractivityWindowType (OSCTXT* pctxt,
   InteractivityWindowType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InteractivityWindowType (OSCTXT* pctxt, 
   InteractivityWindowType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InteractivityWindowType (OSCTXT* pctxt, 
   InteractivityWindowType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_InteractivityWindowType
   (const char* name, InteractivityWindowType* pvalue);

EXTERN int DOMTest_InteractivityWindowType (OSCTXT* pctxt, 
   InteractivityWindowType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InteractivityWindowType (InteractivityWindowType* pvalue);

/**************************************************************/
/*                                                            */
/*  InteractivityDataType                                     */
/*                                                            */
/**************************************************************/

#define TV_InteractivityDataType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InteractivityDataType {
   struct {
      unsigned validFromPresent : 1;
      unsigned validToPresent : 1;
   } m;
   InteractivityMediaIDType interactivityMediaDocumentPointer;
   OSBOOL prelistenIndicator;
   InteractivityDataIDType id;
   OSUINT32 validFrom;
   OSUINT32 validTo;
   OSUINT32 version;
   /* List of ServiceIDType */
   OSRTDList serviceIDRed_list;
   /* List of ContentIDType */
   OSRTDList contentIDRef_list;
   /* List of ScheduleReferenceType */
   OSRTDList scheduleReference_list;
   /* List of InteractivityWindowType */
   OSRTDList interactivityWindow_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList extensionURL_list;
} InteractivityDataType;

EXTERN int asn1E_InteractivityDataType (OSCTXT* pctxt,
   InteractivityDataType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InteractivityDataType (OSCTXT* pctxt,
   InteractivityDataType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InteractivityDataType (OSCTXT* pctxt, 
   InteractivityDataType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InteractivityDataType (OSCTXT* pctxt, 
   InteractivityDataType* pvalue, const OSUTF8CHAR* elemLName, 
   const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_InteractivityDataType
   (const char* name, InteractivityDataType* pvalue);

EXTERN int DOMTest_InteractivityDataType (OSCTXT* pctxt, 
   InteractivityDataType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InteractivityDataType (InteractivityDataType* pvalue);

/**************************************************************/
/*                                                            */
/*  ESGMainBCAST                                              */
/*                                                            */
/**************************************************************/

#define TV_ESGMainBCAST	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ESGMainBCAST {
   /* List of ServiceType */
   OSRTDList service_list;
   /* List of ScheduleType */
   OSRTDList schedule_list;
   /* List of ContentType */
   OSRTDList content_list;
   /* List of AccessType */
   OSRTDList access_list;
   /* List of PreviewDataType */
   OSRTDList previewData_list;
   /* List of PurchaseItemType */
   OSRTDList purchaseItem_list;
   /* List of PurchaseDataType */
   OSRTDList purchaseData_list;
   /* List of PurchaseChannelType */
   OSRTDList purchaseChannel_list;
   /* List of InteractivityDataType */
   OSRTDList interactivityData_list;
} ESGMainBCAST;

EXTERN int asn1E_ESGMainBCAST (OSCTXT* pctxt,
   ESGMainBCAST *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ESGMainBCAST (OSCTXT* pctxt,
   ESGMainBCAST *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ESGMainBCAST (OSCTXT* pctxt, ESGMainBCAST* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ESGMainBCAST (OSCTXT* pctxt, ESGMainBCAST* pvalue, 
   const OSUTF8CHAR* elemLName, const OSUTF8CHAR* elemURI);

EXTERN void asn1Print_ESGMainBCAST
   (const char* name, ESGMainBCAST* pvalue);

EXTERN int DOMTest_ESGMainBCAST (OSCTXT* pctxt, ESGMainBCAST* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ESGMainBCAST (ESGMainBCAST* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
EXTERN int XmlEnc_ESGMainBCAST_PDU (OSCTXT* pctxt, ESGMainBCAST* pvalue);

EXTERN int XmlDec_ESGMainBCAST_PDU (OSCTXT* pctxt, ESGMainBCAST* pvalue);

#ifdef __cplusplus
}
#endif

#endif
