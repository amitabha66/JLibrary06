/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef AVCL_H
#define AVCL_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"

/**
 * Header file for ASN.1 module AVCL
 */
/**************************************************************/
/*                                                            */
/*  NonNegativeScalarType                                     */
/*                                                            */
/**************************************************************/

#define TV_NonNegativeScalarType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL NonNegativeScalarType;

EXTERN int asn1E_NonNegativeScalarType (OSCTXT* pctxt,
   NonNegativeScalarType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NonNegativeScalarType (OSCTXT* pctxt, 
   NonNegativeScalarType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NonNegativeScalarType (OSCTXT* pctxt, 
   NonNegativeScalarType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NonNegativeScalarType (OSCTXT* pctxt, 
   NonNegativeScalarType* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclMessageType_transportStatus                           */
/*                                                            */
/**************************************************************/

#define TV_AvclMessageType_transportStatus	(TM_UNIV|TM_PRIM|10)

typedef enum {
   transportStatus_none = 0,
   transportStatus_received = 1,
   transportStatus_sent = 2
} AvclMessageType_transportStatus_Root;

typedef OSUINT32 AvclMessageType_transportStatus;

EXTERN int asn1E_AvclMessageType_transportStatus (OSCTXT* pctxt,
   AvclMessageType_transportStatus *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclMessageType_transportStatus (OSCTXT* pctxt, 
   AvclMessageType_transportStatus *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclMessageType_transportStatus (OSCTXT* pctxt, 
   AvclMessageType_transportStatus value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclMessageType_transportStatus (OSCTXT* pctxt, 
   AvclMessageType_transportStatus* pvalue);

EXTERN const OSUTF8CHAR* AvclMessageType_transportStatus_ToString (OSINT32 value);

EXTERN int AvclMessageType_transportStatus_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AvclMessageType_transportStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  MetaDataType                                              */
/*                                                            */
/**************************************************************/

#define TV_MetaDataType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MetaDataType {
   struct {
      unsigned contentPresent : 1;
      unsigned descriptionPresent : 1;
   } m;
   const OSUTF8CHAR* content;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* name;
} MetaDataType;

EXTERN int asn1E_MetaDataType (OSCTXT* pctxt,
   MetaDataType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MetaDataType (OSCTXT* pctxt, MetaDataType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MetaDataType (OSCTXT* pctxt, MetaDataType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MetaDataType (OSCTXT* pctxt, MetaDataType* pvalue);

EXTERN int DOMTest_MetaDataType (OSCTXT* pctxt, MetaDataType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MetaDataType (MetaDataType* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityType                                              */
/*                                                            */
/**************************************************************/

#define TV_PriorityType	(TM_UNIV|TM_PRIM|2)

typedef OSUINT8 PriorityType;

EXTERN int asn1E_PriorityType (OSCTXT* pctxt,
   PriorityType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PriorityType (OSCTXT* pctxt, PriorityType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PriorityType (OSCTXT* pctxt, PriorityType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PriorityType (OSCTXT* pctxt, PriorityType* pvalue);

/**************************************************************/
/*                                                            */
/*  PriorityElementType                                       */
/*                                                            */
/**************************************************************/

#define TV_PriorityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PriorityElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PriorityType value;
} PriorityElementType;

EXTERN int asn1E_PriorityElementType (OSCTXT* pctxt,
   PriorityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PriorityElementType (OSCTXT* pctxt, 
   PriorityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PriorityElementType (OSCTXT* pctxt, 
   PriorityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PriorityElementType (OSCTXT* pctxt, 
   PriorityElementType* pvalue);

EXTERN int DOMTest_PriorityElementType (OSCTXT* pctxt, PriorityElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PriorityElementType (PriorityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  NonNegativeIntegerElementType                             */
/*                                                            */
/**************************************************************/

#define TV_NonNegativeIntegerElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NonNegativeIntegerElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSUINT16 value;
} NonNegativeIntegerElementType;

EXTERN int asn1E_NonNegativeIntegerElementType (OSCTXT* pctxt,
   NonNegativeIntegerElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NonNegativeIntegerElementType (OSCTXT* pctxt, 
   NonNegativeIntegerElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NonNegativeIntegerElementType (OSCTXT* pctxt, 
   NonNegativeIntegerElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NonNegativeIntegerElementType (OSCTXT* pctxt, 
   NonNegativeIntegerElementType* pvalue);

EXTERN int DOMTest_NonNegativeIntegerElementType (OSCTXT* pctxt, 
   NonNegativeIntegerElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NonNegativeIntegerElementType (
   NonNegativeIntegerElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AcknowledgeType                                           */
/*                                                            */
/**************************************************************/

#define TV_AcknowledgeType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   AcknowledgeType_negativeOnly = 0,
   AcknowledgeType_no = 1,
   AcknowledgeType_optional = 2,
   AcknowledgeType_positiveOnly = 3,
   AcknowledgeType_yes = 4
} AcknowledgeType_Root;

typedef OSUINT32 AcknowledgeType;

EXTERN int asn1E_AcknowledgeType (OSCTXT* pctxt,
   AcknowledgeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AcknowledgeType (OSCTXT* pctxt, AcknowledgeType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AcknowledgeType (OSCTXT* pctxt, AcknowledgeType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AcknowledgeType (OSCTXT* pctxt, AcknowledgeType* pvalue);

EXTERN const OSUTF8CHAR* AcknowledgeType_ToString (OSINT32 value);

EXTERN int AcknowledgeType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AcknowledgeType* pvalue);

/**************************************************************/
/*                                                            */
/*  AcknowledgeElementType                                    */
/*                                                            */
/**************************************************************/

#define TV_AcknowledgeElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AcknowledgeElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AcknowledgeType value;
} AcknowledgeElementType;

EXTERN int asn1E_AcknowledgeElementType (OSCTXT* pctxt,
   AcknowledgeElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AcknowledgeElementType (OSCTXT* pctxt, 
   AcknowledgeElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AcknowledgeElementType (OSCTXT* pctxt, 
   AcknowledgeElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AcknowledgeElementType (OSCTXT* pctxt, 
   AcknowledgeElementType* pvalue);

EXTERN int DOMTest_AcknowledgeElementType (OSCTXT* pctxt, 
   AcknowledgeElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AcknowledgeElementType (AcknowledgeElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclMessageHeadType                                       */
/*                                                            */
/**************************************************************/

#define TV_AvclMessageHeadType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AvclMessageHeadType {
   struct {
      unsigned priorityPresent : 1;
      unsigned acknowledgePresent : 1;
   } m;
   /* List of MetaDataType */
   OSRTDList meta_list;
   PriorityElementType priority;
   NonNegativeIntegerElementType sender;
   /* List of NonNegativeIntegerElementType */
   OSRTDList recipient_list;
   AcknowledgeElementType acknowledge;
} AvclMessageHeadType;

EXTERN int asn1E_AvclMessageHeadType (OSCTXT* pctxt,
   AvclMessageHeadType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclMessageHeadType (OSCTXT* pctxt, 
   AvclMessageHeadType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclMessageHeadType (OSCTXT* pctxt, 
   AvclMessageHeadType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclMessageHeadType (OSCTXT* pctxt, 
   AvclMessageHeadType* pvalue);

EXTERN int DOMTest_AvclMessageHeadType (OSCTXT* pctxt, AvclMessageHeadType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclMessageHeadType (AvclMessageHeadType* pvalue);

/**************************************************************/
/*                                                            */
/*  LatitudeType                                              */
/*                                                            */
/**************************************************************/

#define TV_LatitudeType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL LatitudeType;

EXTERN int asn1E_LatitudeType (OSCTXT* pctxt,
   LatitudeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LatitudeType (OSCTXT* pctxt, LatitudeType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LatitudeType (OSCTXT* pctxt, LatitudeType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LatitudeType (OSCTXT* pctxt, LatitudeType* pvalue);

/**************************************************************/
/*                                                            */
/*  LongitudeType                                             */
/*                                                            */
/**************************************************************/

#define TV_LongitudeType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL LongitudeType;

EXTERN int asn1E_LongitudeType (OSCTXT* pctxt,
   LongitudeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LongitudeType (OSCTXT* pctxt, LongitudeType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LongitudeType (OSCTXT* pctxt, LongitudeType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LongitudeType (OSCTXT* pctxt, LongitudeType* pvalue);

/**************************************************************/
/*                                                            */
/*  LatitudeLongitudeElementType                              */
/*                                                            */
/**************************************************************/

#define TV_LatitudeLongitudeElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LatitudeLongitudeElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   LatitudeType latitude;
   LongitudeType longitude;
   NonNegativeScalarType timeStamp;
} LatitudeLongitudeElementType;

EXTERN int asn1E_LatitudeLongitudeElementType (OSCTXT* pctxt,
   LatitudeLongitudeElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LatitudeLongitudeElementType (OSCTXT* pctxt, 
   LatitudeLongitudeElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LatitudeLongitudeElementType (OSCTXT* pctxt, 
   LatitudeLongitudeElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LatitudeLongitudeElementType (OSCTXT* pctxt, 
   LatitudeLongitudeElementType* pvalue);

EXTERN int DOMTest_LatitudeLongitudeElementType (OSCTXT* pctxt, 
   LatitudeLongitudeElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LatitudeLongitudeElementType (
   LatitudeLongitudeElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  PositiveScalarType                                        */
/*                                                            */
/**************************************************************/

#define TV_PositiveScalarType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL PositiveScalarType;

EXTERN int asn1E_PositiveScalarType (OSCTXT* pctxt,
   PositiveScalarType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PositiveScalarType (OSCTXT* pctxt, 
   PositiveScalarType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PositiveScalarType (OSCTXT* pctxt, PositiveScalarType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PositiveScalarType (OSCTXT* pctxt, 
   PositiveScalarType* pvalue);

/**************************************************************/
/*                                                            */
/*  GeoOriginElementType                                      */
/*                                                            */
/**************************************************************/

#define TV_GeoOriginElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN GeoOriginElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned radiusOfInterestPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   LatitudeType latitude;
   LongitudeType longitude;
   PositiveScalarType radiusOfInterest;
   NonNegativeScalarType timeStamp;
} GeoOriginElementType;

EXTERN int asn1E_GeoOriginElementType (OSCTXT* pctxt,
   GeoOriginElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GeoOriginElementType (OSCTXT* pctxt, 
   GeoOriginElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_GeoOriginElementType (OSCTXT* pctxt, 
   GeoOriginElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GeoOriginElementType (OSCTXT* pctxt, 
   GeoOriginElementType* pvalue);

EXTERN int DOMTest_GeoOriginElementType (OSCTXT* pctxt, GeoOriginElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GeoOriginElementType (GeoOriginElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  LatitudeLongitudeElementType_derivations                  */
/*                                                            */
/**************************************************************/

#define TV_LatitudeLongitudeElementType_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LatitudeLongitudeElementType_derivations_latitudeLongitudeElementType 1
#define T_LatitudeLongitudeElementType_derivations_geoOriginElementType 2

typedef struct EXTERN LatitudeLongitudeElementType_derivations {
   int t;
   union {
      /* t = 1 */
      LatitudeLongitudeElementType *latitudeLongitudeElementType;
      /* t = 2 */
      GeoOriginElementType *geoOriginElementType;
   } u;
} LatitudeLongitudeElementType_derivations;

EXTERN int asn1E_LatitudeLongitudeElementType_derivations (OSCTXT* pctxt,
   LatitudeLongitudeElementType_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LatitudeLongitudeElementType_derivations (OSCTXT* pctxt, 
   LatitudeLongitudeElementType_derivations *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_LatitudeLongitudeElementType_derivations (OSCTXT* pctxt, 
   LatitudeLongitudeElementType_derivations* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LatitudeLongitudeElementType_derivations (OSCTXT* pctxt, 
   LatitudeLongitudeElementType_derivations* pvalue);

EXTERN int DOMTest_LatitudeLongitudeElementType_derivations (OSCTXT* pctxt, 
   LatitudeLongitudeElementType_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LatitudeLongitudeElementType_derivations (
   LatitudeLongitudeElementType_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  XyElementType                                             */
/*                                                            */
/**************************************************************/

#define TV_XyElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN XyElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSREAL x;
   OSREAL y;
} XyElementType;

EXTERN int asn1E_XyElementType (OSCTXT* pctxt,
   XyElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_XyElementType (OSCTXT* pctxt, XyElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_XyElementType (OSCTXT* pctxt, XyElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_XyElementType (OSCTXT* pctxt, XyElementType* pvalue);

EXTERN int DOMTest_XyElementType (OSCTXT* pctxt, XyElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_XyElementType (XyElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  PointListElements                                         */
/*                                                            */
/**************************************************************/

#define TV_PointListElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PointListElements_latitudeLongitude_list 1
#define T_PointListElements_xYPosition_list 2

typedef struct EXTERN PointListElements {
   int t;
   union {
      /* t = 1 */
      /* List of LatitudeLongitudeElementType_derivations */
      OSRTDList *latitudeLongitude_list;
      /* t = 2 */
      /* List of XyElementType */
      OSRTDList *xYPosition_list;
   } u;
} PointListElements;

EXTERN int asn1E_PointListElements (OSCTXT* pctxt,
   PointListElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PointListElements (OSCTXT* pctxt, PointListElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PointListElements (OSCTXT* pctxt, PointListElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PointListElements (OSCTXT* pctxt, PointListElements* pvalue)
   ;

EXTERN int DOMTest_PointListElements (OSCTXT* pctxt, PointListElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PointListElements (PointListElements* pvalue);

/**************************************************************/
/*                                                            */
/*  WaypointListType                                          */
/*                                                            */
/**************************************************************/

#define TV_WaypointListType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN WaypointListType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PointListElements choice;
} WaypointListType;

EXTERN int asn1E_WaypointListType (OSCTXT* pctxt,
   WaypointListType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_WaypointListType (OSCTXT* pctxt, WaypointListType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_WaypointListType (OSCTXT* pctxt, WaypointListType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_WaypointListType (OSCTXT* pctxt, WaypointListType* pvalue);

EXTERN int DOMTest_WaypointListType (OSCTXT* pctxt, WaypointListType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_WaypointListType (WaypointListType* pvalue);

/**************************************************************/
/*                                                            */
/*  TurnDirectionType                                         */
/*                                                            */
/**************************************************************/

#define TV_TurnDirectionType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   TurnDirectionType_left = 0,
   TurnDirectionType_port = 1,
   TurnDirectionType_right = 2,
   TurnDirectionType_starboard = 3
} TurnDirectionType_Root;

typedef OSUINT32 TurnDirectionType;

EXTERN int asn1E_TurnDirectionType (OSCTXT* pctxt,
   TurnDirectionType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TurnDirectionType (OSCTXT* pctxt, TurnDirectionType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TurnDirectionType (OSCTXT* pctxt, TurnDirectionType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TurnDirectionType (OSCTXT* pctxt, TurnDirectionType* pvalue)
   ;

EXTERN const OSUTF8CHAR* TurnDirectionType_ToString (OSINT32 value);

EXTERN int TurnDirectionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TurnDirectionType* pvalue);

/**************************************************************/
/*                                                            */
/*  HeadingType                                               */
/*                                                            */
/**************************************************************/

#define TV_HeadingType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL HeadingType;

EXTERN int asn1E_HeadingType (OSCTXT* pctxt,
   HeadingType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_HeadingType (OSCTXT* pctxt, HeadingType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_HeadingType (OSCTXT* pctxt, HeadingType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HeadingType (OSCTXT* pctxt, HeadingType* pvalue);

/**************************************************************/
/*                                                            */
/*  PositiveIntType                                           */
/*                                                            */
/**************************************************************/

#define TV_PositiveIntType	(TM_UNIV|TM_PRIM|2)

typedef OSINT32 PositiveIntType;

EXTERN int asn1E_PositiveIntType (OSCTXT* pctxt,
   PositiveIntType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PositiveIntType (OSCTXT* pctxt, PositiveIntType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PositiveIntType (OSCTXT* pctxt, PositiveIntType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PositiveIntType (OSCTXT* pctxt, PositiveIntType* pvalue);

/**************************************************************/
/*                                                            */
/*  HorizontalPositionElements                                */
/*                                                            */
/**************************************************************/

#define TV_HorizontalPositionElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_HorizontalPositionElements_latitudeLongitude 1
#define T_HorizontalPositionElements_xYPosition 2
#define T_HorizontalPositionElements_relativeXYPosition 3

typedef struct EXTERN HorizontalPositionElements {
   int t;
   union {
      /* t = 1 */
      LatitudeLongitudeElementType_derivations *latitudeLongitude;
      /* t = 2 */
      XyElementType *xYPosition;
      /* t = 3 */
      XyElementType *relativeXYPosition;
   } u;
} HorizontalPositionElements;

EXTERN int asn1E_HorizontalPositionElements (OSCTXT* pctxt,
   HorizontalPositionElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_HorizontalPositionElements (OSCTXT* pctxt, 
   HorizontalPositionElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_HorizontalPositionElements (OSCTXT* pctxt, 
   HorizontalPositionElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HorizontalPositionElements (OSCTXT* pctxt, 
   HorizontalPositionElements* pvalue);

EXTERN int DOMTest_HorizontalPositionElements (OSCTXT* pctxt, 
   HorizontalPositionElements* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_HorizontalPositionElements (HorizontalPositionElements* pvalue);

/**************************************************************/
/*                                                            */
/*  HorizontalPositionElementType                             */
/*                                                            */
/**************************************************************/

#define TV_HorizontalPositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN HorizontalPositionElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
} HorizontalPositionElementType;

EXTERN int asn1E_HorizontalPositionElementType (OSCTXT* pctxt,
   HorizontalPositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_HorizontalPositionElementType (OSCTXT* pctxt, 
   HorizontalPositionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_HorizontalPositionElementType (OSCTXT* pctxt, 
   HorizontalPositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HorizontalPositionElementType (OSCTXT* pctxt, 
   HorizontalPositionElementType* pvalue);

EXTERN int DOMTest_HorizontalPositionElementType (OSCTXT* pctxt, 
   HorizontalPositionElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_HorizontalPositionElementType (
   HorizontalPositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  ParallelTrackType                                         */
/*                                                            */
/**************************************************************/

#define TV_ParallelTrackType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ParallelTrackType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   TurnDirectionType firstTurn;
   const OSUTF8CHAR* id;
   HeadingType orientation;
   NonNegativeScalarType timeStamp;
   PositiveIntType trackCount;
   PositiveScalarType trackLength;
   PositiveScalarType trackSpacing;
   HorizontalPositionElementType startPoint;
} ParallelTrackType;

EXTERN int asn1E_ParallelTrackType (OSCTXT* pctxt,
   ParallelTrackType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ParallelTrackType (OSCTXT* pctxt, ParallelTrackType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ParallelTrackType (OSCTXT* pctxt, ParallelTrackType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ParallelTrackType (OSCTXT* pctxt, ParallelTrackType* pvalue)
   ;

EXTERN int DOMTest_ParallelTrackType (OSCTXT* pctxt, ParallelTrackType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ParallelTrackType (ParallelTrackType* pvalue);

/**************************************************************/
/*                                                            */
/*  SectorPatternType                                         */
/*                                                            */
/**************************************************************/

#define TV_SectorPatternType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SectorPatternType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   TurnDirectionType firstTurn;
   const OSUTF8CHAR* id;
   HeadingType orientation;
   PositiveScalarType radius;
   PositiveIntType sectorCount;
   PositiveScalarType sectorSize;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElementType startPoint;
} SectorPatternType;

EXTERN int asn1E_SectorPatternType (OSCTXT* pctxt,
   SectorPatternType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SectorPatternType (OSCTXT* pctxt, SectorPatternType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SectorPatternType (OSCTXT* pctxt, SectorPatternType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SectorPatternType (OSCTXT* pctxt, SectorPatternType* pvalue)
   ;

EXTERN int DOMTest_SectorPatternType (OSCTXT* pctxt, SectorPatternType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SectorPatternType (SectorPatternType* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpandingSquareType                                       */
/*                                                            */
/**************************************************************/

#define TV_ExpandingSquareType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExpandingSquareType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   HeadingType orientation;
   NonNegativeScalarType timeStamp;
   PositiveIntType trackCount;
   PositiveScalarType trackSpacing;
   TurnDirectionType turnDirection;
   HorizontalPositionElementType startPoint;
} ExpandingSquareType;

EXTERN int asn1E_ExpandingSquareType (OSCTXT* pctxt,
   ExpandingSquareType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExpandingSquareType (OSCTXT* pctxt, 
   ExpandingSquareType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExpandingSquareType (OSCTXT* pctxt, 
   ExpandingSquareType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExpandingSquareType (OSCTXT* pctxt, 
   ExpandingSquareType* pvalue);

EXTERN int DOMTest_ExpandingSquareType (OSCTXT* pctxt, ExpandingSquareType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExpandingSquareType (ExpandingSquareType* pvalue);

/**************************************************************/
/*                                                            */
/*  CompositeWaypointElements                                 */
/*                                                            */
/**************************************************************/

#define TV_CompositeWaypointElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CompositeWaypointElements_waypointList 1
#define T_CompositeWaypointElements_parallelTrack 2
#define T_CompositeWaypointElements_sectorPattern 3
#define T_CompositeWaypointElements_expandingSquare 4

typedef struct EXTERN CompositeWaypointElements {
   int t;
   union {
      /* t = 1 */
      WaypointListType *waypointList;
      /* t = 2 */
      ParallelTrackType *parallelTrack;
      /* t = 3 */
      SectorPatternType *sectorPattern;
      /* t = 4 */
      ExpandingSquareType *expandingSquare;
   } u;
} CompositeWaypointElements;

EXTERN int asn1E_CompositeWaypointElements (OSCTXT* pctxt,
   CompositeWaypointElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CompositeWaypointElements (OSCTXT* pctxt, 
   CompositeWaypointElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CompositeWaypointElements (OSCTXT* pctxt, 
   CompositeWaypointElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CompositeWaypointElements (OSCTXT* pctxt, 
   CompositeWaypointElements* pvalue);

EXTERN int DOMTest_CompositeWaypointElements (OSCTXT* pctxt, 
   CompositeWaypointElements* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CompositeWaypointElements (CompositeWaypointElements* pvalue);

/**************************************************************/
/*                                                            */
/*  PositiveScalarElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_PositiveScalarElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PositiveScalarElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PositiveScalarType value;
} PositiveScalarElementType;

EXTERN int asn1E_PositiveScalarElementType (OSCTXT* pctxt,
   PositiveScalarElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PositiveScalarElementType (OSCTXT* pctxt, 
   PositiveScalarElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PositiveScalarElementType (OSCTXT* pctxt, 
   PositiveScalarElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PositiveScalarElementType (OSCTXT* pctxt, 
   PositiveScalarElementType* pvalue);

EXTERN int DOMTest_PositiveScalarElementType (OSCTXT* pctxt, 
   PositiveScalarElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PositiveScalarElementType (PositiveScalarElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedElementType                                          */
/*                                                            */
/**************************************************************/

#define TV_SpeedElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SpeedElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   OSBOOL speedOverGround;
   NonNegativeScalarType timeStamp;
   PositiveScalarType value;
} SpeedElementType;

EXTERN int asn1E_SpeedElementType (OSCTXT* pctxt,
   SpeedElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SpeedElementType (OSCTXT* pctxt, SpeedElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SpeedElementType (OSCTXT* pctxt, SpeedElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SpeedElementType (OSCTXT* pctxt, SpeedElementType* pvalue);

EXTERN int DOMTest_SpeedElementType (OSCTXT* pctxt, SpeedElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SpeedElementType (SpeedElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  PositiveScalarElementType_derivations                     */
/*                                                            */
/**************************************************************/

#define TV_PositiveScalarElementType_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PositiveScalarElementType_derivations_positiveScalarElementType 1
#define T_PositiveScalarElementType_derivations_speedElementType 2

typedef struct EXTERN PositiveScalarElementType_derivations {
   int t;
   union {
      /* t = 1 */
      PositiveScalarElementType *positiveScalarElementType;
      /* t = 2 */
      SpeedElementType *speedElementType;
   } u;
} PositiveScalarElementType_derivations;

EXTERN int asn1E_PositiveScalarElementType_derivations (OSCTXT* pctxt,
   PositiveScalarElementType_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PositiveScalarElementType_derivations (OSCTXT* pctxt, 
   PositiveScalarElementType_derivations *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_PositiveScalarElementType_derivations (OSCTXT* pctxt, 
   PositiveScalarElementType_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PositiveScalarElementType_derivations (OSCTXT* pctxt, 
   PositiveScalarElementType_derivations* pvalue);

EXTERN int DOMTest_PositiveScalarElementType_derivations (OSCTXT* pctxt, 
   PositiveScalarElementType_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PositiveScalarElementType_derivations (
   PositiveScalarElementType_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  DepthTypeElements                                         */
/*                                                            */
/**************************************************************/

#define TV_DepthTypeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DepthTypeElements_depth       1
#define T_DepthTypeElements_altitude    2

typedef struct EXTERN DepthTypeElements {
   int t;
   union {
      /* t = 1 */
      PositiveScalarElementType_derivations *depth;
      /* t = 2 */
      PositiveScalarElementType_derivations *altitude;
   } u;
} DepthTypeElements;

EXTERN int asn1E_DepthTypeElements (OSCTXT* pctxt,
   DepthTypeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DepthTypeElements (OSCTXT* pctxt, DepthTypeElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DepthTypeElements (OSCTXT* pctxt, DepthTypeElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DepthTypeElements (OSCTXT* pctxt, DepthTypeElements* pvalue)
   ;

EXTERN int DOMTest_DepthTypeElements (OSCTXT* pctxt, DepthTypeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DepthTypeElements (DepthTypeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackModeType                                             */
/*                                                            */
/**************************************************************/

#define TV_TrackModeType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   TrackModeType_directTo = 0,
   TrackModeType_trackTo = 1
} TrackModeType_Root;

typedef OSUINT32 TrackModeType;

EXTERN int asn1E_TrackModeType (OSCTXT* pctxt,
   TrackModeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TrackModeType (OSCTXT* pctxt, TrackModeType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TrackModeType (OSCTXT* pctxt, TrackModeType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TrackModeType (OSCTXT* pctxt, TrackModeType* pvalue);

EXTERN const OSUTF8CHAR* TrackModeType_ToString (OSINT32 value);

EXTERN int TrackModeType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TrackModeType* pvalue);

/**************************************************************/
/*                                                            */
/*  TrackModeElementType                                      */
/*                                                            */
/**************************************************************/

#define TV_TrackModeElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TrackModeElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   TrackModeType value;
} TrackModeElementType;

EXTERN int asn1E_TrackModeElementType (OSCTXT* pctxt,
   TrackModeElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TrackModeElementType (OSCTXT* pctxt, 
   TrackModeElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TrackModeElementType (OSCTXT* pctxt, 
   TrackModeElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TrackModeElementType (OSCTXT* pctxt, 
   TrackModeElementType* pvalue);

EXTERN int DOMTest_TrackModeElementType (OSCTXT* pctxt, TrackModeElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TrackModeElementType (TrackModeElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  SignedPercentType                                         */
/*                                                            */
/**************************************************************/

#define TV_SignedPercentType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL SignedPercentType;

EXTERN int asn1E_SignedPercentType (OSCTXT* pctxt,
   SignedPercentType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SignedPercentType (OSCTXT* pctxt, SignedPercentType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SignedPercentType (OSCTXT* pctxt, SignedPercentType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SignedPercentType (OSCTXT* pctxt, SignedPercentType* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  SignedPercentElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_SignedPercentElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SignedPercentElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   SignedPercentType value;
} SignedPercentElementType;

EXTERN int asn1E_SignedPercentElementType (OSCTXT* pctxt,
   SignedPercentElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SignedPercentElementType (OSCTXT* pctxt, 
   SignedPercentElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SignedPercentElementType (OSCTXT* pctxt, 
   SignedPercentElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SignedPercentElementType (OSCTXT* pctxt, 
   SignedPercentElementType* pvalue);

EXTERN int DOMTest_SignedPercentElementType (OSCTXT* pctxt, 
   SignedPercentElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SignedPercentElementType (SignedPercentElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  SetPropellerCommandType_choice                            */
/*                                                            */
/**************************************************************/

#define TV_SetPropellerCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SetPropellerCommandType_choice_portPropeller 1
#define T_SetPropellerCommandType_choice_starboardPropeller 2
#define T_SetPropellerCommandType_choice_centerlinePropeller 3
#define T_SetPropellerCommandType_choice_allPropellers 4

typedef struct EXTERN SetPropellerCommandType_choice {
   int t;
   union {
      /* t = 1 */
      SignedPercentElementType *portPropeller;
      /* t = 2 */
      SignedPercentElementType *starboardPropeller;
      /* t = 3 */
      SignedPercentElementType *centerlinePropeller;
      /* t = 4 */
      SignedPercentElementType *allPropellers;
   } u;
} SetPropellerCommandType_choice;

EXTERN int asn1E_SetPropellerCommandType_choice (OSCTXT* pctxt,
   SetPropellerCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetPropellerCommandType_choice (OSCTXT* pctxt, 
   SetPropellerCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetPropellerCommandType_choice (OSCTXT* pctxt, 
   SetPropellerCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetPropellerCommandType_choice (OSCTXT* pctxt, 
   SetPropellerCommandType_choice* pvalue);

EXTERN int DOMTest_SetPropellerCommandType_choice (OSCTXT* pctxt, 
   SetPropellerCommandType_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetPropellerCommandType_choice (
   SetPropellerCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  SetPropellerCommandType                                   */
/*                                                            */
/**************************************************************/

#define TV_SetPropellerCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SetPropellerCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   SetPropellerCommandType_choice choice;
} SetPropellerCommandType;

EXTERN int asn1E_SetPropellerCommandType (OSCTXT* pctxt,
   SetPropellerCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetPropellerCommandType (OSCTXT* pctxt, 
   SetPropellerCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetPropellerCommandType (OSCTXT* pctxt, 
   SetPropellerCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetPropellerCommandType (OSCTXT* pctxt, 
   SetPropellerCommandType* pvalue);

EXTERN int DOMTest_SetPropellerCommandType (OSCTXT* pctxt, 
   SetPropellerCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetPropellerCommandType (SetPropellerCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvSpeedElements                                          */
/*                                                            */
/**************************************************************/

#define TV_UuvSpeedElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UuvSpeedElements_setPower     1
#define T_UuvSpeedElements_makeKnots    2
#define T_UuvSpeedElements_makeSpeed    3

typedef struct EXTERN UuvSpeedElements {
   int t;
   union {
      /* t = 1 */
      SetPropellerCommandType *setPower;
      /* t = 2 */
      SpeedElementType *makeKnots;
      /* t = 3 */
      SpeedElementType *makeSpeed;
   } u;
} UuvSpeedElements;

EXTERN int asn1E_UuvSpeedElements (OSCTXT* pctxt,
   UuvSpeedElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvSpeedElements (OSCTXT* pctxt, UuvSpeedElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvSpeedElements (OSCTXT* pctxt, UuvSpeedElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvSpeedElements (OSCTXT* pctxt, UuvSpeedElements* pvalue);

EXTERN int DOMTest_UuvSpeedElements (OSCTXT* pctxt, UuvSpeedElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvSpeedElements (UuvSpeedElements* pvalue);

/**************************************************************/
/*                                                            */
/*  PositiveIntegerElementType                                */
/*                                                            */
/**************************************************************/

#define TV_PositiveIntegerElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PositiveIntegerElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PositiveIntType value;
} PositiveIntegerElementType;

EXTERN int asn1E_PositiveIntegerElementType (OSCTXT* pctxt,
   PositiveIntegerElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PositiveIntegerElementType (OSCTXT* pctxt, 
   PositiveIntegerElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PositiveIntegerElementType (OSCTXT* pctxt, 
   PositiveIntegerElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PositiveIntegerElementType (OSCTXT* pctxt, 
   PositiveIntegerElementType* pvalue);

EXTERN int DOMTest_PositiveIntegerElementType (OSCTXT* pctxt, 
   PositiveIntegerElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PositiveIntegerElementType (PositiveIntegerElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvCompositeWaypointCommandType                           */
/*                                                            */
/**************************************************************/

#define TV_UuvCompositeWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvCompositeWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned homingModePresent : 1;
      unsigned choice_2Present : 1;
      unsigned gpsFixesPresent : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   CompositeWaypointElements choice;
   DepthTypeElements choice_1;
   TrackModeElementType homingMode;
   UuvSpeedElements choice_2;
   PositiveIntegerElementType gpsFixes;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UuvCompositeWaypointCommandType;

EXTERN int asn1E_UuvCompositeWaypointCommandType (OSCTXT* pctxt,
   UuvCompositeWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UuvCompositeWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UuvCompositeWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UuvCompositeWaypointCommandType* pvalue);

EXTERN int DOMTest_UuvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UuvCompositeWaypointCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvCompositeWaypointCommandType (
   UuvCompositeWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  StringElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_StringElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN StringElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   const OSUTF8CHAR* value;
} StringElementType;

EXTERN int asn1E_StringElementType (OSCTXT* pctxt,
   StringElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StringElementType (OSCTXT* pctxt, StringElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_StringElementType (OSCTXT* pctxt, StringElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StringElementType (OSCTXT* pctxt, StringElementType* pvalue)
   ;

EXTERN int DOMTest_StringElementType (OSCTXT* pctxt, StringElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StringElementType (StringElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  FollowBeaconCommandType                                   */
/*                                                            */
/**************************************************************/

#define TV_FollowBeaconCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FollowBeaconCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned beaconPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   StringElementType beacon;
   PositiveScalarElementType_derivations timeOut;
} FollowBeaconCommandType;

EXTERN int asn1E_FollowBeaconCommandType (OSCTXT* pctxt,
   FollowBeaconCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FollowBeaconCommandType (OSCTXT* pctxt, 
   FollowBeaconCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FollowBeaconCommandType (OSCTXT* pctxt, 
   FollowBeaconCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FollowBeaconCommandType (OSCTXT* pctxt, 
   FollowBeaconCommandType* pvalue);

EXTERN int DOMTest_FollowBeaconCommandType (OSCTXT* pctxt, 
   FollowBeaconCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FollowBeaconCommandType (FollowBeaconCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  GpsFixCommandType                                         */
/*                                                            */
/**************************************************************/

#define TV_GpsFixCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN GpsFixCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeOutPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   PositiveScalarType timeOut;
   NonNegativeScalarType timeStamp;
   OSBOOL value;
} GpsFixCommandType;

EXTERN int asn1E_GpsFixCommandType (OSCTXT* pctxt,
   GpsFixCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GpsFixCommandType (OSCTXT* pctxt, GpsFixCommandType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_GpsFixCommandType (OSCTXT* pctxt, GpsFixCommandType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GpsFixCommandType (OSCTXT* pctxt, GpsFixCommandType* pvalue)
   ;

EXTERN int DOMTest_GpsFixCommandType (OSCTXT* pctxt, GpsFixCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GpsFixCommandType (GpsFixCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  NoValueElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_NoValueElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NoValueElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
} NoValueElementType;

EXTERN int asn1E_NoValueElementType (OSCTXT* pctxt,
   NoValueElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NoValueElementType (OSCTXT* pctxt, 
   NoValueElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NoValueElementType (OSCTXT* pctxt, 
   NoValueElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NoValueElementType (OSCTXT* pctxt, 
   NoValueElementType* pvalue);

EXTERN int DOMTest_NoValueElementType (OSCTXT* pctxt, NoValueElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NoValueElementType (NoValueElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  HeadingElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_HeadingElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN HeadingElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HeadingType value;
} HeadingElementType;

EXTERN int asn1E_HeadingElementType (OSCTXT* pctxt,
   HeadingElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_HeadingElementType (OSCTXT* pctxt, 
   HeadingElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_HeadingElementType (OSCTXT* pctxt, 
   HeadingElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HeadingElementType (OSCTXT* pctxt, 
   HeadingElementType* pvalue);

EXTERN int DOMTest_HeadingElementType (OSCTXT* pctxt, HeadingElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_HeadingElementType (HeadingElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  BooleanElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_BooleanElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BooleanElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSBOOL value;
} BooleanElementType;

EXTERN int asn1E_BooleanElementType (OSCTXT* pctxt,
   BooleanElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BooleanElementType (OSCTXT* pctxt, 
   BooleanElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BooleanElementType (OSCTXT* pctxt, 
   BooleanElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BooleanElementType (OSCTXT* pctxt, 
   BooleanElementType* pvalue);

EXTERN int DOMTest_BooleanElementType (OSCTXT* pctxt, BooleanElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BooleanElementType (BooleanElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  BooleanElementType_derivations                            */
/*                                                            */
/**************************************************************/

#define TV_BooleanElementType_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_BooleanElementType_derivations_booleanElementType 1
#define T_BooleanElementType_derivations_gpsFixCommandType 2

typedef struct EXTERN BooleanElementType_derivations {
   int t;
   union {
      /* t = 1 */
      BooleanElementType *booleanElementType;
      /* t = 2 */
      GpsFixCommandType *gpsFixCommandType;
   } u;
} BooleanElementType_derivations;

EXTERN int asn1E_BooleanElementType_derivations (OSCTXT* pctxt,
   BooleanElementType_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BooleanElementType_derivations (OSCTXT* pctxt, 
   BooleanElementType_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BooleanElementType_derivations (OSCTXT* pctxt, 
   BooleanElementType_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BooleanElementType_derivations (OSCTXT* pctxt, 
   BooleanElementType_derivations* pvalue);

EXTERN int DOMTest_BooleanElementType_derivations (OSCTXT* pctxt, 
   BooleanElementType_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BooleanElementType_derivations (
   BooleanElementType_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  HoverCommandType                                          */
/*                                                            */
/**************************************************************/

#define TV_HoverCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN HoverCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned headingPresent : 1;
      unsigned obtainGpsPresent : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   DepthTypeElements choice_1;
   HeadingElementType heading;
   BooleanElementType_derivations obtainGps;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} HoverCommandType;

EXTERN int asn1E_HoverCommandType (OSCTXT* pctxt,
   HoverCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_HoverCommandType (OSCTXT* pctxt, HoverCommandType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_HoverCommandType (OSCTXT* pctxt, HoverCommandType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_HoverCommandType (OSCTXT* pctxt, HoverCommandType* pvalue);

EXTERN int DOMTest_HoverCommandType (OSCTXT* pctxt, HoverCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_HoverCommandType (HoverCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvLoiterCommandType                                      */
/*                                                            */
/**************************************************************/

#define TV_UuvLoiterCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvLoiterCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned choice_2Present : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   DepthTypeElements choice_1;
   UuvSpeedElements choice_2;
   PositiveScalarElementType_derivations loiterDepth;
   PositiveScalarElementType_derivations timeOut;
} UuvLoiterCommandType;

EXTERN int asn1E_UuvLoiterCommandType (OSCTXT* pctxt,
   UuvLoiterCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvLoiterCommandType (OSCTXT* pctxt, 
   UuvLoiterCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvLoiterCommandType (OSCTXT* pctxt, 
   UuvLoiterCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvLoiterCommandType (OSCTXT* pctxt, 
   UuvLoiterCommandType* pvalue);

EXTERN int DOMTest_UuvLoiterCommandType (OSCTXT* pctxt, UuvLoiterCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvLoiterCommandType (UuvLoiterCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  ExitModeElements                                          */
/*                                                            */
/**************************************************************/

#define TV_ExitModeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ExitModeElements_normalExit   1
#define T_ExitModeElements_missionAbort 2
#define T_ExitModeElements_systemAbort  3
#define T_ExitModeElements_recallAbort  4

typedef struct EXTERN ExitModeElements {
   int t;
   union {
      /* t = 1 */
      NoValueElementType *normalExit;
      /* t = 2 */
      NoValueElementType *missionAbort;
      /* t = 3 */
      NoValueElementType *systemAbort;
      /* t = 4 */
      NoValueElementType *recallAbort;
   } u;
} ExitModeElements;

EXTERN int asn1E_ExitModeElements (OSCTXT* pctxt,
   ExitModeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExitModeElements (OSCTXT* pctxt, ExitModeElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExitModeElements (OSCTXT* pctxt, ExitModeElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExitModeElements (OSCTXT* pctxt, ExitModeElements* pvalue);

EXTERN int DOMTest_ExitModeElements (OSCTXT* pctxt, ExitModeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExitModeElements (ExitModeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  QuitCommandType                                           */
/*                                                            */
/**************************************************************/

#define TV_QuitCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuitCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   ExitModeElements choice;
} QuitCommandType;

EXTERN int asn1E_QuitCommandType (OSCTXT* pctxt,
   QuitCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuitCommandType (OSCTXT* pctxt, QuitCommandType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuitCommandType (OSCTXT* pctxt, QuitCommandType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuitCommandType (OSCTXT* pctxt, QuitCommandType* pvalue);

EXTERN int DOMTest_QuitCommandType (OSCTXT* pctxt, QuitCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuitCommandType (QuitCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  ScalarElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_ScalarElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ScalarElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSREAL value;
} ScalarElementType;

EXTERN int asn1E_ScalarElementType (OSCTXT* pctxt,
   ScalarElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScalarElementType (OSCTXT* pctxt, ScalarElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScalarElementType (OSCTXT* pctxt, ScalarElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScalarElementType (OSCTXT* pctxt, ScalarElementType* pvalue)
   ;

EXTERN int DOMTest_ScalarElementType (OSCTXT* pctxt, ScalarElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScalarElementType (ScalarElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  RecoverCommandType                                        */
/*                                                            */
/**************************************************************/

#define TV_RecoverCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RecoverCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   ScalarElementType range;
   HeadingElementType heading;
   PositiveScalarElementType_derivations timeOut;
} RecoverCommandType;

EXTERN int asn1E_RecoverCommandType (OSCTXT* pctxt,
   RecoverCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RecoverCommandType (OSCTXT* pctxt, 
   RecoverCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RecoverCommandType (OSCTXT* pctxt, 
   RecoverCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RecoverCommandType (OSCTXT* pctxt, 
   RecoverCommandType* pvalue);

EXTERN int DOMTest_RecoverCommandType (OSCTXT* pctxt, RecoverCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RecoverCommandType (RecoverCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  SendMessageCommandType_choice                             */
/*                                                            */
/**************************************************************/

#define TV_SendMessageCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SendMessageCommandType_choice_aVCLMessage 1

typedef struct EXTERN SendMessageCommandType_choice {
   int t;
   union {
      /* t = 1 */
      struct AvclMessageType *aVCLMessage;
   } u;
} SendMessageCommandType_choice;

EXTERN int asn1E_SendMessageCommandType_choice (OSCTXT* pctxt,
   SendMessageCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SendMessageCommandType_choice (OSCTXT* pctxt, 
   SendMessageCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SendMessageCommandType_choice (OSCTXT* pctxt, 
   SendMessageCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SendMessageCommandType_choice (OSCTXT* pctxt, 
   SendMessageCommandType_choice* pvalue);

EXTERN int DOMTest_SendMessageCommandType_choice (OSCTXT* pctxt, 
   SendMessageCommandType_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SendMessageCommandType_choice (
   SendMessageCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  SendMessageCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_SendMessageCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SendMessageCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   SendMessageCommandType_choice choice;
} SendMessageCommandType;

EXTERN int asn1E_SendMessageCommandType (OSCTXT* pctxt,
   SendMessageCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SendMessageCommandType (OSCTXT* pctxt, 
   SendMessageCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SendMessageCommandType (OSCTXT* pctxt, 
   SendMessageCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SendMessageCommandType (OSCTXT* pctxt, 
   SendMessageCommandType* pvalue);

EXTERN int DOMTest_SendMessageCommandType (OSCTXT* pctxt, 
   SendMessageCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SendMessageCommandType (SendMessageCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  SetPlanesCommandType_choice                               */
/*                                                            */
/**************************************************************/

#define TV_SetPlanesCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SetPlanesCommandType_choice_bowPlanes 1
#define T_SetPlanesCommandType_choice_sternPlanes 2
#define T_SetPlanesCommandType_choice_allPlanes 3

typedef struct EXTERN SetPlanesCommandType_choice {
   int t;
   union {
      /* t = 1 */
      SignedPercentElementType *bowPlanes;
      /* t = 2 */
      SignedPercentElementType *sternPlanes;
      /* t = 3 */
      SignedPercentElementType *allPlanes;
   } u;
} SetPlanesCommandType_choice;

EXTERN int asn1E_SetPlanesCommandType_choice (OSCTXT* pctxt,
   SetPlanesCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetPlanesCommandType_choice (OSCTXT* pctxt, 
   SetPlanesCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetPlanesCommandType_choice (OSCTXT* pctxt, 
   SetPlanesCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetPlanesCommandType_choice (OSCTXT* pctxt, 
   SetPlanesCommandType_choice* pvalue);

EXTERN int DOMTest_SetPlanesCommandType_choice (OSCTXT* pctxt, 
   SetPlanesCommandType_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetPlanesCommandType_choice (SetPlanesCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  SetPlanesCommandType                                      */
/*                                                            */
/**************************************************************/

#define TV_SetPlanesCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SetPlanesCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   SetPlanesCommandType_choice choice;
} SetPlanesCommandType;

EXTERN int asn1E_SetPlanesCommandType (OSCTXT* pctxt,
   SetPlanesCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetPlanesCommandType (OSCTXT* pctxt, 
   SetPlanesCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetPlanesCommandType (OSCTXT* pctxt, 
   SetPlanesCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetPlanesCommandType (OSCTXT* pctxt, 
   SetPlanesCommandType* pvalue);

EXTERN int DOMTest_SetPlanesCommandType (OSCTXT* pctxt, SetPlanesCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetPlanesCommandType (SetPlanesCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsoluteHorizontalPositionElements                        */
/*                                                            */
/**************************************************************/

#define TV_AbsoluteHorizontalPositionElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AbsoluteHorizontalPositionElements_latitudeLongitude 1
#define T_AbsoluteHorizontalPositionElements_xYPosition 2

typedef struct EXTERN AbsoluteHorizontalPositionElements {
   int t;
   union {
      /* t = 1 */
      LatitudeLongitudeElementType_derivations *latitudeLongitude;
      /* t = 2 */
      XyElementType *xYPosition;
   } u;
} AbsoluteHorizontalPositionElements;

EXTERN int asn1E_AbsoluteHorizontalPositionElements (OSCTXT* pctxt,
   AbsoluteHorizontalPositionElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AbsoluteHorizontalPositionElements (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AbsoluteHorizontalPositionElements (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AbsoluteHorizontalPositionElements (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElements* pvalue);

EXTERN int DOMTest_AbsoluteHorizontalPositionElements (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AbsoluteHorizontalPositionElements (
   AbsoluteHorizontalPositionElements* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvPositionCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UuvPositionCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvPositionCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned depthPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElements choice;
   PositiveScalarElementType_derivations depth;
} UuvPositionCommandType;

EXTERN int asn1E_UuvPositionCommandType (OSCTXT* pctxt,
   UuvPositionCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvPositionCommandType (OSCTXT* pctxt, 
   UuvPositionCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvPositionCommandType (OSCTXT* pctxt, 
   UuvPositionCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvPositionCommandType (OSCTXT* pctxt, 
   UuvPositionCommandType* pvalue);

EXTERN int DOMTest_UuvPositionCommandType (OSCTXT* pctxt, 
   UuvPositionCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvPositionCommandType (UuvPositionCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  SetSonarCommandType_choice                                */
/*                                                            */
/**************************************************************/

#define TV_SetSonarCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SetSonarCommandType_choice_manual 1
#define T_SetSonarCommandType_choice_scan 2
#define T_SetSonarCommandType_choice_track 3

typedef struct EXTERN SetSonarCommandType_choice {
   int t;
   union {
      /* t = 1 */
      NoValueElementType *manual;
      /* t = 2 */
      NoValueElementType *scan;
      /* t = 3 */
      NoValueElementType *track;
   } u;
} SetSonarCommandType_choice;

EXTERN int asn1E_SetSonarCommandType_choice (OSCTXT* pctxt,
   SetSonarCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetSonarCommandType_choice (OSCTXT* pctxt, 
   SetSonarCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetSonarCommandType_choice (OSCTXT* pctxt, 
   SetSonarCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetSonarCommandType_choice (OSCTXT* pctxt, 
   SetSonarCommandType_choice* pvalue);

EXTERN int DOMTest_SetSonarCommandType_choice (OSCTXT* pctxt, 
   SetSonarCommandType_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetSonarCommandType_choice (SetSonarCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  BearingTypeElements                                       */
/*                                                            */
/**************************************************************/

#define TV_BearingTypeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_BearingTypeElements_relative  1
#define T_BearingTypeElements_true_     2
#define T_BearingTypeElements_magnetic  3

typedef struct EXTERN BearingTypeElements {
   int t;
   union {
      /* t = 1 */
      NoValueElementType *relative;
      /* t = 2 */
      NoValueElementType *true_;
      /* t = 3 */
      NoValueElementType *magnetic;
   } u;
} BearingTypeElements;

EXTERN int asn1E_BearingTypeElements (OSCTXT* pctxt,
   BearingTypeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BearingTypeElements (OSCTXT* pctxt, 
   BearingTypeElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BearingTypeElements (OSCTXT* pctxt, 
   BearingTypeElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BearingTypeElements (OSCTXT* pctxt, 
   BearingTypeElements* pvalue);

EXTERN int DOMTest_BearingTypeElements (OSCTXT* pctxt, BearingTypeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BearingTypeElements (BearingTypeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  SetSonarCommandType                                       */
/*                                                            */
/**************************************************************/

#define TV_SetSonarCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SetSonarCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned bearingPresent : 1;
      unsigned elevationPresent : 1;
      unsigned choice_1Present : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   StringElementType model;
   SetSonarCommandType_choice choice;
   ScalarElementType bearing;
   ScalarElementType elevation;
   BearingTypeElements choice_1;
} SetSonarCommandType;

EXTERN int asn1E_SetSonarCommandType (OSCTXT* pctxt,
   SetSonarCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetSonarCommandType (OSCTXT* pctxt, 
   SetSonarCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetSonarCommandType (OSCTXT* pctxt, 
   SetSonarCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetSonarCommandType (OSCTXT* pctxt, 
   SetSonarCommandType* pvalue);

EXTERN int DOMTest_SetSonarCommandType (OSCTXT* pctxt, SetSonarCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetSonarCommandType (SetSonarCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  SetThrusterCommandType_choice                             */
/*                                                            */
/**************************************************************/

#define TV_SetThrusterCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SetThrusterCommandType_choice_bowLateralThruster 1
#define T_SetThrusterCommandType_choice_sternLateralThruster 2
#define T_SetThrusterCommandType_choice_lateralThrusters 3
#define T_SetThrusterCommandType_choice_bowVerticalThruster 4
#define T_SetThrusterCommandType_choice_sternVerticalThruster 5
#define T_SetThrusterCommandType_choice_verticalThrusters 6

typedef struct EXTERN SetThrusterCommandType_choice {
   int t;
   union {
      /* t = 1 */
      SignedPercentElementType *bowLateralThruster;
      /* t = 2 */
      SignedPercentElementType *sternLateralThruster;
      /* t = 3 */
      SignedPercentElementType *lateralThrusters;
      /* t = 4 */
      SignedPercentElementType *bowVerticalThruster;
      /* t = 5 */
      SignedPercentElementType *sternVerticalThruster;
      /* t = 6 */
      SignedPercentElementType *verticalThrusters;
   } u;
} SetThrusterCommandType_choice;

EXTERN int asn1E_SetThrusterCommandType_choice (OSCTXT* pctxt,
   SetThrusterCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetThrusterCommandType_choice (OSCTXT* pctxt, 
   SetThrusterCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetThrusterCommandType_choice (OSCTXT* pctxt, 
   SetThrusterCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetThrusterCommandType_choice (OSCTXT* pctxt, 
   SetThrusterCommandType_choice* pvalue);

EXTERN int DOMTest_SetThrusterCommandType_choice (OSCTXT* pctxt, 
   SetThrusterCommandType_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetThrusterCommandType_choice (
   SetThrusterCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  SetThrusterCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_SetThrusterCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SetThrusterCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   SetThrusterCommandType_choice choice;
} SetThrusterCommandType;

EXTERN int asn1E_SetThrusterCommandType (OSCTXT* pctxt,
   SetThrusterCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SetThrusterCommandType (OSCTXT* pctxt, 
   SetThrusterCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SetThrusterCommandType (OSCTXT* pctxt, 
   SetThrusterCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SetThrusterCommandType (OSCTXT* pctxt, 
   SetThrusterCommandType* pvalue);

EXTERN int DOMTest_SetThrusterCommandType (OSCTXT* pctxt, 
   SetThrusterCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SetThrusterCommandType (SetThrusterCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  TakeStationCommandType_choice                             */
/*                                                            */
/**************************************************************/

#define TV_TakeStationCommandType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_TakeStationCommandType_choice_targetSonarScan 1
#define T_TakeStationCommandType_choice_targetEdgeSonarScan 2

typedef struct EXTERN TakeStationCommandType_choice {
   int t;
   union {
      /* t = 1 */
      NoValueElementType *targetSonarScan;
      /* t = 2 */
      NoValueElementType *targetEdgeSonarScan;
   } u;
} TakeStationCommandType_choice;

EXTERN int asn1E_TakeStationCommandType_choice (OSCTXT* pctxt,
   TakeStationCommandType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TakeStationCommandType_choice (OSCTXT* pctxt, 
   TakeStationCommandType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TakeStationCommandType_choice (OSCTXT* pctxt, 
   TakeStationCommandType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TakeStationCommandType_choice (OSCTXT* pctxt, 
   TakeStationCommandType_choice* pvalue);

EXTERN int DOMTest_TakeStationCommandType_choice (OSCTXT* pctxt, 
   TakeStationCommandType_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TakeStationCommandType_choice (
   TakeStationCommandType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  TargetElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_TargetElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TargetElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned elevationPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL elevation;
   const OSUTF8CHAR* id;
   OSREAL range;
   NonNegativeScalarType timeStamp;
} TargetElementType;

EXTERN int asn1E_TargetElementType (OSCTXT* pctxt,
   TargetElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TargetElementType (OSCTXT* pctxt, TargetElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TargetElementType (OSCTXT* pctxt, TargetElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TargetElementType (OSCTXT* pctxt, TargetElementType* pvalue)
   ;

EXTERN int DOMTest_TargetElementType (OSCTXT* pctxt, TargetElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TargetElementType (TargetElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  TakeStationCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_TakeStationCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TakeStationCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned targetLocationPresent : 1;
      unsigned headingPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   TakeStationCommandType_choice choice;
   TargetElementType targetLocation;
   TargetElementType commandedStation;
   HeadingElementType heading;
   PositiveScalarElementType_derivations timeOut;
} TakeStationCommandType;

EXTERN int asn1E_TakeStationCommandType (OSCTXT* pctxt,
   TakeStationCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TakeStationCommandType (OSCTXT* pctxt, 
   TakeStationCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TakeStationCommandType (OSCTXT* pctxt, 
   TakeStationCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TakeStationCommandType (OSCTXT* pctxt, 
   TakeStationCommandType* pvalue);

EXTERN int DOMTest_TakeStationCommandType (OSCTXT* pctxt, 
   TakeStationCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TakeStationCommandType (TakeStationCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvWaypointCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UuvWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choice_1Present : 1;
      unsigned homingModePresent : 1;
      unsigned choice_2Present : 1;
      unsigned obtainGpsPresent : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   DepthTypeElements choice_1;
   TrackModeElementType homingMode;
   UuvSpeedElements choice_2;
   BooleanElementType_derivations obtainGps;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UuvWaypointCommandType;

EXTERN int asn1E_UuvWaypointCommandType (OSCTXT* pctxt,
   UuvWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvWaypointCommandType (OSCTXT* pctxt, 
   UuvWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvWaypointCommandType (OSCTXT* pctxt, 
   UuvWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvWaypointCommandType (OSCTXT* pctxt, 
   UuvWaypointCommandType* pvalue);

EXTERN int DOMTest_UuvWaypointCommandType (OSCTXT* pctxt, 
   UuvWaypointCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvWaypointCommandType (UuvWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvScriptCommandsType_element                             */
/*                                                            */
/**************************************************************/

#define TV_UuvScriptCommandsType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UuvScriptCommandsType_element_compositeWaypoint 1
#define T_UuvScriptCommandsType_element_followBeacon 2
#define T_UuvScriptCommandsType_element_gpsFix 3
#define T_UuvScriptCommandsType_element_help 4
#define T_UuvScriptCommandsType_element_hover 5
#define T_UuvScriptCommandsType_element_loiter 6
#define T_UuvScriptCommandsType_element_makeAltitude 7
#define T_UuvScriptCommandsType_element_makeDepth 8
#define T_UuvScriptCommandsType_element_makeHeading 9
#define T_UuvScriptCommandsType_element_makeKnots 10
#define T_UuvScriptCommandsType_element_makeSpeed 11
#define T_UuvScriptCommandsType_element_metaCommand 12
#define T_UuvScriptCommandsType_element_missionScript 13
#define T_UuvScriptCommandsType_element_missionScriptInline 14
#define T_UuvScriptCommandsType_element_moveLateral 15
#define T_UuvScriptCommandsType_element_moveRotate 16
#define T_UuvScriptCommandsType_element_quit 17
#define T_UuvScriptCommandsType_element_realtime 18
#define T_UuvScriptCommandsType_element_recover 19
#define T_UuvScriptCommandsType_element_sendMessage 20
#define T_UuvScriptCommandsType_element_setPlanes 21
#define T_UuvScriptCommandsType_element_setPosition 22
#define T_UuvScriptCommandsType_element_setPower 23
#define T_UuvScriptCommandsType_element_setRudder 24
#define T_UuvScriptCommandsType_element_setSonar 25
#define T_UuvScriptCommandsType_element_setStandoff 26
#define T_UuvScriptCommandsType_element_setThruster 27
#define T_UuvScriptCommandsType_element_setTime 28
#define T_UuvScriptCommandsType_element_setTimeStep 29
#define T_UuvScriptCommandsType_element_takeStation 30
#define T_UuvScriptCommandsType_element_thrusters 31
#define T_UuvScriptCommandsType_element_trace 32
#define T_UuvScriptCommandsType_element_wait 33
#define T_UuvScriptCommandsType_element_waitUntilTime 34
#define T_UuvScriptCommandsType_element_waypoint 35

typedef struct EXTERN UuvScriptCommandsType_element {
   int t;
   union {
      /* t = 1 */
      UuvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      FollowBeaconCommandType *followBeacon;
      /* t = 3 */
      GpsFixCommandType *gpsFix;
      /* t = 4 */
      NoValueElementType *help;
      /* t = 5 */
      HoverCommandType *hover;
      /* t = 6 */
      UuvLoiterCommandType *loiter;
      /* t = 7 */
      PositiveScalarElementType_derivations *makeAltitude;
      /* t = 8 */
      PositiveScalarElementType_derivations *makeDepth;
      /* t = 9 */
      HeadingElementType *makeHeading;
      /* t = 10 */
      SpeedElementType *makeKnots;
      /* t = 11 */
      SpeedElementType *makeSpeed;
      /* t = 12 */
      MetaDataType *metaCommand;
      /* t = 13 */
      StringElementType *missionScript;
      /* t = 14 */
      StringElementType *missionScriptInline;
      /* t = 15 */
      SignedPercentElementType *moveLateral;
      /* t = 16 */
      SignedPercentElementType *moveRotate;
      /* t = 17 */
      QuitCommandType *quit;
      /* t = 18 */
      BooleanElementType_derivations *realtime;
      /* t = 19 */
      RecoverCommandType *recover;
      /* t = 20 */
      SendMessageCommandType *sendMessage;
      /* t = 21 */
      SetPlanesCommandType *setPlanes;
      /* t = 22 */
      UuvPositionCommandType *setPosition;
      /* t = 23 */
      SetPropellerCommandType *setPower;
      /* t = 24 */
      SignedPercentElementType *setRudder;
      /* t = 25 */
      SetSonarCommandType *setSonar;
      /* t = 26 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 27 */
      SetThrusterCommandType *setThruster;
      /* t = 28 */
      ScalarElementType *setTime;
      /* t = 29 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 30 */
      TakeStationCommandType *takeStation;
      /* t = 31 */
      BooleanElementType_derivations *thrusters;
      /* t = 32 */
      BooleanElementType_derivations *trace;
      /* t = 33 */
      PositiveScalarElementType_derivations *wait;
      /* t = 34 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 35 */
      UuvWaypointCommandType *waypoint;
   } u;
} UuvScriptCommandsType_element;

EXTERN int asn1E_UuvScriptCommandsType_element (OSCTXT* pctxt,
   UuvScriptCommandsType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvScriptCommandsType_element (OSCTXT* pctxt, 
   UuvScriptCommandsType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvScriptCommandsType_element (OSCTXT* pctxt, 
   UuvScriptCommandsType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvScriptCommandsType_element (OSCTXT* pctxt, 
   UuvScriptCommandsType_element* pvalue);

EXTERN int DOMTest_UuvScriptCommandsType_element (OSCTXT* pctxt, 
   UuvScriptCommandsType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvScriptCommandsType_element (
   UuvScriptCommandsType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvScriptCommandsType                                     */
/*                                                            */
/**************************************************************/

#define TV_UuvScriptCommandsType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvScriptCommandsType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UuvScriptCommandsType_element */
   OSRTDList choice_list;
} UuvScriptCommandsType;

EXTERN int asn1E_UuvScriptCommandsType (OSCTXT* pctxt,
   UuvScriptCommandsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvScriptCommandsType (OSCTXT* pctxt, 
   UuvScriptCommandsType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvScriptCommandsType (OSCTXT* pctxt, 
   UuvScriptCommandsType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvScriptCommandsType (OSCTXT* pctxt, 
   UuvScriptCommandsType* pvalue);

EXTERN int DOMTest_UuvScriptCommandsType (OSCTXT* pctxt, 
   UuvScriptCommandsType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvScriptCommandsType (UuvScriptCommandsType* pvalue);

/**************************************************************/
/*                                                            */
/*  SpeedTypeElements                                         */
/*                                                            */
/**************************************************************/

#define TV_SpeedTypeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SpeedTypeElements_speed       1
#define T_SpeedTypeElements_knots       2

typedef struct EXTERN SpeedTypeElements {
   int t;
   union {
      /* t = 1 */
      PositiveScalarElementType_derivations *speed;
      /* t = 2 */
      PositiveScalarElementType_derivations *knots;
   } u;
} SpeedTypeElements;

EXTERN int asn1E_SpeedTypeElements (OSCTXT* pctxt,
   SpeedTypeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SpeedTypeElements (OSCTXT* pctxt, SpeedTypeElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SpeedTypeElements (OSCTXT* pctxt, SpeedTypeElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SpeedTypeElements (OSCTXT* pctxt, SpeedTypeElements* pvalue)
   ;

EXTERN int DOMTest_SpeedTypeElements (OSCTXT* pctxt, SpeedTypeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SpeedTypeElements (SpeedTypeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvCompositeWaypointCommandType                           */
/*                                                            */
/**************************************************************/

#define TV_UsvCompositeWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvCompositeWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned homingModePresent : 1;
      unsigned choice_1Present : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   CompositeWaypointElements choice;
   TrackModeElementType homingMode;
   SpeedTypeElements choice_1;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UsvCompositeWaypointCommandType;

EXTERN int asn1E_UsvCompositeWaypointCommandType (OSCTXT* pctxt,
   UsvCompositeWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UsvCompositeWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UsvCompositeWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UsvCompositeWaypointCommandType* pvalue);

EXTERN int DOMTest_UsvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UsvCompositeWaypointCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvCompositeWaypointCommandType (
   UsvCompositeWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvLoiterCommandType                                      */
/*                                                            */
/**************************************************************/

#define TV_UsvLoiterCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvLoiterCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   SpeedTypeElements choice_1;
   PositiveScalarElementType_derivations timeOut;
} UsvLoiterCommandType;

EXTERN int asn1E_UsvLoiterCommandType (OSCTXT* pctxt,
   UsvLoiterCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvLoiterCommandType (OSCTXT* pctxt, 
   UsvLoiterCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvLoiterCommandType (OSCTXT* pctxt, 
   UsvLoiterCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvLoiterCommandType (OSCTXT* pctxt, 
   UsvLoiterCommandType* pvalue);

EXTERN int DOMTest_UsvLoiterCommandType (OSCTXT* pctxt, UsvLoiterCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvLoiterCommandType (UsvLoiterCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvPositionCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UsvPositionCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvPositionCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElements choice;
} UsvPositionCommandType;

EXTERN int asn1E_UsvPositionCommandType (OSCTXT* pctxt,
   UsvPositionCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvPositionCommandType (OSCTXT* pctxt, 
   UsvPositionCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvPositionCommandType (OSCTXT* pctxt, 
   UsvPositionCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvPositionCommandType (OSCTXT* pctxt, 
   UsvPositionCommandType* pvalue);

EXTERN int DOMTest_UsvPositionCommandType (OSCTXT* pctxt, 
   UsvPositionCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvPositionCommandType (UsvPositionCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvWaypointCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UsvWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned homingModePresent : 1;
      unsigned choice_1Present : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   TrackModeElementType homingMode;
   SpeedTypeElements choice_1;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UsvWaypointCommandType;

EXTERN int asn1E_UsvWaypointCommandType (OSCTXT* pctxt,
   UsvWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvWaypointCommandType (OSCTXT* pctxt, 
   UsvWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvWaypointCommandType (OSCTXT* pctxt, 
   UsvWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvWaypointCommandType (OSCTXT* pctxt, 
   UsvWaypointCommandType* pvalue);

EXTERN int DOMTest_UsvWaypointCommandType (OSCTXT* pctxt, 
   UsvWaypointCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvWaypointCommandType (UsvWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvScriptCommandsType_element                             */
/*                                                            */
/**************************************************************/

#define TV_UsvScriptCommandsType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UsvScriptCommandsType_element_compositeWaypoint 1
#define T_UsvScriptCommandsType_element_followBeacon 2
#define T_UsvScriptCommandsType_element_help 3
#define T_UsvScriptCommandsType_element_loiter 4
#define T_UsvScriptCommandsType_element_makeHeading 5
#define T_UsvScriptCommandsType_element_makeKnots 6
#define T_UsvScriptCommandsType_element_makeSpeed 7
#define T_UsvScriptCommandsType_element_metaCommand 8
#define T_UsvScriptCommandsType_element_missionScript 9
#define T_UsvScriptCommandsType_element_missionScriptInline 10
#define T_UsvScriptCommandsType_element_quit 11
#define T_UsvScriptCommandsType_element_realtime 12
#define T_UsvScriptCommandsType_element_sendMessage 13
#define T_UsvScriptCommandsType_element_setPosition 14
#define T_UsvScriptCommandsType_element_setPower 15
#define T_UsvScriptCommandsType_element_setRudder 16
#define T_UsvScriptCommandsType_element_setStandoff 17
#define T_UsvScriptCommandsType_element_setTime 18
#define T_UsvScriptCommandsType_element_setTimeStep 19
#define T_UsvScriptCommandsType_element_trace 20
#define T_UsvScriptCommandsType_element_wait 21
#define T_UsvScriptCommandsType_element_waitUntilTime 22
#define T_UsvScriptCommandsType_element_waypoint 23

typedef struct EXTERN UsvScriptCommandsType_element {
   int t;
   union {
      /* t = 1 */
      UsvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      FollowBeaconCommandType *followBeacon;
      /* t = 3 */
      NoValueElementType *help;
      /* t = 4 */
      UsvLoiterCommandType *loiter;
      /* t = 5 */
      HeadingElementType *makeHeading;
      /* t = 6 */
      SpeedElementType *makeKnots;
      /* t = 7 */
      SpeedElementType *makeSpeed;
      /* t = 8 */
      MetaDataType *metaCommand;
      /* t = 9 */
      StringElementType *missionScript;
      /* t = 10 */
      StringElementType *missionScriptInline;
      /* t = 11 */
      QuitCommandType *quit;
      /* t = 12 */
      BooleanElementType_derivations *realtime;
      /* t = 13 */
      SendMessageCommandType *sendMessage;
      /* t = 14 */
      UsvPositionCommandType *setPosition;
      /* t = 15 */
      SetPropellerCommandType *setPower;
      /* t = 16 */
      SignedPercentElementType *setRudder;
      /* t = 17 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 18 */
      ScalarElementType *setTime;
      /* t = 19 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 20 */
      BooleanElementType_derivations *trace;
      /* t = 21 */
      PositiveScalarElementType_derivations *wait;
      /* t = 22 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 23 */
      UsvWaypointCommandType *waypoint;
   } u;
} UsvScriptCommandsType_element;

EXTERN int asn1E_UsvScriptCommandsType_element (OSCTXT* pctxt,
   UsvScriptCommandsType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvScriptCommandsType_element (OSCTXT* pctxt, 
   UsvScriptCommandsType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvScriptCommandsType_element (OSCTXT* pctxt, 
   UsvScriptCommandsType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvScriptCommandsType_element (OSCTXT* pctxt, 
   UsvScriptCommandsType_element* pvalue);

EXTERN int DOMTest_UsvScriptCommandsType_element (OSCTXT* pctxt, 
   UsvScriptCommandsType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvScriptCommandsType_element (
   UsvScriptCommandsType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvScriptCommandsType                                     */
/*                                                            */
/**************************************************************/

#define TV_UsvScriptCommandsType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvScriptCommandsType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UsvScriptCommandsType_element */
   OSRTDList choice_list;
} UsvScriptCommandsType;

EXTERN int asn1E_UsvScriptCommandsType (OSCTXT* pctxt,
   UsvScriptCommandsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvScriptCommandsType (OSCTXT* pctxt, 
   UsvScriptCommandsType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvScriptCommandsType (OSCTXT* pctxt, 
   UsvScriptCommandsType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvScriptCommandsType (OSCTXT* pctxt, 
   UsvScriptCommandsType* pvalue);

EXTERN int DOMTest_UsvScriptCommandsType (OSCTXT* pctxt, 
   UsvScriptCommandsType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvScriptCommandsType (UsvScriptCommandsType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvCompositeWaypointCommandType                           */
/*                                                            */
/**************************************************************/

#define TV_UgvCompositeWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvCompositeWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned homingModePresent : 1;
      unsigned choice_1Present : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   CompositeWaypointElements choice;
   TrackModeElementType homingMode;
   SpeedTypeElements choice_1;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UgvCompositeWaypointCommandType;

EXTERN int asn1E_UgvCompositeWaypointCommandType (OSCTXT* pctxt,
   UgvCompositeWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UgvCompositeWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UgvCompositeWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UgvCompositeWaypointCommandType* pvalue);

EXTERN int DOMTest_UgvCompositeWaypointCommandType (OSCTXT* pctxt, 
   UgvCompositeWaypointCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvCompositeWaypointCommandType (
   UgvCompositeWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvLoiterCommandType                                      */
/*                                                            */
/**************************************************************/

#define TV_UgvLoiterCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvLoiterCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   SpeedTypeElements choice_1;
   PositiveScalarElementType_derivations timeOut;
} UgvLoiterCommandType;

EXTERN int asn1E_UgvLoiterCommandType (OSCTXT* pctxt,
   UgvLoiterCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvLoiterCommandType (OSCTXT* pctxt, 
   UgvLoiterCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvLoiterCommandType (OSCTXT* pctxt, 
   UgvLoiterCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvLoiterCommandType (OSCTXT* pctxt, 
   UgvLoiterCommandType* pvalue);

EXTERN int DOMTest_UgvLoiterCommandType (OSCTXT* pctxt, UgvLoiterCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvLoiterCommandType (UgvLoiterCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvPositionCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UgvPositionCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvPositionCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElements choice;
} UgvPositionCommandType;

EXTERN int asn1E_UgvPositionCommandType (OSCTXT* pctxt,
   UgvPositionCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvPositionCommandType (OSCTXT* pctxt, 
   UgvPositionCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvPositionCommandType (OSCTXT* pctxt, 
   UgvPositionCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvPositionCommandType (OSCTXT* pctxt, 
   UgvPositionCommandType* pvalue);

EXTERN int DOMTest_UgvPositionCommandType (OSCTXT* pctxt, 
   UgvPositionCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvPositionCommandType (UgvPositionCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvWaypointCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UgvWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choice_1Present : 1;
      unsigned homingModePresent : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   SpeedTypeElements choice_1;
   TrackModeElementType homingMode;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UgvWaypointCommandType;

EXTERN int asn1E_UgvWaypointCommandType (OSCTXT* pctxt,
   UgvWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvWaypointCommandType (OSCTXT* pctxt, 
   UgvWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvWaypointCommandType (OSCTXT* pctxt, 
   UgvWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvWaypointCommandType (OSCTXT* pctxt, 
   UgvWaypointCommandType* pvalue);

EXTERN int DOMTest_UgvWaypointCommandType (OSCTXT* pctxt, 
   UgvWaypointCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvWaypointCommandType (UgvWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvScriptCommandsType_element                             */
/*                                                            */
/**************************************************************/

#define TV_UgvScriptCommandsType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UgvScriptCommandsType_element_compositeWaypoint 1
#define T_UgvScriptCommandsType_element_followBeacon 2
#define T_UgvScriptCommandsType_element_help 3
#define T_UgvScriptCommandsType_element_loiter 4
#define T_UgvScriptCommandsType_element_makeHeading 5
#define T_UgvScriptCommandsType_element_makeKnots 6
#define T_UgvScriptCommandsType_element_makeSpeed 7
#define T_UgvScriptCommandsType_element_metaCommand 8
#define T_UgvScriptCommandsType_element_missionScript 9
#define T_UgvScriptCommandsType_element_missionScriptInline 10
#define T_UgvScriptCommandsType_element_quit 11
#define T_UgvScriptCommandsType_element_realtime 12
#define T_UgvScriptCommandsType_element_sendMessage 13
#define T_UgvScriptCommandsType_element_setPosition 14
#define T_UgvScriptCommandsType_element_setStandoff 15
#define T_UgvScriptCommandsType_element_setTime 16
#define T_UgvScriptCommandsType_element_setTimeStep 17
#define T_UgvScriptCommandsType_element_trace 18
#define T_UgvScriptCommandsType_element_wait 19
#define T_UgvScriptCommandsType_element_waitUntilTime 20
#define T_UgvScriptCommandsType_element_waypoint 21

typedef struct EXTERN UgvScriptCommandsType_element {
   int t;
   union {
      /* t = 1 */
      UgvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      FollowBeaconCommandType *followBeacon;
      /* t = 3 */
      NoValueElementType *help;
      /* t = 4 */
      UgvLoiterCommandType *loiter;
      /* t = 5 */
      HeadingElementType *makeHeading;
      /* t = 6 */
      PositiveScalarElementType_derivations *makeKnots;
      /* t = 7 */
      PositiveScalarElementType_derivations *makeSpeed;
      /* t = 8 */
      MetaDataType *metaCommand;
      /* t = 9 */
      StringElementType *missionScript;
      /* t = 10 */
      StringElementType *missionScriptInline;
      /* t = 11 */
      QuitCommandType *quit;
      /* t = 12 */
      BooleanElementType_derivations *realtime;
      /* t = 13 */
      SendMessageCommandType *sendMessage;
      /* t = 14 */
      UgvPositionCommandType *setPosition;
      /* t = 15 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 16 */
      ScalarElementType *setTime;
      /* t = 17 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 18 */
      BooleanElementType_derivations *trace;
      /* t = 19 */
      PositiveScalarElementType_derivations *wait;
      /* t = 20 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 21 */
      UgvWaypointCommandType *waypoint;
   } u;
} UgvScriptCommandsType_element;

EXTERN int asn1E_UgvScriptCommandsType_element (OSCTXT* pctxt,
   UgvScriptCommandsType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvScriptCommandsType_element (OSCTXT* pctxt, 
   UgvScriptCommandsType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvScriptCommandsType_element (OSCTXT* pctxt, 
   UgvScriptCommandsType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvScriptCommandsType_element (OSCTXT* pctxt, 
   UgvScriptCommandsType_element* pvalue);

EXTERN int DOMTest_UgvScriptCommandsType_element (OSCTXT* pctxt, 
   UgvScriptCommandsType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvScriptCommandsType_element (
   UgvScriptCommandsType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvScriptCommandsType                                     */
/*                                                            */
/**************************************************************/

#define TV_UgvScriptCommandsType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvScriptCommandsType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UgvScriptCommandsType_element */
   OSRTDList choice_list;
} UgvScriptCommandsType;

EXTERN int asn1E_UgvScriptCommandsType (OSCTXT* pctxt,
   UgvScriptCommandsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvScriptCommandsType (OSCTXT* pctxt, 
   UgvScriptCommandsType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvScriptCommandsType (OSCTXT* pctxt, 
   UgvScriptCommandsType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvScriptCommandsType (OSCTXT* pctxt, 
   UgvScriptCommandsType* pvalue);

EXTERN int DOMTest_UgvScriptCommandsType (OSCTXT* pctxt, 
   UgvScriptCommandsType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvScriptCommandsType (UgvScriptCommandsType* pvalue);

/**************************************************************/
/*                                                            */
/*  AltitudeTypeElements                                      */
/*                                                            */
/**************************************************************/

#define TV_AltitudeTypeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AltitudeTypeElements_aGLAltitude 1
#define T_AltitudeTypeElements_mSLAltitude 2

typedef struct EXTERN AltitudeTypeElements {
   int t;
   union {
      /* t = 1 */
      PositiveScalarElementType_derivations *aGLAltitude;
      /* t = 2 */
      PositiveScalarElementType_derivations *mSLAltitude;
   } u;
} AltitudeTypeElements;

EXTERN int asn1E_AltitudeTypeElements (OSCTXT* pctxt,
   AltitudeTypeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AltitudeTypeElements (OSCTXT* pctxt, 
   AltitudeTypeElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AltitudeTypeElements (OSCTXT* pctxt, 
   AltitudeTypeElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AltitudeTypeElements (OSCTXT* pctxt, 
   AltitudeTypeElements* pvalue);

EXTERN int DOMTest_AltitudeTypeElements (OSCTXT* pctxt, AltitudeTypeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AltitudeTypeElements (AltitudeTypeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  UavCompositeWaypointCommandType                           */
/*                                                            */
/**************************************************************/

#define TV_UavCompositeWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavCompositeWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned homingModePresent : 1;
      unsigned choice_2Present : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   CompositeWaypointElements choice;
   AltitudeTypeElements choice_1;
   TrackModeElementType homingMode;
   SpeedTypeElements choice_2;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UavCompositeWaypointCommandType;

EXTERN int asn1E_UavCompositeWaypointCommandType (OSCTXT* pctxt,
   UavCompositeWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavCompositeWaypointCommandType (OSCTXT* pctxt, 
   UavCompositeWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavCompositeWaypointCommandType (OSCTXT* pctxt, 
   UavCompositeWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavCompositeWaypointCommandType (OSCTXT* pctxt, 
   UavCompositeWaypointCommandType* pvalue);

EXTERN int DOMTest_UavCompositeWaypointCommandType (OSCTXT* pctxt, 
   UavCompositeWaypointCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavCompositeWaypointCommandType (
   UavCompositeWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavLoiterCommandType                                      */
/*                                                            */
/**************************************************************/

#define TV_UavLoiterCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavLoiterCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned choice_2Present : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   SpeedTypeElements choice_1;
   AltitudeTypeElements choice_2;
   PositiveScalarElementType_derivations loiterAltitude;
   PositiveScalarElementType_derivations timeOut;
} UavLoiterCommandType;

EXTERN int asn1E_UavLoiterCommandType (OSCTXT* pctxt,
   UavLoiterCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavLoiterCommandType (OSCTXT* pctxt, 
   UavLoiterCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavLoiterCommandType (OSCTXT* pctxt, 
   UavLoiterCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavLoiterCommandType (OSCTXT* pctxt, 
   UavLoiterCommandType* pvalue);

EXTERN int DOMTest_UavLoiterCommandType (OSCTXT* pctxt, UavLoiterCommandType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavLoiterCommandType (UavLoiterCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavPositionCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UavPositionCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavPositionCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned mSLAltitudePresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElements choice;
   ScalarElementType mSLAltitude;
} UavPositionCommandType;

EXTERN int asn1E_UavPositionCommandType (OSCTXT* pctxt,
   UavPositionCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavPositionCommandType (OSCTXT* pctxt, 
   UavPositionCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavPositionCommandType (OSCTXT* pctxt, 
   UavPositionCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavPositionCommandType (OSCTXT* pctxt, 
   UavPositionCommandType* pvalue);

EXTERN int DOMTest_UavPositionCommandType (OSCTXT* pctxt, 
   UavPositionCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavPositionCommandType (UavPositionCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  PercentType                                               */
/*                                                            */
/**************************************************************/

#define TV_PercentType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL PercentType;

EXTERN int asn1E_PercentType (OSCTXT* pctxt,
   PercentType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PercentType (OSCTXT* pctxt, PercentType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PercentType (OSCTXT* pctxt, PercentType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PercentType (OSCTXT* pctxt, PercentType* pvalue);

/**************************************************************/
/*                                                            */
/*  PercentElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_PercentElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PercentElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PercentType value;
} PercentElementType;

EXTERN int asn1E_PercentElementType (OSCTXT* pctxt,
   PercentElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PercentElementType (OSCTXT* pctxt, 
   PercentElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PercentElementType (OSCTXT* pctxt, 
   PercentElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PercentElementType (OSCTXT* pctxt, 
   PercentElementType* pvalue);

EXTERN int DOMTest_PercentElementType (OSCTXT* pctxt, PercentElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PercentElementType (PercentElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavWaypointCommandType                                    */
/*                                                            */
/**************************************************************/

#define TV_UavWaypointCommandType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavWaypointCommandType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choice_1Present : 1;
      unsigned homingModePresent : 1;
      unsigned choice_2Present : 1;
      unsigned standoffPresent : 1;
      unsigned timeOutPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   HorizontalPositionElements choice;
   AltitudeTypeElements choice_1;
   TrackModeElementType homingMode;
   SpeedTypeElements choice_2;
   PositiveScalarElementType_derivations standoff;
   PositiveScalarElementType_derivations timeOut;
} UavWaypointCommandType;

EXTERN int asn1E_UavWaypointCommandType (OSCTXT* pctxt,
   UavWaypointCommandType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavWaypointCommandType (OSCTXT* pctxt, 
   UavWaypointCommandType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavWaypointCommandType (OSCTXT* pctxt, 
   UavWaypointCommandType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavWaypointCommandType (OSCTXT* pctxt, 
   UavWaypointCommandType* pvalue);

EXTERN int DOMTest_UavWaypointCommandType (OSCTXT* pctxt, 
   UavWaypointCommandType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavWaypointCommandType (UavWaypointCommandType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavScriptCommandsType_element                             */
/*                                                            */
/**************************************************************/

#define TV_UavScriptCommandsType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UavScriptCommandsType_element_compositeWaypoint 1
#define T_UavScriptCommandsType_element_followBeacon 2
#define T_UavScriptCommandsType_element_help 3
#define T_UavScriptCommandsType_element_loiter 4
#define T_UavScriptCommandsType_element_makeAltitudeAGL 5
#define T_UavScriptCommandsType_element_makeAltitudeMSL 6
#define T_UavScriptCommandsType_element_makeClimbRate 7
#define T_UavScriptCommandsType_element_makeHeading 8
#define T_UavScriptCommandsType_element_makeKnots 9
#define T_UavScriptCommandsType_element_makeSpeed 10
#define T_UavScriptCommandsType_element_makeTurnRate 11
#define T_UavScriptCommandsType_element_metaCommand 12
#define T_UavScriptCommandsType_element_missionScript 13
#define T_UavScriptCommandsType_element_missionScriptInline 14
#define T_UavScriptCommandsType_element_quit 15
#define T_UavScriptCommandsType_element_realtime 16
#define T_UavScriptCommandsType_element_sendMessage 17
#define T_UavScriptCommandsType_element_setAileron 18
#define T_UavScriptCommandsType_element_setElevator 19
#define T_UavScriptCommandsType_element_setPosition 20
#define T_UavScriptCommandsType_element_setPower 21
#define T_UavScriptCommandsType_element_setRudder 22
#define T_UavScriptCommandsType_element_setStandoff 23
#define T_UavScriptCommandsType_element_setTime 24
#define T_UavScriptCommandsType_element_setTimeStep 25
#define T_UavScriptCommandsType_element_trace 26
#define T_UavScriptCommandsType_element_wait 27
#define T_UavScriptCommandsType_element_waitUntilTime 28
#define T_UavScriptCommandsType_element_waypoint 29

typedef struct EXTERN UavScriptCommandsType_element {
   int t;
   union {
      /* t = 1 */
      UavCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      FollowBeaconCommandType *followBeacon;
      /* t = 3 */
      NoValueElementType *help;
      /* t = 4 */
      UavLoiterCommandType *loiter;
      /* t = 5 */
      PositiveScalarElementType_derivations *makeAltitudeAGL;
      /* t = 6 */
      PositiveScalarElementType_derivations *makeAltitudeMSL;
      /* t = 7 */
      SignedPercentElementType *makeClimbRate;
      /* t = 8 */
      HeadingElementType *makeHeading;
      /* t = 9 */
      SpeedElementType *makeKnots;
      /* t = 10 */
      SpeedElementType *makeSpeed;
      /* t = 11 */
      SignedPercentElementType *makeTurnRate;
      /* t = 12 */
      MetaDataType *metaCommand;
      /* t = 13 */
      StringElementType *missionScript;
      /* t = 14 */
      StringElementType *missionScriptInline;
      /* t = 15 */
      QuitCommandType *quit;
      /* t = 16 */
      BooleanElementType_derivations *realtime;
      /* t = 17 */
      SendMessageCommandType *sendMessage;
      /* t = 18 */
      SignedPercentElementType *setAileron;
      /* t = 19 */
      SignedPercentElementType *setElevator;
      /* t = 20 */
      UavPositionCommandType *setPosition;
      /* t = 21 */
      PercentElementType *setPower;
      /* t = 22 */
      SignedPercentElementType *setRudder;
      /* t = 23 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 24 */
      ScalarElementType *setTime;
      /* t = 25 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 26 */
      BooleanElementType_derivations *trace;
      /* t = 27 */
      PositiveScalarElementType_derivations *wait;
      /* t = 28 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 29 */
      UavWaypointCommandType *waypoint;
   } u;
} UavScriptCommandsType_element;

EXTERN int asn1E_UavScriptCommandsType_element (OSCTXT* pctxt,
   UavScriptCommandsType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavScriptCommandsType_element (OSCTXT* pctxt, 
   UavScriptCommandsType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavScriptCommandsType_element (OSCTXT* pctxt, 
   UavScriptCommandsType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavScriptCommandsType_element (OSCTXT* pctxt, 
   UavScriptCommandsType_element* pvalue);

EXTERN int DOMTest_UavScriptCommandsType_element (OSCTXT* pctxt, 
   UavScriptCommandsType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavScriptCommandsType_element (
   UavScriptCommandsType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UavScriptCommandsType                                     */
/*                                                            */
/**************************************************************/

#define TV_UavScriptCommandsType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavScriptCommandsType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UavScriptCommandsType_element */
   OSRTDList choice_list;
} UavScriptCommandsType;

EXTERN int asn1E_UavScriptCommandsType (OSCTXT* pctxt,
   UavScriptCommandsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavScriptCommandsType (OSCTXT* pctxt, 
   UavScriptCommandsType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavScriptCommandsType (OSCTXT* pctxt, 
   UavScriptCommandsType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavScriptCommandsType (OSCTXT* pctxt, 
   UavScriptCommandsType* pvalue);

EXTERN int DOMTest_UavScriptCommandsType (OSCTXT* pctxt, 
   UavScriptCommandsType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavScriptCommandsType (UavScriptCommandsType* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsoluteHorizontalPositionElementType                     */
/*                                                            */
/**************************************************************/

#define TV_AbsoluteHorizontalPositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AbsoluteHorizontalPositionElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElements choice;
} AbsoluteHorizontalPositionElementType;

EXTERN int asn1E_AbsoluteHorizontalPositionElementType (OSCTXT* pctxt,
   AbsoluteHorizontalPositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AbsoluteHorizontalPositionElementType (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElementType *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_AbsoluteHorizontalPositionElementType (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AbsoluteHorizontalPositionElementType (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElementType* pvalue);

EXTERN int DOMTest_AbsoluteHorizontalPositionElementType (OSCTXT* pctxt, 
   AbsoluteHorizontalPositionElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AbsoluteHorizontalPositionElementType (
   AbsoluteHorizontalPositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  WeaponStatusType                                          */
/*                                                            */
/**************************************************************/

#define TV_WeaponStatusType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   WeaponStatusType_free_ = 0,
   WeaponStatusType_safe = 1,
   WeaponStatusType_tight = 2
} WeaponStatusType_Root;

typedef OSUINT32 WeaponStatusType;

EXTERN int asn1E_WeaponStatusType (OSCTXT* pctxt,
   WeaponStatusType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_WeaponStatusType (OSCTXT* pctxt, WeaponStatusType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_WeaponStatusType (OSCTXT* pctxt, WeaponStatusType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_WeaponStatusType (OSCTXT* pctxt, WeaponStatusType* pvalue);

EXTERN const OSUTF8CHAR* WeaponStatusType_ToString (OSINT32 value);

EXTERN int WeaponStatusType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, WeaponStatusType* pvalue);

/**************************************************************/
/*                                                            */
/*  ActionObjectElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_ActionObjectElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ActionObjectElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* name;
   NonNegativeScalarType timeStamp;
} ActionObjectElementType;

EXTERN int asn1E_ActionObjectElementType (OSCTXT* pctxt,
   ActionObjectElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ActionObjectElementType (OSCTXT* pctxt, 
   ActionObjectElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ActionObjectElementType (OSCTXT* pctxt, 
   ActionObjectElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ActionObjectElementType (OSCTXT* pctxt, 
   ActionObjectElementType* pvalue);

EXTERN int DOMTest_ActionObjectElementType (OSCTXT* pctxt, 
   ActionObjectElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ActionObjectElementType (ActionObjectElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AttackElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_AttackElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AttackElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   OSBOOL disableOnly;
   const OSUTF8CHAR* id;
   OSBOOL singleTarget;
   NonNegativeScalarType timeStamp;
   WeaponStatusType weaponStatus;
   /* List of ActionObjectElementType */
   OSRTDList target_list;
} AttackElementType;

EXTERN int asn1E_AttackElementType (OSCTXT* pctxt,
   AttackElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AttackElementType (OSCTXT* pctxt, AttackElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AttackElementType (OSCTXT* pctxt, AttackElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AttackElementType (OSCTXT* pctxt, AttackElementType* pvalue)
   ;

EXTERN int DOMTest_AttackElementType (OSCTXT* pctxt, AttackElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AttackElementType (AttackElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  ContaminantType                                           */
/*                                                            */
/**************************************************************/

#define TV_ContaminantType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ContaminantType_biological = 0,
   ContaminantType_chemical = 1,
   ContaminantType_explosive = 2,
   ContaminantType_nuclear = 3,
   ContaminantType_toxin = 4
} ContaminantType_Root;

typedef OSUINT32 ContaminantType;

EXTERN int asn1E_ContaminantType (OSCTXT* pctxt,
   ContaminantType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContaminantType (OSCTXT* pctxt, ContaminantType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContaminantType (OSCTXT* pctxt, ContaminantType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContaminantType (OSCTXT* pctxt, ContaminantType* pvalue);

EXTERN const OSUTF8CHAR* ContaminantType_ToString (OSINT32 value);

EXTERN int ContaminantType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ContaminantType* pvalue);

/**************************************************************/
/*                                                            */
/*  ContaminantElementType                                    */
/*                                                            */
/**************************************************************/

#define TV_ContaminantElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ContaminantElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   ContaminantType type;
} ContaminantElementType;

EXTERN int asn1E_ContaminantElementType (OSCTXT* pctxt,
   ContaminantElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContaminantElementType (OSCTXT* pctxt, 
   ContaminantElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContaminantElementType (OSCTXT* pctxt, 
   ContaminantElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContaminantElementType (OSCTXT* pctxt, 
   ContaminantElementType* pvalue);

EXTERN int DOMTest_ContaminantElementType (OSCTXT* pctxt, 
   ContaminantElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ContaminantElementType (ContaminantElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DecontaminateElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_DecontaminateElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DecontaminateElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of ContaminantElementType */
   OSRTDList contaminant_list;
} DecontaminateElementType;

EXTERN int asn1E_DecontaminateElementType (OSCTXT* pctxt,
   DecontaminateElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DecontaminateElementType (OSCTXT* pctxt, 
   DecontaminateElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DecontaminateElementType (OSCTXT* pctxt, 
   DecontaminateElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DecontaminateElementType (OSCTXT* pctxt, 
   DecontaminateElementType* pvalue);

EXTERN int DOMTest_DecontaminateElementType (OSCTXT* pctxt, 
   DecontaminateElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DecontaminateElementType (DecontaminateElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DemolishElementType                                       */
/*                                                            */
/**************************************************************/

#define TV_DemolishElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DemolishElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   OSBOOL permanentDisable;
   OSBOOL singleTarget;
   NonNegativeScalarType timeStamp;
   /* List of ActionObjectElementType */
   OSRTDList target_list;
} DemolishElementType;

EXTERN int asn1E_DemolishElementType (OSCTXT* pctxt,
   DemolishElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DemolishElementType (OSCTXT* pctxt, 
   DemolishElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DemolishElementType (OSCTXT* pctxt, 
   DemolishElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DemolishElementType (OSCTXT* pctxt, 
   DemolishElementType* pvalue);

EXTERN int DOMTest_DemolishElementType (OSCTXT* pctxt, DemolishElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DemolishElementType (DemolishElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  IlluminatorType                                           */
/*                                                            */
/**************************************************************/

#define TV_IlluminatorType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   IlluminatorType_pyrotechnics = 0,
   IlluminatorType_spotlight = 1
} IlluminatorType_Root;

typedef OSUINT32 IlluminatorType;

EXTERN int asn1E_IlluminatorType (OSCTXT* pctxt,
   IlluminatorType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IlluminatorType (OSCTXT* pctxt, IlluminatorType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_IlluminatorType (OSCTXT* pctxt, IlluminatorType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IlluminatorType (OSCTXT* pctxt, IlluminatorType* pvalue);

EXTERN const OSUTF8CHAR* IlluminatorType_ToString (OSINT32 value);

EXTERN int IlluminatorType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, IlluminatorType* pvalue);

/**************************************************************/
/*                                                            */
/*  IlluminatorElementType                                    */
/*                                                            */
/**************************************************************/

#define TV_IlluminatorElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IlluminatorElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   IlluminatorType type;
   /* List of StringElementType */
   OSRTDList illuminatorCharacteristic_list;
} IlluminatorElementType;

EXTERN int asn1E_IlluminatorElementType (OSCTXT* pctxt,
   IlluminatorElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IlluminatorElementType (OSCTXT* pctxt, 
   IlluminatorElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IlluminatorElementType (OSCTXT* pctxt, 
   IlluminatorElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IlluminatorElementType (OSCTXT* pctxt, 
   IlluminatorElementType* pvalue);

EXTERN int DOMTest_IlluminatorElementType (OSCTXT* pctxt, 
   IlluminatorElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IlluminatorElementType (IlluminatorElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  IlluminateElementType                                     */
/*                                                            */
/**************************************************************/

#define TV_IlluminateElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IlluminateElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   IlluminatorElementType illuminator;
} IlluminateElementType;

EXTERN int asn1E_IlluminateElementType (OSCTXT* pctxt,
   IlluminateElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IlluminateElementType (OSCTXT* pctxt, 
   IlluminateElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IlluminateElementType (OSCTXT* pctxt, 
   IlluminateElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IlluminateElementType (OSCTXT* pctxt, 
   IlluminateElementType* pvalue);

EXTERN int DOMTest_IlluminateElementType (OSCTXT* pctxt, 
   IlluminateElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IlluminateElementType (IlluminateElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  FrequencyRangeElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_FrequencyRangeElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FrequencyRangeElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   PositiveScalarType maxFrequency;
   NonNegativeScalarType minFrequency;
   NonNegativeScalarType timeStamp;
} FrequencyRangeElementType;

EXTERN int asn1E_FrequencyRangeElementType (OSCTXT* pctxt,
   FrequencyRangeElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FrequencyRangeElementType (OSCTXT* pctxt, 
   FrequencyRangeElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FrequencyRangeElementType (OSCTXT* pctxt, 
   FrequencyRangeElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FrequencyRangeElementType (OSCTXT* pctxt, 
   FrequencyRangeElementType* pvalue);

EXTERN int DOMTest_FrequencyRangeElementType (OSCTXT* pctxt, 
   FrequencyRangeElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FrequencyRangeElementType (FrequencyRangeElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  JamElementType                                            */
/*                                                            */
/**************************************************************/

#define TV_JamElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN JamElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of FrequencyRangeElementType */
   OSRTDList frequencyRange_list;
} JamElementType;

EXTERN int asn1E_JamElementType (OSCTXT* pctxt,
   JamElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_JamElementType (OSCTXT* pctxt, JamElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_JamElementType (OSCTXT* pctxt, JamElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_JamElementType (OSCTXT* pctxt, JamElementType* pvalue);

EXTERN int DOMTest_JamElementType (OSCTXT* pctxt, JamElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_JamElementType (JamElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MarkerType                                                */
/*                                                            */
/**************************************************************/

#define TV_MarkerType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   MarkerType_laser = 0,
   MarkerType_smoke = 1
} MarkerType_Root;

typedef OSUINT32 MarkerType;

EXTERN int asn1E_MarkerType (OSCTXT* pctxt,
   MarkerType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MarkerType (OSCTXT* pctxt, MarkerType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MarkerType (OSCTXT* pctxt, MarkerType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MarkerType (OSCTXT* pctxt, MarkerType* pvalue);

EXTERN const OSUTF8CHAR* MarkerType_ToString (OSINT32 value);

EXTERN int MarkerType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MarkerType* pvalue);

/**************************************************************/
/*                                                            */
/*  MarkerElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_MarkerElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MarkerElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   MarkerType type;
   /* List of StringElementType */
   OSRTDList markerCharacteristic_list;
} MarkerElementType;

EXTERN int asn1E_MarkerElementType (OSCTXT* pctxt,
   MarkerElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MarkerElementType (OSCTXT* pctxt, MarkerElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MarkerElementType (OSCTXT* pctxt, MarkerElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MarkerElementType (OSCTXT* pctxt, MarkerElementType* pvalue)
   ;

EXTERN int DOMTest_MarkerElementType (OSCTXT* pctxt, MarkerElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MarkerElementType (MarkerElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MarkElementType                                           */
/*                                                            */
/**************************************************************/

#define TV_MarkElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MarkElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   MarkerElementType marker;
   /* List of ActionObjectElementType */
   OSRTDList target_list;
} MarkElementType;

EXTERN int asn1E_MarkElementType (OSCTXT* pctxt,
   MarkElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MarkElementType (OSCTXT* pctxt, MarkElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MarkElementType (OSCTXT* pctxt, MarkElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MarkElementType (OSCTXT* pctxt, MarkElementType* pvalue);

EXTERN int DOMTest_MarkElementType (OSCTXT* pctxt, MarkElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MarkElementType (MarkElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MonitorTransmissionsElementType                           */
/*                                                            */
/**************************************************************/

#define TV_MonitorTransmissionsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MonitorTransmissionsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of FrequencyRangeElementType */
   OSRTDList frequencyRange_list;
} MonitorTransmissionsElementType;

EXTERN int asn1E_MonitorTransmissionsElementType (OSCTXT* pctxt,
   MonitorTransmissionsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MonitorTransmissionsElementType (OSCTXT* pctxt, 
   MonitorTransmissionsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MonitorTransmissionsElementType (OSCTXT* pctxt, 
   MonitorTransmissionsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MonitorTransmissionsElementType (OSCTXT* pctxt, 
   MonitorTransmissionsElementType* pvalue);

EXTERN int DOMTest_MonitorTransmissionsElementType (OSCTXT* pctxt, 
   MonitorTransmissionsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MonitorTransmissionsElementType (
   MonitorTransmissionsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  PatrolElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_PatrolElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PatrolElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of StringElementType */
   OSRTDList qualifier_list;
} PatrolElementType;

EXTERN int asn1E_PatrolElementType (OSCTXT* pctxt,
   PatrolElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PatrolElementType (OSCTXT* pctxt, PatrolElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PatrolElementType (OSCTXT* pctxt, PatrolElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PatrolElementType (OSCTXT* pctxt, PatrolElementType* pvalue)
   ;

EXTERN int DOMTest_PatrolElementType (OSCTXT* pctxt, PatrolElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PatrolElementType (PatrolElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  RendezvousElementType                                     */
/*                                                            */
/**************************************************************/

#define TV_RendezvousElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RendezvousElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* targetVehicleID;
   NonNegativeScalarType timeStamp;
   /* List of StringElementType */
   OSRTDList qualifier_list;
} RendezvousElementType;

EXTERN int asn1E_RendezvousElementType (OSCTXT* pctxt,
   RendezvousElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RendezvousElementType (OSCTXT* pctxt, 
   RendezvousElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RendezvousElementType (OSCTXT* pctxt, 
   RendezvousElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RendezvousElementType (OSCTXT* pctxt, 
   RendezvousElementType* pvalue);

EXTERN int DOMTest_RendezvousElementType (OSCTXT* pctxt, 
   RendezvousElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RendezvousElementType (RendezvousElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  SampleEnvironmentElementType                              */
/*                                                            */
/**************************************************************/

#define TV_SampleEnvironmentElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SampleEnvironmentElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of ContaminantElementType */
   OSRTDList contaminant_list;
} SampleEnvironmentElementType;

EXTERN int asn1E_SampleEnvironmentElementType (OSCTXT* pctxt,
   SampleEnvironmentElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SampleEnvironmentElementType (OSCTXT* pctxt, 
   SampleEnvironmentElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SampleEnvironmentElementType (OSCTXT* pctxt, 
   SampleEnvironmentElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SampleEnvironmentElementType (OSCTXT* pctxt, 
   SampleEnvironmentElementType* pvalue);

EXTERN int DOMTest_SampleEnvironmentElementType (OSCTXT* pctxt, 
   SampleEnvironmentElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SampleEnvironmentElementType (
   SampleEnvironmentElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DatumTypeType                                             */
/*                                                            */
/**************************************************************/

#define TV_DatumTypeType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DatumTypeType_area = 0,
   DatumTypeType_point = 1
} DatumTypeType_Root;

typedef OSUINT32 DatumTypeType;

EXTERN int asn1E_DatumTypeType (OSCTXT* pctxt,
   DatumTypeType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DatumTypeType (OSCTXT* pctxt, DatumTypeType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DatumTypeType (OSCTXT* pctxt, DatumTypeType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DatumTypeType (OSCTXT* pctxt, DatumTypeType* pvalue);

EXTERN const OSUTF8CHAR* DatumTypeType_ToString (OSINT32 value);

EXTERN int DatumTypeType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DatumTypeType* pvalue);

/**************************************************************/
/*                                                            */
/*  SearchElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_SearchElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SearchElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   DatumTypeType datumType;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   PercentType requiredPD;
   OSBOOL singleTarget;
   NonNegativeScalarType timeStamp;
   /* List of ActionObjectElementType */
   OSRTDList searchTarget_list;
} SearchElementType;

EXTERN int asn1E_SearchElementType (OSCTXT* pctxt,
   SearchElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SearchElementType (OSCTXT* pctxt, SearchElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SearchElementType (OSCTXT* pctxt, SearchElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SearchElementType (OSCTXT* pctxt, SearchElementType* pvalue)
   ;

EXTERN int DOMTest_SearchElementType (OSCTXT* pctxt, SearchElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SearchElementType (SearchElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  GoalElements                                              */
/*                                                            */
/**************************************************************/

#define TV_GoalElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_GoalElements_attack           1
#define T_GoalElements_decontaminate    2
#define T_GoalElements_demolish         3
#define T_GoalElements_illuminateArea   4
#define T_GoalElements_jam              5
#define T_GoalElements_markTarget       6
#define T_GoalElements_monitorTransmissions 7
#define T_GoalElements_patrol           8
#define T_GoalElements_rendezvous       9
#define T_GoalElements_reposition       10
#define T_GoalElements_sampleEnvironment 11
#define T_GoalElements_search           12

typedef struct EXTERN GoalElements {
   int t;
   union {
      /* t = 1 */
      AttackElementType *attack;
      /* t = 2 */
      DecontaminateElementType *decontaminate;
      /* t = 3 */
      DemolishElementType *demolish;
      /* t = 4 */
      IlluminateElementType *illuminateArea;
      /* t = 5 */
      JamElementType *jam;
      /* t = 6 */
      MarkElementType *markTarget;
      /* t = 7 */
      MonitorTransmissionsElementType *monitorTransmissions;
      /* t = 8 */
      PatrolElementType *patrol;
      /* t = 9 */
      RendezvousElementType *rendezvous;
      /* t = 10 */
      NoValueElementType *reposition;
      /* t = 11 */
      SampleEnvironmentElementType *sampleEnvironment;
      /* t = 12 */
      SearchElementType *search;
   } u;
} GoalElements;

EXTERN int asn1E_GoalElements (OSCTXT* pctxt,
   GoalElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GoalElements (OSCTXT* pctxt, GoalElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_GoalElements (OSCTXT* pctxt, GoalElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GoalElements (OSCTXT* pctxt, GoalElements* pvalue);

EXTERN int DOMTest_GoalElements (OSCTXT* pctxt, GoalElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GoalElements (GoalElements* pvalue);

/**************************************************************/
/*                                                            */
/*  CircleElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_CircleElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CircleElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType center;
   PositiveScalarElementType_derivations radius;
} CircleElementType;

EXTERN int asn1E_CircleElementType (OSCTXT* pctxt,
   CircleElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CircleElementType (OSCTXT* pctxt, CircleElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CircleElementType (OSCTXT* pctxt, CircleElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CircleElementType (OSCTXT* pctxt, CircleElementType* pvalue)
   ;

EXTERN int DOMTest_CircleElementType (OSCTXT* pctxt, CircleElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CircleElementType (CircleElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOrientationType                                       */
/*                                                            */
/**************************************************************/

#define TV_AreaOrientationType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL AreaOrientationType;

EXTERN int asn1E_AreaOrientationType (OSCTXT* pctxt,
   AreaOrientationType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AreaOrientationType (OSCTXT* pctxt, 
   AreaOrientationType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AreaOrientationType (OSCTXT* pctxt, 
   AreaOrientationType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AreaOrientationType (OSCTXT* pctxt, 
   AreaOrientationType* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaOrientationElementType                                */
/*                                                            */
/**************************************************************/

#define TV_AreaOrientationElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AreaOrientationElementType {
   AreaOrientationType value;
} AreaOrientationElementType;

EXTERN int asn1E_AreaOrientationElementType (OSCTXT* pctxt,
   AreaOrientationElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AreaOrientationElementType (OSCTXT* pctxt, 
   AreaOrientationElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AreaOrientationElementType (OSCTXT* pctxt, 
   AreaOrientationElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AreaOrientationElementType (OSCTXT* pctxt, 
   AreaOrientationElementType* pvalue);

EXTERN int DOMTest_AreaOrientationElementType (OSCTXT* pctxt, 
   AreaOrientationElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AreaOrientationElementType (AreaOrientationElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  RectangleElementType                                      */
/*                                                            */
/**************************************************************/

#define TV_RectangleElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RectangleElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned orientationPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType northwestCorner;
   PositiveScalarElementType_derivations width;
   PositiveScalarElementType_derivations height;
   AreaOrientationElementType orientation;
} RectangleElementType;

EXTERN int asn1E_RectangleElementType (OSCTXT* pctxt,
   RectangleElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RectangleElementType (OSCTXT* pctxt, 
   RectangleElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RectangleElementType (OSCTXT* pctxt, 
   RectangleElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RectangleElementType (OSCTXT* pctxt, 
   RectangleElementType* pvalue);

EXTERN int DOMTest_RectangleElementType (OSCTXT* pctxt, RectangleElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RectangleElementType (RectangleElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  PolygonElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_PolygonElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PolygonElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PointListElements choice;
} PolygonElementType;

EXTERN int asn1E_PolygonElementType (OSCTXT* pctxt,
   PolygonElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PolygonElementType (OSCTXT* pctxt, 
   PolygonElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PolygonElementType (OSCTXT* pctxt, 
   PolygonElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PolygonElementType (OSCTXT* pctxt, 
   PolygonElementType* pvalue);

EXTERN int DOMTest_PolygonElementType (OSCTXT* pctxt, PolygonElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PolygonElementType (PolygonElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  LimitingLineElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_LimitingLineElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LimitingLineElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PointListElements choice;
} LimitingLineElementType;

EXTERN int asn1E_LimitingLineElementType (OSCTXT* pctxt,
   LimitingLineElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LimitingLineElementType (OSCTXT* pctxt, 
   LimitingLineElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LimitingLineElementType (OSCTXT* pctxt, 
   LimitingLineElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LimitingLineElementType (OSCTXT* pctxt, 
   LimitingLineElementType* pvalue);

EXTERN int DOMTest_LimitingLineElementType (OSCTXT* pctxt, 
   LimitingLineElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LimitingLineElementType (LimitingLineElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaElements                                              */
/*                                                            */
/**************************************************************/

#define TV_AreaElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AreaElements_point            1
#define T_AreaElements_circle           2
#define T_AreaElements_rectangle        3
#define T_AreaElements_polygon          4
#define T_AreaElements_limitingLine     5

typedef struct EXTERN AreaElements {
   int t;
   union {
      /* t = 1 */
      AbsoluteHorizontalPositionElementType *point;
      /* t = 2 */
      CircleElementType *circle;
      /* t = 3 */
      RectangleElementType *rectangle;
      /* t = 4 */
      PolygonElementType *polygon;
      /* t = 5 */
      LimitingLineElementType *limitingLine;
   } u;
} AreaElements;

EXTERN int asn1E_AreaElements (OSCTXT* pctxt,
   AreaElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AreaElements (OSCTXT* pctxt, AreaElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AreaElements (OSCTXT* pctxt, AreaElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AreaElements (OSCTXT* pctxt, AreaElements* pvalue);

EXTERN int DOMTest_AreaElements (OSCTXT* pctxt, AreaElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AreaElements (AreaElements* pvalue);

/**************************************************************/
/*                                                            */
/*  NumericalBlockElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_NumericalBlockElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NumericalBlockElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   PositiveScalarType maximum;
   NonNegativeScalarType minimum;
   NonNegativeScalarType timeStamp;
} NumericalBlockElementType;

EXTERN int asn1E_NumericalBlockElementType (OSCTXT* pctxt,
   NumericalBlockElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NumericalBlockElementType (OSCTXT* pctxt, 
   NumericalBlockElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NumericalBlockElementType (OSCTXT* pctxt, 
   NumericalBlockElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NumericalBlockElementType (OSCTXT* pctxt, 
   NumericalBlockElementType* pvalue);

EXTERN int DOMTest_NumericalBlockElementType (OSCTXT* pctxt, 
   NumericalBlockElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NumericalBlockElementType (NumericalBlockElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DepthBlockElements                                        */
/*                                                            */
/**************************************************************/

#define TV_DepthBlockElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DepthBlockElements_depthBlock 1
#define T_DepthBlockElements_altitudeBlock 2
#define T_DepthBlockElements_depthAltitudeBlock 3

typedef struct EXTERN DepthBlockElements {
   int t;
   union {
      /* t = 1 */
      NumericalBlockElementType *depthBlock;
      /* t = 2 */
      NumericalBlockElementType *altitudeBlock;
      /* t = 3 */
      NumericalBlockElementType *depthAltitudeBlock;
   } u;
} DepthBlockElements;

EXTERN int asn1E_DepthBlockElements (OSCTXT* pctxt,
   DepthBlockElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DepthBlockElements (OSCTXT* pctxt, 
   DepthBlockElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DepthBlockElements (OSCTXT* pctxt, 
   DepthBlockElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DepthBlockElements (OSCTXT* pctxt, 
   DepthBlockElements* pvalue);

EXTERN int DOMTest_DepthBlockElements (OSCTXT* pctxt, DepthBlockElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DepthBlockElements (DepthBlockElements* pvalue);

/**************************************************************/
/*                                                            */
/*  AltitudeBlockElements                                     */
/*                                                            */
/**************************************************************/

#define TV_AltitudeBlockElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AltitudeBlockElements_aGLAltitudeBlock 1
#define T_AltitudeBlockElements_mSLAltitudeBlock 2
#define T_AltitudeBlockElements_aGLMSLAltitudeBlock 3

typedef struct EXTERN AltitudeBlockElements {
   int t;
   union {
      /* t = 1 */
      NumericalBlockElementType *aGLAltitudeBlock;
      /* t = 2 */
      NumericalBlockElementType *mSLAltitudeBlock;
      /* t = 3 */
      NumericalBlockElementType *aGLMSLAltitudeBlock;
   } u;
} AltitudeBlockElements;

EXTERN int asn1E_AltitudeBlockElements (OSCTXT* pctxt,
   AltitudeBlockElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AltitudeBlockElements (OSCTXT* pctxt, 
   AltitudeBlockElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AltitudeBlockElements (OSCTXT* pctxt, 
   AltitudeBlockElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AltitudeBlockElements (OSCTXT* pctxt, 
   AltitudeBlockElements* pvalue);

EXTERN int DOMTest_AltitudeBlockElements (OSCTXT* pctxt, 
   AltitudeBlockElements* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AltitudeBlockElements (AltitudeBlockElements* pvalue);

/**************************************************************/
/*                                                            */
/*  VerticalBlockElements                                     */
/*                                                            */
/**************************************************************/

#define TV_VerticalBlockElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_VerticalBlockElements_choice  1
#define T_VerticalBlockElements_choice_1 2
#define T_VerticalBlockElements_choice_2 3
#define T_VerticalBlockElements_choice_3 4

typedef struct EXTERN VerticalBlockElements {
   int t;
   union {
      /* t = 1 */
      DepthTypeElements *choice;
      /* t = 2 */
      AltitudeTypeElements *choice_1;
      /* t = 3 */
      DepthBlockElements *choice_2;
      /* t = 4 */
      AltitudeBlockElements *choice_3;
   } u;
} VerticalBlockElements;

EXTERN int asn1E_VerticalBlockElements (OSCTXT* pctxt,
   VerticalBlockElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VerticalBlockElements (OSCTXT* pctxt, 
   VerticalBlockElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_VerticalBlockElements (OSCTXT* pctxt, 
   VerticalBlockElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VerticalBlockElements (OSCTXT* pctxt, 
   VerticalBlockElements* pvalue);

EXTERN int DOMTest_VerticalBlockElements (OSCTXT* pctxt, 
   VerticalBlockElements* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_VerticalBlockElements (VerticalBlockElements* pvalue);

/**************************************************************/
/*                                                            */
/*  AreaElementType                                           */
/*                                                            */
/**************************************************************/

#define TV_AreaElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AreaElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AreaElements choice;
   VerticalBlockElements choice_1;
} AreaElementType;

EXTERN int asn1E_AreaElementType (OSCTXT* pctxt,
   AreaElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AreaElementType (OSCTXT* pctxt, AreaElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AreaElementType (OSCTXT* pctxt, AreaElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AreaElementType (OSCTXT* pctxt, AreaElementType* pvalue);

EXTERN int DOMTest_AreaElementType (OSCTXT* pctxt, AreaElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AreaElementType (AreaElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AbsoluteTimingElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_AbsoluteTimingElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AbsoluteTimingElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType start;
   PositiveScalarType stop;
   NonNegativeScalarType timeStamp;
} AbsoluteTimingElementType;

EXTERN int asn1E_AbsoluteTimingElementType (OSCTXT* pctxt,
   AbsoluteTimingElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AbsoluteTimingElementType (OSCTXT* pctxt, 
   AbsoluteTimingElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AbsoluteTimingElementType (OSCTXT* pctxt, 
   AbsoluteTimingElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AbsoluteTimingElementType (OSCTXT* pctxt, 
   AbsoluteTimingElementType* pvalue);

EXTERN int DOMTest_AbsoluteTimingElementType (OSCTXT* pctxt, 
   AbsoluteTimingElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AbsoluteTimingElementType (AbsoluteTimingElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  TimingTypeElements                                        */
/*                                                            */
/**************************************************************/

#define TV_TimingTypeElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_TimingTypeElements_duration   1
#define T_TimingTypeElements_timing     2

typedef struct EXTERN TimingTypeElements {
   int t;
   union {
      /* t = 1 */
      PositiveScalarElementType_derivations *duration;
      /* t = 2 */
      AbsoluteTimingElementType *timing;
   } u;
} TimingTypeElements;

EXTERN int asn1E_TimingTypeElements (OSCTXT* pctxt,
   TimingTypeElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TimingTypeElements (OSCTXT* pctxt, 
   TimingTypeElements *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TimingTypeElements (OSCTXT* pctxt, 
   TimingTypeElements* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TimingTypeElements (OSCTXT* pctxt, 
   TimingTypeElements* pvalue);

EXTERN int DOMTest_TimingTypeElements (OSCTXT* pctxt, TimingTypeElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TimingTypeElements (TimingTypeElements* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportingCriteriaType                                     */
/*                                                            */
/**************************************************************/

#define TV_ReportingCriteriaType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ReportingCriteriaType_never = 0,
   ReportingCriteriaType_onCommence = 1,
   ReportingCriteriaType_onComplete = 2,
   ReportingCriteriaType_periodic = 3,
   ReportingCriteriaType_statusChanged = 4
} ReportingCriteriaType_Root;

typedef OSUINT32 ReportingCriteriaType;

EXTERN int asn1E_ReportingCriteriaType (OSCTXT* pctxt,
   ReportingCriteriaType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReportingCriteriaType (OSCTXT* pctxt, 
   ReportingCriteriaType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReportingCriteriaType (OSCTXT* pctxt, 
   ReportingCriteriaType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReportingCriteriaType (OSCTXT* pctxt, 
   ReportingCriteriaType* pvalue);

EXTERN const OSUTF8CHAR* ReportingCriteriaType_ToString (OSINT32 value);

EXTERN int ReportingCriteriaType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ReportingCriteriaType* pvalue);

/**************************************************************/
/*                                                            */
/*  ReportingCriteriaElementType                              */
/*                                                            */
/**************************************************************/

#define TV_ReportingCriteriaElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ReportingCriteriaElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned periodicityPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   PositiveScalarType periodicity;
   NonNegativeScalarType timeStamp;
   ReportingCriteriaType value;
} ReportingCriteriaElementType;

EXTERN int asn1E_ReportingCriteriaElementType (OSCTXT* pctxt,
   ReportingCriteriaElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReportingCriteriaElementType (OSCTXT* pctxt, 
   ReportingCriteriaElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReportingCriteriaElementType (OSCTXT* pctxt, 
   ReportingCriteriaElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReportingCriteriaElementType (OSCTXT* pctxt, 
   ReportingCriteriaElementType* pvalue);

EXTERN int DOMTest_ReportingCriteriaElementType (OSCTXT* pctxt, 
   ReportingCriteriaElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReportingCriteriaElementType (
   ReportingCriteriaElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AgendaGoalElementType                                     */
/*                                                            */
/**************************************************************/

#define TV_AgendaGoalElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AgendaGoalElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned nextOnFailPresent : 1;
      unsigned nextOnSucceedPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSBOOL alert;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* nextOnFail;
   const OSUTF8CHAR* nextOnSucceed;
   NonNegativeScalarType timeStamp;
   GoalElements choice;
   AreaElementType operatingArea;
   TimingTypeElements choice_1;
   /* List of ReportingCriteriaElementType */
   OSRTDList reportingCriteria_list;
} AgendaGoalElementType;

EXTERN int asn1E_AgendaGoalElementType (OSCTXT* pctxt,
   AgendaGoalElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AgendaGoalElementType (OSCTXT* pctxt, 
   AgendaGoalElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AgendaGoalElementType (OSCTXT* pctxt, 
   AgendaGoalElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AgendaGoalElementType (OSCTXT* pctxt, 
   AgendaGoalElementType* pvalue);

EXTERN int DOMTest_AgendaGoalElementType (OSCTXT* pctxt, 
   AgendaGoalElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AgendaGoalElementType (AgendaGoalElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AgendaGoalListType                                        */
/*                                                            */
/**************************************************************/

#define TV_AgendaGoalListType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AgendaGoalListType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of AgendaGoalElementType */
   OSRTDList goal_list;
} AgendaGoalListType;

EXTERN int asn1E_AgendaGoalListType (OSCTXT* pctxt,
   AgendaGoalListType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AgendaGoalListType (OSCTXT* pctxt, 
   AgendaGoalListType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AgendaGoalListType (OSCTXT* pctxt, 
   AgendaGoalListType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AgendaGoalListType (OSCTXT* pctxt, 
   AgendaGoalListType* pvalue);

EXTERN int DOMTest_AgendaGoalListType (OSCTXT* pctxt, AgendaGoalListType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AgendaGoalListType (AgendaGoalListType* pvalue);

/**************************************************************/
/*                                                            */
/*  RouteElementType                                          */
/*                                                            */
/**************************************************************/

#define TV_RouteElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RouteElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   PointListElements choice;
   VerticalBlockElements choice_1;
} RouteElementType;

EXTERN int asn1E_RouteElementType (OSCTXT* pctxt,
   RouteElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RouteElementType (OSCTXT* pctxt, RouteElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RouteElementType (OSCTXT* pctxt, RouteElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RouteElementType (OSCTXT* pctxt, RouteElementType* pvalue);

EXTERN int DOMTest_RouteElementType (OSCTXT* pctxt, RouteElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RouteElementType (RouteElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AgendaConstraintListType                                  */
/*                                                            */
/**************************************************************/

#define TV_AgendaConstraintListType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AgendaConstraintListType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned ingressRoutingPresent : 1;
      unsigned egressRoutingPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   RouteElementType ingressRouting;
   /* List of AreaElementType */
   OSRTDList avoidArea_list;
   RouteElementType egressRouting;
} AgendaConstraintListType;

EXTERN int asn1E_AgendaConstraintListType (OSCTXT* pctxt,
   AgendaConstraintListType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AgendaConstraintListType (OSCTXT* pctxt, 
   AgendaConstraintListType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AgendaConstraintListType (OSCTXT* pctxt, 
   AgendaConstraintListType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AgendaConstraintListType (OSCTXT* pctxt, 
   AgendaConstraintListType* pvalue);

EXTERN int DOMTest_AgendaConstraintListType (OSCTXT* pctxt, 
   AgendaConstraintListType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AgendaConstraintListType (AgendaConstraintListType* pvalue);

/**************************************************************/
/*                                                            */
/*  AgendaMissionElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_AgendaMissionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AgendaMissionElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned launchPositionPresent : 1;
      unsigned recoveryPositionPresent : 1;
      unsigned constraintListPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType launchPosition;
   AbsoluteHorizontalPositionElementType recoveryPosition;
   AgendaGoalListType goalList;
   AgendaConstraintListType constraintList;
} AgendaMissionElementType;

EXTERN int asn1E_AgendaMissionElementType (OSCTXT* pctxt,
   AgendaMissionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AgendaMissionElementType (OSCTXT* pctxt, 
   AgendaMissionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AgendaMissionElementType (OSCTXT* pctxt, 
   AgendaMissionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AgendaMissionElementType (OSCTXT* pctxt, 
   AgendaMissionElementType* pvalue);

EXTERN int DOMTest_AgendaMissionElementType (OSCTXT* pctxt, 
   AgendaMissionElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AgendaMissionElementType (AgendaMissionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionSpecification                                      */
/*                                                            */
/**************************************************************/

#define TV_MissionSpecification	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_MissionSpecification_uUVCommandScript 1
#define T_MissionSpecification_uSVCommandScript 2
#define T_MissionSpecification_uGVCommandScript 3
#define T_MissionSpecification_uAVCommandScript 4
#define T_MissionSpecification_agendaMission 5

typedef struct EXTERN MissionSpecification {
   int t;
   union {
      /* t = 1 */
      UuvScriptCommandsType *uUVCommandScript;
      /* t = 2 */
      UsvScriptCommandsType *uSVCommandScript;
      /* t = 3 */
      UgvScriptCommandsType *uGVCommandScript;
      /* t = 4 */
      UavScriptCommandsType *uAVCommandScript;
      /* t = 5 */
      AgendaMissionElementType *agendaMission;
   } u;
} MissionSpecification;

EXTERN int asn1E_MissionSpecification (OSCTXT* pctxt,
   MissionSpecification *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MissionSpecification (OSCTXT* pctxt, 
   MissionSpecification *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MissionSpecification (OSCTXT* pctxt, 
   MissionSpecification* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MissionSpecification (OSCTXT* pctxt, 
   MissionSpecification* pvalue);

EXTERN int DOMTest_MissionSpecification (OSCTXT* pctxt, MissionSpecification* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MissionSpecification (MissionSpecification* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationRequestType                                    */
/*                                                            */
/**************************************************************/

#define TV_InformationRequestType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   InformationRequestType_contactSummary = 0,
   InformationRequestType_controlSettings = 1,
   InformationRequestType_ping = 2,
   InformationRequestType_posture = 3,
   InformationRequestType_sensorData = 4,
   InformationRequestType_vehicleCharacteristics = 5,
   InformationRequestType_vehicleTime = 6,
   InformationRequestType_velocity = 7,
   InformationRequestType_waypoint = 8
} InformationRequestType_Root;

typedef OSUINT32 InformationRequestType;

EXTERN int asn1E_InformationRequestType (OSCTXT* pctxt,
   InformationRequestType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InformationRequestType (OSCTXT* pctxt, 
   InformationRequestType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InformationRequestType (OSCTXT* pctxt, 
   InformationRequestType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InformationRequestType (OSCTXT* pctxt, 
   InformationRequestType* pvalue);

EXTERN const OSUTF8CHAR* InformationRequestType_ToString (OSINT32 value);

EXTERN int InformationRequestType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, InformationRequestType* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationRequestElementType                             */
/*                                                            */
/**************************************************************/

#define TV_InformationRequestElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InformationRequestElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   InformationRequestType informationType;
   NonNegativeScalarType timeStamp;
} InformationRequestElementType;

EXTERN int asn1E_InformationRequestElementType (OSCTXT* pctxt,
   InformationRequestElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InformationRequestElementType (OSCTXT* pctxt, 
   InformationRequestElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InformationRequestElementType (OSCTXT* pctxt, 
   InformationRequestElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InformationRequestElementType (OSCTXT* pctxt, 
   InformationRequestElementType* pvalue);

EXTERN int DOMTest_InformationRequestElementType (OSCTXT* pctxt, 
   InformationRequestElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InformationRequestElementType (
   InformationRequestElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleGroupCompositionType                               */
/*                                                            */
/**************************************************************/

#define TV_VehicleGroupCompositionType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   VehicleGroupCompositionType_announceGroup = 0,
   VehicleGroupCompositionType_dissolveGroup = 1,
   VehicleGroupCompositionType_finalizeGroupFormation = 2,
   VehicleGroupCompositionType_initiateGroupFormation = 3,
   VehicleGroupCompositionType_joinGroup = 4,
   VehicleGroupCompositionType_leaveGroup = 5,
   VehicleGroupCompositionType_locateGroup = 6
} VehicleGroupCompositionType_Root;

typedef OSUINT32 VehicleGroupCompositionType;

EXTERN int asn1E_VehicleGroupCompositionType (OSCTXT* pctxt,
   VehicleGroupCompositionType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VehicleGroupCompositionType (OSCTXT* pctxt, 
   VehicleGroupCompositionType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_VehicleGroupCompositionType (OSCTXT* pctxt, 
   VehicleGroupCompositionType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleGroupCompositionType (OSCTXT* pctxt, 
   VehicleGroupCompositionType* pvalue);

EXTERN const OSUTF8CHAR* VehicleGroupCompositionType_ToString (OSINT32 value);

EXTERN int VehicleGroupCompositionType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, VehicleGroupCompositionType* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleGroupCompositionElementType                        */
/*                                                            */
/**************************************************************/

#define TV_VehicleGroupCompositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN VehicleGroupCompositionElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   VehicleGroupCompositionType request;
   NonNegativeScalarType timeStamp;
} VehicleGroupCompositionElementType;

EXTERN int asn1E_VehicleGroupCompositionElementType (OSCTXT* pctxt,
   VehicleGroupCompositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VehicleGroupCompositionElementType (OSCTXT* pctxt, 
   VehicleGroupCompositionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_VehicleGroupCompositionElementType (OSCTXT* pctxt, 
   VehicleGroupCompositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleGroupCompositionElementType (OSCTXT* pctxt, 
   VehicleGroupCompositionElementType* pvalue);

EXTERN int DOMTest_VehicleGroupCompositionElementType (OSCTXT* pctxt, 
   VehicleGroupCompositionElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_VehicleGroupCompositionElementType (
   VehicleGroupCompositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DimensionsElementType                                     */
/*                                                            */
/**************************************************************/

#define TV_DimensionsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DimensionsElementType {
   PositiveScalarType height;
   PositiveScalarType length;
   PositiveScalarType mass;
   PositiveScalarType width;
} DimensionsElementType;

EXTERN int asn1E_DimensionsElementType (OSCTXT* pctxt,
   DimensionsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DimensionsElementType (OSCTXT* pctxt, 
   DimensionsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DimensionsElementType (OSCTXT* pctxt, 
   DimensionsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DimensionsElementType (OSCTXT* pctxt, 
   DimensionsElementType* pvalue);

EXTERN int DOMTest_DimensionsElementType (OSCTXT* pctxt, 
   DimensionsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DimensionsElementType (DimensionsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvOperatingCharacteristicsElementType                    */
/*                                                            */
/**************************************************************/

#define TV_UuvOperatingCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvOperatingCharacteristicsElementType {
   struct {
      unsigned cruiseSpeedPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned endurancePresent : 1;
      unsigned idPresent : 1;
      unsigned maxDepthPresent : 1;
      unsigned maxPitchRatePresent : 1;
      unsigned maxSpeedPresent : 1;
      unsigned maxYawRatePresent : 1;
      unsigned timeStampPresent : 1;
      unsigned turnRadiusPresent : 1;
   } m;
   PositiveScalarType cruiseSpeed;
   const OSUTF8CHAR* description;
   PositiveScalarType endurance;
   const OSUTF8CHAR* id;
   PositiveScalarType maxDepth;
   PositiveScalarType maxPitchRate;
   PositiveScalarType maxSpeed;
   PositiveScalarType maxYawRate;
   NonNegativeScalarType timeStamp;
   PositiveScalarType turnRadius;
} UuvOperatingCharacteristicsElementType;

EXTERN int asn1E_UuvOperatingCharacteristicsElementType (OSCTXT* pctxt,
   UuvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UuvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UuvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UuvOperatingCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UuvOperatingCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UuvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UuvOperatingCharacteristicsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvOperatingCharacteristicsElementType (
   UuvOperatingCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DegreesOfControlElementType                               */
/*                                                            */
/**************************************************************/

#define TV_DegreesOfControlElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DegreesOfControlElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   OSBOOL lateral;
   OSBOOL longitudinal;
   OSBOOL pitch;
   OSBOOL roll;
   NonNegativeScalarType timeStamp;
   OSBOOL vertical;
   OSBOOL yaw;
} DegreesOfControlElementType;

EXTERN int asn1E_DegreesOfControlElementType (OSCTXT* pctxt,
   DegreesOfControlElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DegreesOfControlElementType (OSCTXT* pctxt, 
   DegreesOfControlElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DegreesOfControlElementType (OSCTXT* pctxt, 
   DegreesOfControlElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DegreesOfControlElementType (OSCTXT* pctxt, 
   DegreesOfControlElementType* pvalue);

EXTERN int DOMTest_DegreesOfControlElementType (OSCTXT* pctxt, 
   DegreesOfControlElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DegreesOfControlElementType (DegreesOfControlElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvCapabilityType                                         */
/*                                                            */
/**************************************************************/

#define TV_UuvCapabilityType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   UuvCapabilityType_altitudeCapable = 0,
   UuvCapabilityType_bodyThrustersInstalled = 1,
   UuvCapabilityType_communicationsCapable = 2,
   UuvCapabilityType_gpsCapable = 3,
   UuvCapabilityType_hoverCapable = 4,
   UuvCapabilityType_satelliteCommunicationsCapable = 5,
   UuvCapabilityType_seaglider = 6,
   UuvCapabilityType_stationCapable = 7,
   UuvCapabilityType_thrusterPowered = 8,
   UuvCapabilityType_underwaterCommunicationsCapable = 9
} UuvCapabilityType_Root;

typedef OSUINT32 UuvCapabilityType;

EXTERN int asn1E_UuvCapabilityType (OSCTXT* pctxt,
   UuvCapabilityType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvCapabilityType (OSCTXT* pctxt, UuvCapabilityType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvCapabilityType (OSCTXT* pctxt, UuvCapabilityType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvCapabilityType (OSCTXT* pctxt, UuvCapabilityType* pvalue)
   ;

EXTERN const OSUTF8CHAR* UuvCapabilityType_ToString (OSINT32 value);

EXTERN int UuvCapabilityType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UuvCapabilityType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvCapabilityElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_UuvCapabilityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvCapabilityElementType {
   UuvCapabilityType value;
} UuvCapabilityElementType;

EXTERN int asn1E_UuvCapabilityElementType (OSCTXT* pctxt,
   UuvCapabilityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvCapabilityElementType (OSCTXT* pctxt, 
   UuvCapabilityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvCapabilityElementType (OSCTXT* pctxt, 
   UuvCapabilityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvCapabilityElementType (OSCTXT* pctxt, 
   UuvCapabilityElementType* pvalue);

EXTERN int DOMTest_UuvCapabilityElementType (OSCTXT* pctxt, 
   UuvCapabilityElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvCapabilityElementType (UuvCapabilityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvCharacteristicsElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UuvCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvCharacteristicsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned dimensionsPresent : 1;
      unsigned operatingCharacteristicsPresent : 1;
      unsigned degreesOfControlPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DimensionsElementType dimensions;
   UuvOperatingCharacteristicsElementType operatingCharacteristics;
   DegreesOfControlElementType degreesOfControl;
   /* List of UuvCapabilityElementType */
   OSRTDList capability_list;
} UuvCharacteristicsElementType;

EXTERN int asn1E_UuvCharacteristicsElementType (OSCTXT* pctxt,
   UuvCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvCharacteristicsElementType (OSCTXT* pctxt, 
   UuvCharacteristicsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvCharacteristicsElementType (OSCTXT* pctxt, 
   UuvCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvCharacteristicsElementType (OSCTXT* pctxt, 
   UuvCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UuvCharacteristicsElementType (OSCTXT* pctxt, 
   UuvCharacteristicsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvCharacteristicsElementType (
   UuvCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvOperatingCharacteristicsElementType                    */
/*                                                            */
/**************************************************************/

#define TV_UgvOperatingCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvOperatingCharacteristicsElementType {
   struct {
      unsigned cruiseSpeedPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned endurancePresent : 1;
      unsigned idPresent : 1;
      unsigned maxSpeedPresent : 1;
      unsigned maxYawRatePresent : 1;
      unsigned staticPitchoverPresent : 1;
      unsigned staticRolloverPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned trackWidthPresent : 1;
      unsigned turnRadiusPresent : 1;
      unsigned wheelBasePresent : 1;
   } m;
   PositiveScalarType cruiseSpeed;
   const OSUTF8CHAR* description;
   PositiveScalarType endurance;
   const OSUTF8CHAR* id;
   PositiveScalarType maxSpeed;
   PositiveScalarType maxYawRate;
   PositiveScalarType staticPitchover;
   PositiveScalarType staticRollover;
   NonNegativeScalarType timeStamp;
   PositiveScalarType trackWidth;
   PositiveScalarType turnRadius;
   PositiveScalarType wheelBase;
} UgvOperatingCharacteristicsElementType;

EXTERN int asn1E_UgvOperatingCharacteristicsElementType (OSCTXT* pctxt,
   UgvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UgvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UgvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UgvOperatingCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UgvOperatingCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UgvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UgvOperatingCharacteristicsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvOperatingCharacteristicsElementType (
   UgvOperatingCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvCapabilityType                                         */
/*                                                            */
/**************************************************************/

#define TV_UgvCapabilityType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   UgvCapabilityType_communicationsCapable = 0,
   UgvCapabilityType_gpsCapable = 1,
   UgvCapabilityType_satelliteCommunicationsCapable = 2,
   UgvCapabilityType_tracked = 3
} UgvCapabilityType_Root;

typedef OSUINT32 UgvCapabilityType;

EXTERN int asn1E_UgvCapabilityType (OSCTXT* pctxt,
   UgvCapabilityType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvCapabilityType (OSCTXT* pctxt, UgvCapabilityType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvCapabilityType (OSCTXT* pctxt, UgvCapabilityType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvCapabilityType (OSCTXT* pctxt, UgvCapabilityType* pvalue)
   ;

EXTERN const OSUTF8CHAR* UgvCapabilityType_ToString (OSINT32 value);

EXTERN int UgvCapabilityType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UgvCapabilityType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvCapabilityElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_UgvCapabilityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvCapabilityElementType {
   UgvCapabilityType value;
} UgvCapabilityElementType;

EXTERN int asn1E_UgvCapabilityElementType (OSCTXT* pctxt,
   UgvCapabilityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvCapabilityElementType (OSCTXT* pctxt, 
   UgvCapabilityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvCapabilityElementType (OSCTXT* pctxt, 
   UgvCapabilityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvCapabilityElementType (OSCTXT* pctxt, 
   UgvCapabilityElementType* pvalue);

EXTERN int DOMTest_UgvCapabilityElementType (OSCTXT* pctxt, 
   UgvCapabilityElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvCapabilityElementType (UgvCapabilityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvCharacteristicsElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UgvCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvCharacteristicsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned dimensionsPresent : 1;
      unsigned operatingCharacteristicsPresent : 1;
      unsigned degreesOfControlPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DimensionsElementType dimensions;
   UgvOperatingCharacteristicsElementType operatingCharacteristics;
   DegreesOfControlElementType degreesOfControl;
   /* List of UgvCapabilityElementType */
   OSRTDList capability_list;
} UgvCharacteristicsElementType;

EXTERN int asn1E_UgvCharacteristicsElementType (OSCTXT* pctxt,
   UgvCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvCharacteristicsElementType (OSCTXT* pctxt, 
   UgvCharacteristicsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvCharacteristicsElementType (OSCTXT* pctxt, 
   UgvCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvCharacteristicsElementType (OSCTXT* pctxt, 
   UgvCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UgvCharacteristicsElementType (OSCTXT* pctxt, 
   UgvCharacteristicsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvCharacteristicsElementType (
   UgvCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvOperatingCharacteristicsElementType                    */
/*                                                            */
/**************************************************************/

#define TV_UsvOperatingCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvOperatingCharacteristicsElementType {
   struct {
      unsigned cruiseSpeedPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned endurancePresent : 1;
      unsigned idPresent : 1;
      unsigned maxSpeedPresent : 1;
      unsigned maxYawRatePresent : 1;
      unsigned timeStampPresent : 1;
      unsigned turnRadiusPresent : 1;
   } m;
   PositiveScalarType cruiseSpeed;
   const OSUTF8CHAR* description;
   PositiveScalarType endurance;
   const OSUTF8CHAR* id;
   PositiveScalarType maxSpeed;
   PositiveScalarType maxYawRate;
   NonNegativeScalarType timeStamp;
   PositiveScalarType turnRadius;
} UsvOperatingCharacteristicsElementType;

EXTERN int asn1E_UsvOperatingCharacteristicsElementType (OSCTXT* pctxt,
   UsvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UsvOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UsvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UsvOperatingCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UsvOperatingCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UsvOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UsvOperatingCharacteristicsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvOperatingCharacteristicsElementType (
   UsvOperatingCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvCapabilityType                                         */
/*                                                            */
/**************************************************************/

#define TV_UsvCapabilityType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   UsvCapabilityType_communicationsCapable = 0,
   UsvCapabilityType_gpsCapable = 1,
   UsvCapabilityType_satelliteCommunicationsCapable = 2,
   UsvCapabilityType_underwaterCommunicationsCapable = 3
} UsvCapabilityType_Root;

typedef OSUINT32 UsvCapabilityType;

EXTERN int asn1E_UsvCapabilityType (OSCTXT* pctxt,
   UsvCapabilityType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvCapabilityType (OSCTXT* pctxt, UsvCapabilityType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvCapabilityType (OSCTXT* pctxt, UsvCapabilityType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvCapabilityType (OSCTXT* pctxt, UsvCapabilityType* pvalue)
   ;

EXTERN const OSUTF8CHAR* UsvCapabilityType_ToString (OSINT32 value);

EXTERN int UsvCapabilityType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UsvCapabilityType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvCapabilityElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_UsvCapabilityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvCapabilityElementType {
   UsvCapabilityType value;
} UsvCapabilityElementType;

EXTERN int asn1E_UsvCapabilityElementType (OSCTXT* pctxt,
   UsvCapabilityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvCapabilityElementType (OSCTXT* pctxt, 
   UsvCapabilityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvCapabilityElementType (OSCTXT* pctxt, 
   UsvCapabilityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvCapabilityElementType (OSCTXT* pctxt, 
   UsvCapabilityElementType* pvalue);

EXTERN int DOMTest_UsvCapabilityElementType (OSCTXT* pctxt, 
   UsvCapabilityElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvCapabilityElementType (UsvCapabilityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvCharacteristicsElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UsvCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvCharacteristicsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned dimensionsPresent : 1;
      unsigned operatingCharacteristicsPresent : 1;
      unsigned degreesOfControlPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DimensionsElementType dimensions;
   UsvOperatingCharacteristicsElementType operatingCharacteristics;
   DegreesOfControlElementType degreesOfControl;
   /* List of UsvCapabilityElementType */
   OSRTDList capability_list;
} UsvCharacteristicsElementType;

EXTERN int asn1E_UsvCharacteristicsElementType (OSCTXT* pctxt,
   UsvCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvCharacteristicsElementType (OSCTXT* pctxt, 
   UsvCharacteristicsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvCharacteristicsElementType (OSCTXT* pctxt, 
   UsvCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvCharacteristicsElementType (OSCTXT* pctxt, 
   UsvCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UsvCharacteristicsElementType (OSCTXT* pctxt, 
   UsvCharacteristicsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvCharacteristicsElementType (
   UsvCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavOperatingCharacteristicsElementType                    */
/*                                                            */
/**************************************************************/

#define TV_UavOperatingCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavOperatingCharacteristicsElementType {
   struct {
      unsigned cruiseSpeedPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned endurancePresent : 1;
      unsigned idPresent : 1;
      unsigned maxAltitudePresent : 1;
      unsigned maxPitchRatePresent : 1;
      unsigned maxRollRatePresent : 1;
      unsigned maxSpeedPresent : 1;
      unsigned maxYawRatePresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   PositiveScalarType cruiseSpeed;
   const OSUTF8CHAR* description;
   PositiveScalarType endurance;
   const OSUTF8CHAR* id;
   PositiveScalarType maxAltitude;
   PositiveScalarType maxPitchRate;
   PositiveScalarType maxRollRate;
   PositiveScalarType maxSpeed;
   PositiveScalarType maxYawRate;
   NonNegativeScalarType timeStamp;
} UavOperatingCharacteristicsElementType;

EXTERN int asn1E_UavOperatingCharacteristicsElementType (OSCTXT* pctxt,
   UavOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UavOperatingCharacteristicsElementType *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UavOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UavOperatingCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UavOperatingCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UavOperatingCharacteristicsElementType (OSCTXT* pctxt, 
   UavOperatingCharacteristicsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavOperatingCharacteristicsElementType (
   UavOperatingCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavCapabilityType                                         */
/*                                                            */
/**************************************************************/

#define TV_UavCapabilityType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   UavCapabilityType_fixedWing = 0,
   UavCapabilityType_gpsCapable = 1,
   UavCapabilityType_multiEngine = 2,
   UavCapabilityType_rotaryWing = 3,
   UavCapabilityType_satelliteCommunicationsCapable = 4,
   UavCapabilityType_singleEngine = 5
} UavCapabilityType_Root;

typedef OSUINT32 UavCapabilityType;

EXTERN int asn1E_UavCapabilityType (OSCTXT* pctxt,
   UavCapabilityType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavCapabilityType (OSCTXT* pctxt, UavCapabilityType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavCapabilityType (OSCTXT* pctxt, UavCapabilityType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavCapabilityType (OSCTXT* pctxt, UavCapabilityType* pvalue)
   ;

EXTERN const OSUTF8CHAR* UavCapabilityType_ToString (OSINT32 value);

EXTERN int UavCapabilityType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, UavCapabilityType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavCapabilityElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_UavCapabilityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavCapabilityElementType {
   UavCapabilityType value;
} UavCapabilityElementType;

EXTERN int asn1E_UavCapabilityElementType (OSCTXT* pctxt,
   UavCapabilityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavCapabilityElementType (OSCTXT* pctxt, 
   UavCapabilityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavCapabilityElementType (OSCTXT* pctxt, 
   UavCapabilityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavCapabilityElementType (OSCTXT* pctxt, 
   UavCapabilityElementType* pvalue);

EXTERN int DOMTest_UavCapabilityElementType (OSCTXT* pctxt, 
   UavCapabilityElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavCapabilityElementType (UavCapabilityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavCharacteristicsElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UavCharacteristicsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavCharacteristicsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned dimensionsPresent : 1;
      unsigned operatingCharacteristicsPresent : 1;
      unsigned degreesOfControlPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DimensionsElementType dimensions;
   UavOperatingCharacteristicsElementType operatingCharacteristics;
   DegreesOfControlElementType degreesOfControl;
   /* List of UavCapabilityElementType */
   OSRTDList capability_list;
} UavCharacteristicsElementType;

EXTERN int asn1E_UavCharacteristicsElementType (OSCTXT* pctxt,
   UavCharacteristicsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavCharacteristicsElementType (OSCTXT* pctxt, 
   UavCharacteristicsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavCharacteristicsElementType (OSCTXT* pctxt, 
   UavCharacteristicsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavCharacteristicsElementType (OSCTXT* pctxt, 
   UavCharacteristicsElementType* pvalue);

EXTERN int DOMTest_UavCharacteristicsElementType (OSCTXT* pctxt, 
   UavCharacteristicsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavCharacteristicsElementType (
   UavCharacteristicsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  VehicleCharacteristicsGroup                               */
/*                                                            */
/**************************************************************/

#define TV_VehicleCharacteristicsGroup	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_VehicleCharacteristicsGroup_uUVCharacteristics 1
#define T_VehicleCharacteristicsGroup_uGVCharacteristics 2
#define T_VehicleCharacteristicsGroup_uSVCharacteristics 3
#define T_VehicleCharacteristicsGroup_uAVCharacteristics 4

typedef struct EXTERN VehicleCharacteristicsGroup {
   int t;
   union {
      /* t = 1 */
      UuvCharacteristicsElementType *uUVCharacteristics;
      /* t = 2 */
      UgvCharacteristicsElementType *uGVCharacteristics;
      /* t = 3 */
      UsvCharacteristicsElementType *uSVCharacteristics;
      /* t = 4 */
      UavCharacteristicsElementType *uAVCharacteristics;
   } u;
} VehicleCharacteristicsGroup;

EXTERN int asn1E_VehicleCharacteristicsGroup (OSCTXT* pctxt,
   VehicleCharacteristicsGroup *pvalue, ASN1TagType tagging);

EXTERN int asn1D_VehicleCharacteristicsGroup (OSCTXT* pctxt, 
   VehicleCharacteristicsGroup *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_VehicleCharacteristicsGroup (OSCTXT* pctxt, 
   VehicleCharacteristicsGroup* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_VehicleCharacteristicsGroup (OSCTXT* pctxt, 
   VehicleCharacteristicsGroup* pvalue);

EXTERN int DOMTest_VehicleCharacteristicsGroup (OSCTXT* pctxt, 
   VehicleCharacteristicsGroup* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_VehicleCharacteristicsGroup (VehicleCharacteristicsGroup* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvVerticalPositionElementType                            */
/*                                                            */
/**************************************************************/

#define TV_UuvVerticalPositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvVerticalPositionElementType {
   struct {
      unsigned altitudePresent : 1;
   } m;
   NonNegativeScalarType altitude;
   NonNegativeScalarType depth;
} UuvVerticalPositionElementType;

EXTERN int asn1E_UuvVerticalPositionElementType (OSCTXT* pctxt,
   UuvVerticalPositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvVerticalPositionElementType (OSCTXT* pctxt, 
   UuvVerticalPositionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvVerticalPositionElementType (OSCTXT* pctxt, 
   UuvVerticalPositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvVerticalPositionElementType (OSCTXT* pctxt, 
   UuvVerticalPositionElementType* pvalue);

EXTERN int DOMTest_UuvVerticalPositionElementType (OSCTXT* pctxt, 
   UuvVerticalPositionElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvVerticalPositionElementType (
   UuvVerticalPositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  OrientationType                                           */
/*                                                            */
/**************************************************************/

#define TV_OrientationType	(TM_UNIV|TM_PRIM|9)

typedef OSREAL OrientationType;

EXTERN int asn1E_OrientationType (OSCTXT* pctxt,
   OrientationType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_OrientationType (OSCTXT* pctxt, OrientationType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_OrientationType (OSCTXT* pctxt, OrientationType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_OrientationType (OSCTXT* pctxt, OrientationType* pvalue);

/**************************************************************/
/*                                                            */
/*  OrientationElementType                                    */
/*                                                            */
/**************************************************************/

#define TV_OrientationElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN OrientationElementType {
   struct {
      unsigned phiPresent : 1;
      unsigned psiPresent : 1;
      unsigned thetaPresent : 1;
   } m;
   OrientationType phi;
   OrientationType psi;
   OrientationType theta;
} OrientationElementType;

EXTERN int asn1E_OrientationElementType (OSCTXT* pctxt,
   OrientationElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_OrientationElementType (OSCTXT* pctxt, 
   OrientationElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_OrientationElementType (OSCTXT* pctxt, 
   OrientationElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_OrientationElementType (OSCTXT* pctxt, 
   OrientationElementType* pvalue);

EXTERN int DOMTest_OrientationElementType (OSCTXT* pctxt, 
   OrientationElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_OrientationElementType (OrientationElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  WorldCoordinateVelocityElementType                        */
/*                                                            */
/**************************************************************/

#define TV_WorldCoordinateVelocityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN WorldCoordinateVelocityElementType {
   struct {
      unsigned phiDotPresent : 1;
      unsigned psiDotPresent : 1;
      unsigned thetaDotPresent : 1;
      unsigned xDotPresent : 1;
      unsigned yDotPresent : 1;
      unsigned zDotPresent : 1;
   } m;
   OSREAL phiDot;
   OSREAL psiDot;
   OSREAL thetaDot;
   OSREAL xDot;
   OSREAL yDot;
   OSREAL zDot;
} WorldCoordinateVelocityElementType;

EXTERN int asn1E_WorldCoordinateVelocityElementType (OSCTXT* pctxt,
   WorldCoordinateVelocityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_WorldCoordinateVelocityElementType (OSCTXT* pctxt, 
   WorldCoordinateVelocityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_WorldCoordinateVelocityElementType (OSCTXT* pctxt, 
   WorldCoordinateVelocityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_WorldCoordinateVelocityElementType (OSCTXT* pctxt, 
   WorldCoordinateVelocityElementType* pvalue);

EXTERN int DOMTest_WorldCoordinateVelocityElementType (OSCTXT* pctxt, 
   WorldCoordinateVelocityElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_WorldCoordinateVelocityElementType (
   WorldCoordinateVelocityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  BodyCoordinateVelocityElementType                         */
/*                                                            */
/**************************************************************/

#define TV_BodyCoordinateVelocityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BodyCoordinateVelocityElementType {
   struct {
      unsigned pPresent : 1;
      unsigned qPresent : 1;
      unsigned rPresent : 1;
      unsigned uPresent : 1;
      unsigned vPresent : 1;
      unsigned wPresent : 1;
   } m;
   OSREAL p;
   OSREAL q;
   OSREAL r;
   OSREAL u;
   OSREAL v;
   OSREAL w;
} BodyCoordinateVelocityElementType;

EXTERN int asn1E_BodyCoordinateVelocityElementType (OSCTXT* pctxt,
   BodyCoordinateVelocityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BodyCoordinateVelocityElementType (OSCTXT* pctxt, 
   BodyCoordinateVelocityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BodyCoordinateVelocityElementType (OSCTXT* pctxt, 
   BodyCoordinateVelocityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BodyCoordinateVelocityElementType (OSCTXT* pctxt, 
   BodyCoordinateVelocityElementType* pvalue);

EXTERN int DOMTest_BodyCoordinateVelocityElementType (OSCTXT* pctxt, 
   BodyCoordinateVelocityElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BodyCoordinateVelocityElementType (
   BodyCoordinateVelocityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DopplerVelocityElementType                                */
/*                                                            */
/**************************************************************/

#define TV_DopplerVelocityElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DopplerVelocityElementType {
   struct {
      unsigned speedOverGroundUPresent : 1;
      unsigned speedOverGroundVPresent : 1;
      unsigned speedThroughMediumUPresent : 1;
      unsigned speedThroughMediumVPresent : 1;
   } m;
   OSREAL speedOverGroundU;
   OSREAL speedOverGroundV;
   OSREAL speedThroughMediumU;
   OSREAL speedThroughMediumV;
} DopplerVelocityElementType;

EXTERN int asn1E_DopplerVelocityElementType (OSCTXT* pctxt,
   DopplerVelocityElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DopplerVelocityElementType (OSCTXT* pctxt, 
   DopplerVelocityElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DopplerVelocityElementType (OSCTXT* pctxt, 
   DopplerVelocityElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DopplerVelocityElementType (OSCTXT* pctxt, 
   DopplerVelocityElementType* pvalue);

EXTERN int DOMTest_DopplerVelocityElementType (OSCTXT* pctxt, 
   DopplerVelocityElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DopplerVelocityElementType (DopplerVelocityElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvTelemetryElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_UuvTelemetryElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvTelemetryElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned geographicPositionPresent : 1;
      unsigned verticalPositionPresent : 1;
      unsigned orientationPresent : 1;
      unsigned worldCoordinateVelocityPresent : 1;
      unsigned bodyCoordinateVelocityPresent : 1;
      unsigned dopplerVelocityPresent : 1;
      unsigned remainingPowerPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[7];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType geographicPosition;
   UuvVerticalPositionElementType verticalPosition;
   OrientationElementType orientation;
   WorldCoordinateVelocityElementType worldCoordinateVelocity;
   BodyCoordinateVelocityElementType bodyCoordinateVelocity;
   DopplerVelocityElementType dopplerVelocity;
   PercentElementType remainingPower;
} UuvTelemetryElementType;

EXTERN int asn1E_UuvTelemetryElementType (OSCTXT* pctxt,
   UuvTelemetryElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvTelemetryElementType (OSCTXT* pctxt, 
   UuvTelemetryElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvTelemetryElementType (OSCTXT* pctxt, 
   UuvTelemetryElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvTelemetryElementType (OSCTXT* pctxt, 
   UuvTelemetryElementType* pvalue);

EXTERN int DOMTest_UuvTelemetryElementType (OSCTXT* pctxt, 
   UuvTelemetryElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvTelemetryElementType (UuvTelemetryElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvTelemetryElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_UsvTelemetryElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvTelemetryElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned geographicPositionPresent : 1;
      unsigned orientationPresent : 1;
      unsigned worldCoordinateVelocityPresent : 1;
      unsigned bodyCoordinateVelocityPresent : 1;
      unsigned dopplerVelocityPresent : 1;
      unsigned remainingPowerPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[6];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType geographicPosition;
   OrientationElementType orientation;
   WorldCoordinateVelocityElementType worldCoordinateVelocity;
   BodyCoordinateVelocityElementType bodyCoordinateVelocity;
   DopplerVelocityElementType dopplerVelocity;
   PercentElementType remainingPower;
} UsvTelemetryElementType;

EXTERN int asn1E_UsvTelemetryElementType (OSCTXT* pctxt,
   UsvTelemetryElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvTelemetryElementType (OSCTXT* pctxt, 
   UsvTelemetryElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvTelemetryElementType (OSCTXT* pctxt, 
   UsvTelemetryElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvTelemetryElementType (OSCTXT* pctxt, 
   UsvTelemetryElementType* pvalue);

EXTERN int DOMTest_UsvTelemetryElementType (OSCTXT* pctxt, 
   UsvTelemetryElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvTelemetryElementType (UsvTelemetryElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvVerticalPositionElementType                            */
/*                                                            */
/**************************************************************/

#define TV_UgvVerticalPositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvVerticalPositionElementType {
   OSREAL altitudeMSL;
} UgvVerticalPositionElementType;

EXTERN int asn1E_UgvVerticalPositionElementType (OSCTXT* pctxt,
   UgvVerticalPositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvVerticalPositionElementType (OSCTXT* pctxt, 
   UgvVerticalPositionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvVerticalPositionElementType (OSCTXT* pctxt, 
   UgvVerticalPositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvVerticalPositionElementType (OSCTXT* pctxt, 
   UgvVerticalPositionElementType* pvalue);

EXTERN int DOMTest_UgvVerticalPositionElementType (OSCTXT* pctxt, 
   UgvVerticalPositionElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvVerticalPositionElementType (
   UgvVerticalPositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvTelemetryElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_UgvTelemetryElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvTelemetryElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned geographicPositionPresent : 1;
      unsigned altitudePresent : 1;
      unsigned orientationPresent : 1;
      unsigned worldCoordinateVelocityPresent : 1;
      unsigned bodyCoordinateVelocityPresent : 1;
      unsigned dopplerVelocityPresent : 1;
      unsigned remainingPowerPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[7];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType geographicPosition;
   UgvVerticalPositionElementType altitude;
   OrientationElementType orientation;
   WorldCoordinateVelocityElementType worldCoordinateVelocity;
   BodyCoordinateVelocityElementType bodyCoordinateVelocity;
   DopplerVelocityElementType dopplerVelocity;
   PercentElementType remainingPower;
} UgvTelemetryElementType;

EXTERN int asn1E_UgvTelemetryElementType (OSCTXT* pctxt,
   UgvTelemetryElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvTelemetryElementType (OSCTXT* pctxt, 
   UgvTelemetryElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvTelemetryElementType (OSCTXT* pctxt, 
   UgvTelemetryElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvTelemetryElementType (OSCTXT* pctxt, 
   UgvTelemetryElementType* pvalue);

EXTERN int DOMTest_UgvTelemetryElementType (OSCTXT* pctxt, 
   UgvTelemetryElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvTelemetryElementType (UgvTelemetryElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavVerticalPositionElementType                            */
/*                                                            */
/**************************************************************/

#define TV_UavVerticalPositionElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavVerticalPositionElementType {
   struct {
      unsigned altitudeAGLPresent : 1;
   } m;
   PositiveScalarType altitudeAGL;
   OSREAL altitudeMSL;
} UavVerticalPositionElementType;

EXTERN int asn1E_UavVerticalPositionElementType (OSCTXT* pctxt,
   UavVerticalPositionElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavVerticalPositionElementType (OSCTXT* pctxt, 
   UavVerticalPositionElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavVerticalPositionElementType (OSCTXT* pctxt, 
   UavVerticalPositionElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavVerticalPositionElementType (OSCTXT* pctxt, 
   UavVerticalPositionElementType* pvalue);

EXTERN int DOMTest_UavVerticalPositionElementType (OSCTXT* pctxt, 
   UavVerticalPositionElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavVerticalPositionElementType (
   UavVerticalPositionElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavTelemetryElementType                                   */
/*                                                            */
/**************************************************************/

#define TV_UavTelemetryElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavTelemetryElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned geographicPositionPresent : 1;
      unsigned verticalPositionPresent : 1;
      unsigned orientationPresent : 1;
      unsigned worldCoordinateVelocityPresent : 1;
      unsigned bodyCoordinateVelocityPresent : 1;
      unsigned dopplerVelocityPresent : 1;
      unsigned remainingPowerPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[7];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AbsoluteHorizontalPositionElementType geographicPosition;
   UavVerticalPositionElementType verticalPosition;
   OrientationElementType orientation;
   WorldCoordinateVelocityElementType worldCoordinateVelocity;
   BodyCoordinateVelocityElementType bodyCoordinateVelocity;
   DopplerVelocityElementType dopplerVelocity;
   PercentElementType remainingPower;
} UavTelemetryElementType;

EXTERN int asn1E_UavTelemetryElementType (OSCTXT* pctxt,
   UavTelemetryElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavTelemetryElementType (OSCTXT* pctxt, 
   UavTelemetryElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavTelemetryElementType (OSCTXT* pctxt, 
   UavTelemetryElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavTelemetryElementType (OSCTXT* pctxt, 
   UavTelemetryElementType* pvalue);

EXTERN int DOMTest_UavTelemetryElementType (OSCTXT* pctxt, 
   UavTelemetryElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavTelemetryElementType (UavTelemetryElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DiscreteTimeResultsElementType_choice                     */
/*                                                            */
/**************************************************************/

#define TV_DiscreteTimeResultsElementType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DiscreteTimeResultsElementType_choice_uUVTelemetry 1
#define T_DiscreteTimeResultsElementType_choice_uSVTelemetry 2
#define T_DiscreteTimeResultsElementType_choice_uGVTelemetry 3
#define T_DiscreteTimeResultsElementType_choice_uAVTelemetry 4

typedef struct EXTERN DiscreteTimeResultsElementType_choice {
   int t;
   union {
      /* t = 1 */
      UuvTelemetryElementType *uUVTelemetry;
      /* t = 2 */
      UsvTelemetryElementType *uSVTelemetry;
      /* t = 3 */
      UgvTelemetryElementType *uGVTelemetry;
      /* t = 4 */
      UavTelemetryElementType *uAVTelemetry;
   } u;
} DiscreteTimeResultsElementType_choice;

EXTERN int asn1E_DiscreteTimeResultsElementType_choice (OSCTXT* pctxt,
   DiscreteTimeResultsElementType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DiscreteTimeResultsElementType_choice (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_DiscreteTimeResultsElementType_choice (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DiscreteTimeResultsElementType_choice (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice* pvalue);

EXTERN int DOMTest_DiscreteTimeResultsElementType_choice (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DiscreteTimeResultsElementType_choice (
   DiscreteTimeResultsElementType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvPropellersOrderElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UuvPropellersOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvPropellersOrderElementType {
   struct {
      unsigned allPresent : 1;
      unsigned centerlinePresent : 1;
      unsigned portPresent : 1;
      unsigned starboardPresent : 1;
   } m;
   SignedPercentType all;
   SignedPercentType centerline;
   SignedPercentType port;
   SignedPercentType starboard;
} UuvPropellersOrderElementType;

EXTERN int asn1E_UuvPropellersOrderElementType (OSCTXT* pctxt,
   UuvPropellersOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvPropellersOrderElementType (OSCTXT* pctxt, 
   UuvPropellersOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvPropellersOrderElementType (OSCTXT* pctxt, 
   UuvPropellersOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvPropellersOrderElementType (OSCTXT* pctxt, 
   UuvPropellersOrderElementType* pvalue);

EXTERN int DOMTest_UuvPropellersOrderElementType (OSCTXT* pctxt, 
   UuvPropellersOrderElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvPropellersOrderElementType (
   UuvPropellersOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvPlanesOrderElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_UuvPlanesOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvPlanesOrderElementType {
   struct {
      unsigned bowPresent : 1;
      unsigned sternPresent : 1;
   } m;
   SignedPercentType bow;
   SignedPercentType stern;
} UuvPlanesOrderElementType;

EXTERN int asn1E_UuvPlanesOrderElementType (OSCTXT* pctxt,
   UuvPlanesOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvPlanesOrderElementType (OSCTXT* pctxt, 
   UuvPlanesOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvPlanesOrderElementType (OSCTXT* pctxt, 
   UuvPlanesOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvPlanesOrderElementType (OSCTXT* pctxt, 
   UuvPlanesOrderElementType* pvalue);

EXTERN int DOMTest_UuvPlanesOrderElementType (OSCTXT* pctxt, 
   UuvPlanesOrderElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvPlanesOrderElementType (UuvPlanesOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvBodyThrustersOrderElementType                          */
/*                                                            */
/**************************************************************/

#define TV_UuvBodyThrustersOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvBodyThrustersOrderElementType {
   struct {
      unsigned bowLateralPresent : 1;
      unsigned bowVerticalPresent : 1;
      unsigned sternLateralPresent : 1;
      unsigned sternVerticalPresent : 1;
   } m;
   SignedPercentType bowLateral;
   SignedPercentType bowVertical;
   SignedPercentType sternLateral;
   SignedPercentType sternVertical;
} UuvBodyThrustersOrderElementType;

EXTERN int asn1E_UuvBodyThrustersOrderElementType (OSCTXT* pctxt,
   UuvBodyThrustersOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvBodyThrustersOrderElementType (OSCTXT* pctxt, 
   UuvBodyThrustersOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvBodyThrustersOrderElementType (OSCTXT* pctxt, 
   UuvBodyThrustersOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvBodyThrustersOrderElementType (OSCTXT* pctxt, 
   UuvBodyThrustersOrderElementType* pvalue);

EXTERN int DOMTest_UuvBodyThrustersOrderElementType (OSCTXT* pctxt, 
   UuvBodyThrustersOrderElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvBodyThrustersOrderElementType (
   UuvBodyThrustersOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvControlOrdersElementType                               */
/*                                                            */
/**************************************************************/

#define TV_UuvControlOrdersElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvControlOrdersElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned propellersPresent : 1;
      unsigned rudderPresent : 1;
      unsigned planesPresent : 1;
      unsigned bodyThrustersPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[4];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   UuvPropellersOrderElementType propellers;
   ScalarElementType rudder;
   UuvPlanesOrderElementType planes;
   UuvBodyThrustersOrderElementType bodyThrusters;
} UuvControlOrdersElementType;

EXTERN int asn1E_UuvControlOrdersElementType (OSCTXT* pctxt,
   UuvControlOrdersElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvControlOrdersElementType (OSCTXT* pctxt, 
   UuvControlOrdersElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvControlOrdersElementType (OSCTXT* pctxt, 
   UuvControlOrdersElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvControlOrdersElementType (OSCTXT* pctxt, 
   UuvControlOrdersElementType* pvalue);

EXTERN int DOMTest_UuvControlOrdersElementType (OSCTXT* pctxt, 
   UuvControlOrdersElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvControlOrdersElementType (UuvControlOrdersElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvPropellersOrderElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UsvPropellersOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvPropellersOrderElementType {
   struct {
      unsigned allPresent : 1;
      unsigned centerlinePresent : 1;
      unsigned portPresent : 1;
      unsigned starboardPresent : 1;
   } m;
   SignedPercentType all;
   SignedPercentType centerline;
   SignedPercentType port;
   SignedPercentType starboard;
} UsvPropellersOrderElementType;

EXTERN int asn1E_UsvPropellersOrderElementType (OSCTXT* pctxt,
   UsvPropellersOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvPropellersOrderElementType (OSCTXT* pctxt, 
   UsvPropellersOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvPropellersOrderElementType (OSCTXT* pctxt, 
   UsvPropellersOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvPropellersOrderElementType (OSCTXT* pctxt, 
   UsvPropellersOrderElementType* pvalue);

EXTERN int DOMTest_UsvPropellersOrderElementType (OSCTXT* pctxt, 
   UsvPropellersOrderElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvPropellersOrderElementType (
   UsvPropellersOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvControlOrdersElementType                               */
/*                                                            */
/**************************************************************/

#define TV_UsvControlOrdersElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvControlOrdersElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned propellersPresent : 1;
      unsigned rudderPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[2];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   UsvPropellersOrderElementType propellers;
   SignedPercentElementType rudder;
} UsvControlOrdersElementType;

EXTERN int asn1E_UsvControlOrdersElementType (OSCTXT* pctxt,
   UsvControlOrdersElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvControlOrdersElementType (OSCTXT* pctxt, 
   UsvControlOrdersElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvControlOrdersElementType (OSCTXT* pctxt, 
   UsvControlOrdersElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvControlOrdersElementType (OSCTXT* pctxt, 
   UsvControlOrdersElementType* pvalue);

EXTERN int DOMTest_UsvControlOrdersElementType (OSCTXT* pctxt, 
   UsvControlOrdersElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvControlOrdersElementType (UsvControlOrdersElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvControlOrdersElementType                               */
/*                                                            */
/**************************************************************/

#define TV_UgvControlOrdersElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvControlOrdersElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned placeHolderPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[1];
   } _order;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   NoValueElementType placeHolder;
} UgvControlOrdersElementType;

EXTERN int asn1E_UgvControlOrdersElementType (OSCTXT* pctxt,
   UgvControlOrdersElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvControlOrdersElementType (OSCTXT* pctxt, 
   UgvControlOrdersElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvControlOrdersElementType (OSCTXT* pctxt, 
   UgvControlOrdersElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvControlOrdersElementType (OSCTXT* pctxt, 
   UgvControlOrdersElementType* pvalue);

EXTERN int DOMTest_UgvControlOrdersElementType (OSCTXT* pctxt, 
   UgvControlOrdersElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvControlOrdersElementType (UgvControlOrdersElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavEnginesOrdersElementType                               */
/*                                                            */
/**************************************************************/

#define TV_UavEnginesOrdersElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavEnginesOrdersElementType {
   struct {
      unsigned engine2Present : 1;
   } m;
   SignedPercentType engine1;
   SignedPercentType engine2;
} UavEnginesOrdersElementType;

EXTERN int asn1E_UavEnginesOrdersElementType (OSCTXT* pctxt,
   UavEnginesOrdersElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavEnginesOrdersElementType (OSCTXT* pctxt, 
   UavEnginesOrdersElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavEnginesOrdersElementType (OSCTXT* pctxt, 
   UavEnginesOrdersElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavEnginesOrdersElementType (OSCTXT* pctxt, 
   UavEnginesOrdersElementType* pvalue);

EXTERN int DOMTest_UavEnginesOrdersElementType (OSCTXT* pctxt, 
   UavEnginesOrdersElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavEnginesOrdersElementType (UavEnginesOrdersElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavStabilatorOrderElementType                             */
/*                                                            */
/**************************************************************/

#define TV_UavStabilatorOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavStabilatorOrderElementType {
   SignedPercentType port;
   SignedPercentType starboard;
} UavStabilatorOrderElementType;

EXTERN int asn1E_UavStabilatorOrderElementType (OSCTXT* pctxt,
   UavStabilatorOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavStabilatorOrderElementType (OSCTXT* pctxt, 
   UavStabilatorOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavStabilatorOrderElementType (OSCTXT* pctxt, 
   UavStabilatorOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavStabilatorOrderElementType (OSCTXT* pctxt, 
   UavStabilatorOrderElementType* pvalue);

EXTERN int DOMTest_UavStabilatorOrderElementType (OSCTXT* pctxt, 
   UavStabilatorOrderElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavStabilatorOrderElementType (
   UavStabilatorOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  FixedWingUAVControlOrders                                 */
/*                                                            */
/**************************************************************/

#define TV_FixedWingUAVControlOrders	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FixedWingUAVControlOrders {
   struct {
      unsigned enginesPresent : 1;
      unsigned aileronPresent : 1;
      unsigned rudderPresent : 1;
      unsigned elevatorPresent : 1;
   } m;
   UavEnginesOrdersElementType engines;
   SignedPercentElementType aileron;
   SignedPercentElementType rudder;
   UavStabilatorOrderElementType elevator;
} FixedWingUAVControlOrders;

EXTERN int asn1E_FixedWingUAVControlOrders (OSCTXT* pctxt,
   FixedWingUAVControlOrders *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FixedWingUAVControlOrders (OSCTXT* pctxt, 
   FixedWingUAVControlOrders *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FixedWingUAVControlOrders (OSCTXT* pctxt, 
   FixedWingUAVControlOrders* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FixedWingUAVControlOrders (OSCTXT* pctxt, 
   FixedWingUAVControlOrders* pvalue);

EXTERN int DOMTest_FixedWingUAVControlOrders (OSCTXT* pctxt, 
   FixedWingUAVControlOrders* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FixedWingUAVControlOrders (FixedWingUAVControlOrders* pvalue);

/**************************************************************/
/*                                                            */
/*  UavCyclicOrderElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_UavCyclicOrderElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavCyclicOrderElementType {
   SignedPercentType foreAft;
   SignedPercentType lateral;
} UavCyclicOrderElementType;

EXTERN int asn1E_UavCyclicOrderElementType (OSCTXT* pctxt,
   UavCyclicOrderElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavCyclicOrderElementType (OSCTXT* pctxt, 
   UavCyclicOrderElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavCyclicOrderElementType (OSCTXT* pctxt, 
   UavCyclicOrderElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavCyclicOrderElementType (OSCTXT* pctxt, 
   UavCyclicOrderElementType* pvalue);

EXTERN int DOMTest_UavCyclicOrderElementType (OSCTXT* pctxt, 
   UavCyclicOrderElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavCyclicOrderElementType (UavCyclicOrderElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  RotaryWingUAVControlOrders                                */
/*                                                            */
/**************************************************************/

#define TV_RotaryWingUAVControlOrders	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RotaryWingUAVControlOrders {
   struct {
      unsigned collectivePresent : 1;
      unsigned cyclicPresent : 1;
      unsigned pedalsPresent : 1;
   } m;
   SignedPercentElementType collective;
   UavCyclicOrderElementType cyclic;
   SignedPercentElementType pedals;
} RotaryWingUAVControlOrders;

EXTERN int asn1E_RotaryWingUAVControlOrders (OSCTXT* pctxt,
   RotaryWingUAVControlOrders *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RotaryWingUAVControlOrders (OSCTXT* pctxt, 
   RotaryWingUAVControlOrders *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RotaryWingUAVControlOrders (OSCTXT* pctxt, 
   RotaryWingUAVControlOrders* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RotaryWingUAVControlOrders (OSCTXT* pctxt, 
   RotaryWingUAVControlOrders* pvalue);

EXTERN int DOMTest_RotaryWingUAVControlOrders (OSCTXT* pctxt, 
   RotaryWingUAVControlOrders* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RotaryWingUAVControlOrders (RotaryWingUAVControlOrders* pvalue);

/**************************************************************/
/*                                                            */
/*  UavControlOrdersElementType_choice                        */
/*                                                            */
/**************************************************************/

#define TV_UavControlOrdersElementType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UavControlOrdersElementType_choice_fixedWingUAVControlOrders 1
#define T_UavControlOrdersElementType_choice_rotaryWingUAVControlOrders 2

typedef struct EXTERN UavControlOrdersElementType_choice {
   int t;
   union {
      /* t = 1 */
      FixedWingUAVControlOrders *fixedWingUAVControlOrders;
      /* t = 2 */
      RotaryWingUAVControlOrders *rotaryWingUAVControlOrders;
   } u;
} UavControlOrdersElementType_choice;

EXTERN int asn1E_UavControlOrdersElementType_choice (OSCTXT* pctxt,
   UavControlOrdersElementType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavControlOrdersElementType_choice (OSCTXT* pctxt, 
   UavControlOrdersElementType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavControlOrdersElementType_choice (OSCTXT* pctxt, 
   UavControlOrdersElementType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavControlOrdersElementType_choice (OSCTXT* pctxt, 
   UavControlOrdersElementType_choice* pvalue);

EXTERN int DOMTest_UavControlOrdersElementType_choice (OSCTXT* pctxt, 
   UavControlOrdersElementType_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavControlOrdersElementType_choice (
   UavControlOrdersElementType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  UavControlOrdersElementType                               */
/*                                                            */
/**************************************************************/

#define TV_UavControlOrdersElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavControlOrdersElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   UavControlOrdersElementType_choice choice;
} UavControlOrdersElementType;

EXTERN int asn1E_UavControlOrdersElementType (OSCTXT* pctxt,
   UavControlOrdersElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavControlOrdersElementType (OSCTXT* pctxt, 
   UavControlOrdersElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavControlOrdersElementType (OSCTXT* pctxt, 
   UavControlOrdersElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavControlOrdersElementType (OSCTXT* pctxt, 
   UavControlOrdersElementType* pvalue);

EXTERN int DOMTest_UavControlOrdersElementType (OSCTXT* pctxt, 
   UavControlOrdersElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavControlOrdersElementType (UavControlOrdersElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DiscreteTimeResultsElementType_choice_1                   */
/*                                                            */
/**************************************************************/

#define TV_DiscreteTimeResultsElementType_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DiscreteTimeResultsElementType_choice_1_uUVControlOrder 1
#define T_DiscreteTimeResultsElementType_choice_1_uSVControlOrder 2
#define T_DiscreteTimeResultsElementType_choice_1_uGVControlOrder 3
#define T_DiscreteTimeResultsElementType_choice_1_uAVControlOrder 4

typedef struct EXTERN DiscreteTimeResultsElementType_choice_1 {
   int t;
   union {
      /* t = 1 */
      UuvControlOrdersElementType *uUVControlOrder;
      /* t = 2 */
      UsvControlOrdersElementType *uSVControlOrder;
      /* t = 3 */
      UgvControlOrdersElementType *uGVControlOrder;
      /* t = 4 */
      UavControlOrdersElementType *uAVControlOrder;
   } u;
} DiscreteTimeResultsElementType_choice_1;

EXTERN int asn1E_DiscreteTimeResultsElementType_choice_1 (OSCTXT* pctxt,
   DiscreteTimeResultsElementType_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DiscreteTimeResultsElementType_choice_1 (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice_1 *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_DiscreteTimeResultsElementType_choice_1 (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DiscreteTimeResultsElementType_choice_1 (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice_1* pvalue);

EXTERN int DOMTest_DiscreteTimeResultsElementType_choice_1 (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType_choice_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DiscreteTimeResultsElementType_choice_1 (
   DiscreteTimeResultsElementType_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_activeSonar                                */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_activeSonar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_activeSonar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned elevationPresent : 1;
      unsigned idPresent : 1;
      unsigned strengthPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL elevation;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   OSREAL range;
   OSREAL strength;
   NonNegativeScalarType timeStamp;
} SensorElements_activeSonar;

EXTERN int asn1E_SensorElements_activeSonar (OSCTXT* pctxt,
   SensorElements_activeSonar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_activeSonar (OSCTXT* pctxt, 
   SensorElements_activeSonar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_activeSonar (OSCTXT* pctxt, 
   SensorElements_activeSonar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_activeSonar (OSCTXT* pctxt, 
   SensorElements_activeSonar* pvalue);

EXTERN int DOMTest_SensorElements_activeSonar (OSCTXT* pctxt, 
   SensorElements_activeSonar* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_activeSonar (SensorElements_activeSonar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_imagingSonar                               */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_imagingSonar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_imagingSonar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_imagingSonar;

EXTERN int asn1E_SensorElements_imagingSonar (OSCTXT* pctxt,
   SensorElements_imagingSonar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_imagingSonar (OSCTXT* pctxt, 
   SensorElements_imagingSonar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_imagingSonar (OSCTXT* pctxt, 
   SensorElements_imagingSonar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_imagingSonar (OSCTXT* pctxt, 
   SensorElements_imagingSonar* pvalue);

EXTERN int DOMTest_SensorElements_imagingSonar (OSCTXT* pctxt, 
   SensorElements_imagingSonar* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_imagingSonar (SensorElements_imagingSonar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_blazedArraySonar                           */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_blazedArraySonar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_blazedArraySonar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_blazedArraySonar;

EXTERN int asn1E_SensorElements_blazedArraySonar (OSCTXT* pctxt,
   SensorElements_blazedArraySonar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_blazedArraySonar (OSCTXT* pctxt, 
   SensorElements_blazedArraySonar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_blazedArraySonar (OSCTXT* pctxt, 
   SensorElements_blazedArraySonar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_blazedArraySonar (OSCTXT* pctxt, 
   SensorElements_blazedArraySonar* pvalue);

EXTERN int DOMTest_SensorElements_blazedArraySonar (OSCTXT* pctxt, 
   SensorElements_blazedArraySonar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_blazedArraySonar (
   SensorElements_blazedArraySonar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_syntheticApertureSonar                     */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_syntheticApertureSonar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_syntheticApertureSonar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_syntheticApertureSonar;

EXTERN int asn1E_SensorElements_syntheticApertureSonar (OSCTXT* pctxt,
   SensorElements_syntheticApertureSonar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_syntheticApertureSonar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureSonar *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_SensorElements_syntheticApertureSonar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureSonar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_syntheticApertureSonar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureSonar* pvalue);

EXTERN int DOMTest_SensorElements_syntheticApertureSonar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureSonar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_syntheticApertureSonar (
   SensorElements_syntheticApertureSonar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_passiveSonar                               */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_passiveSonar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_passiveSonar {
   struct {
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned strengthPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL frequency;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   OSREAL strength;
   NonNegativeScalarType timeStamp;
} SensorElements_passiveSonar;

EXTERN int asn1E_SensorElements_passiveSonar (OSCTXT* pctxt,
   SensorElements_passiveSonar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_passiveSonar (OSCTXT* pctxt, 
   SensorElements_passiveSonar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_passiveSonar (OSCTXT* pctxt, 
   SensorElements_passiveSonar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_passiveSonar (OSCTXT* pctxt, 
   SensorElements_passiveSonar* pvalue);

EXTERN int DOMTest_SensorElements_passiveSonar (OSCTXT* pctxt, 
   SensorElements_passiveSonar* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_passiveSonar (SensorElements_passiveSonar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_radar                                      */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_radar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_radar {
   struct {
      unsigned altitudePresent : 1;
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned elevationPresent : 1;
      unsigned headingPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned rangePresent : 1;
      unsigned timeStampPresent : 1;
      unsigned velocityPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL elevation;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_radar;

EXTERN int asn1E_SensorElements_radar (OSCTXT* pctxt,
   SensorElements_radar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_radar (OSCTXT* pctxt, 
   SensorElements_radar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_radar (OSCTXT* pctxt, 
   SensorElements_radar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_radar (OSCTXT* pctxt, 
   SensorElements_radar* pvalue);

EXTERN int DOMTest_SensorElements_radar (OSCTXT* pctxt, SensorElements_radar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_radar (SensorElements_radar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_dopplerRadar                               */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_dopplerRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_dopplerRadar {
   struct {
      unsigned altitudePresent : 1;
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned elevationPresent : 1;
      unsigned headingPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned modelPresent : 1;
      unsigned rangePresent : 1;
      unsigned timeStampPresent : 1;
      unsigned velocityPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL elevation;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_dopplerRadar;

EXTERN int asn1E_SensorElements_dopplerRadar (OSCTXT* pctxt,
   SensorElements_dopplerRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_dopplerRadar (OSCTXT* pctxt, 
   SensorElements_dopplerRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_dopplerRadar (OSCTXT* pctxt, 
   SensorElements_dopplerRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_dopplerRadar (OSCTXT* pctxt, 
   SensorElements_dopplerRadar* pvalue);

EXTERN int DOMTest_SensorElements_dopplerRadar (OSCTXT* pctxt, 
   SensorElements_dopplerRadar* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_dopplerRadar (SensorElements_dopplerRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_syntheticApertureRadar                     */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_syntheticApertureRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_syntheticApertureRadar {
   struct {
      unsigned altitudePresent : 1;
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned elevationPresent : 1;
      unsigned headingPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned rangePresent : 1;
      unsigned timeStampPresent : 1;
      unsigned velocityPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL elevation;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_syntheticApertureRadar;

EXTERN int asn1E_SensorElements_syntheticApertureRadar (OSCTXT* pctxt,
   SensorElements_syntheticApertureRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_syntheticApertureRadar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureRadar *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_SensorElements_syntheticApertureRadar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_syntheticApertureRadar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureRadar* pvalue);

EXTERN int DOMTest_SensorElements_syntheticApertureRadar (OSCTXT* pctxt, 
   SensorElements_syntheticApertureRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_syntheticApertureRadar (
   SensorElements_syntheticApertureRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_trackWhileScanRadar_track                  */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_trackWhileScanRadar_track	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_trackWhileScanRadar_track {
   struct {
      unsigned altitudePresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   OSREAL heading;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   OSREAL range;
   const OSUTF8CHAR* trackID;
   OSREAL velocity;
} SensorElements_trackWhileScanRadar_track;

EXTERN int asn1E_SensorElements_trackWhileScanRadar_track (OSCTXT* pctxt,
   SensorElements_trackWhileScanRadar_track *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_trackWhileScanRadar_track (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar_track *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_SensorElements_trackWhileScanRadar_track (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar_track* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_trackWhileScanRadar_track (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar_track* pvalue);

EXTERN int DOMTest_SensorElements_trackWhileScanRadar_track (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar_track* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_trackWhileScanRadar_track (
   SensorElements_trackWhileScanRadar_track* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_trackWhileScanRadar                        */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_trackWhileScanRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_trackWhileScanRadar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
   /* List of SensorElements_trackWhileScanRadar_track */
   OSRTDList track_list;
} SensorElements_trackWhileScanRadar;

EXTERN int asn1E_SensorElements_trackWhileScanRadar (OSCTXT* pctxt,
   SensorElements_trackWhileScanRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_trackWhileScanRadar (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_trackWhileScanRadar (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_trackWhileScanRadar (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar* pvalue);

EXTERN int DOMTest_SensorElements_trackWhileScanRadar (OSCTXT* pctxt, 
   SensorElements_trackWhileScanRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_trackWhileScanRadar (
   SensorElements_trackWhileScanRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_earlyWarningRadar                          */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_earlyWarningRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_earlyWarningRadar {
   struct {
      unsigned altitudePresent : 1;
      unsigned descriptionPresent : 1;
      unsigned headingPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned velocityPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_earlyWarningRadar;

EXTERN int asn1E_SensorElements_earlyWarningRadar (OSCTXT* pctxt,
   SensorElements_earlyWarningRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_earlyWarningRadar (OSCTXT* pctxt, 
   SensorElements_earlyWarningRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_earlyWarningRadar (OSCTXT* pctxt, 
   SensorElements_earlyWarningRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_earlyWarningRadar (OSCTXT* pctxt, 
   SensorElements_earlyWarningRadar* pvalue);

EXTERN int DOMTest_SensorElements_earlyWarningRadar (OSCTXT* pctxt, 
   SensorElements_earlyWarningRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_earlyWarningRadar (
   SensorElements_earlyWarningRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_acquisitionRadar                           */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_acquisitionRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_acquisitionRadar {
   struct {
      unsigned altitudePresent : 1;
      unsigned descriptionPresent : 1;
      unsigned headingPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned velocityPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_acquisitionRadar;

EXTERN int asn1E_SensorElements_acquisitionRadar (OSCTXT* pctxt,
   SensorElements_acquisitionRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_acquisitionRadar (OSCTXT* pctxt, 
   SensorElements_acquisitionRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_acquisitionRadar (OSCTXT* pctxt, 
   SensorElements_acquisitionRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_acquisitionRadar (OSCTXT* pctxt, 
   SensorElements_acquisitionRadar* pvalue);

EXTERN int DOMTest_SensorElements_acquisitionRadar (OSCTXT* pctxt, 
   SensorElements_acquisitionRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_acquisitionRadar (
   SensorElements_acquisitionRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_trackingRadar                              */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_trackingRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_trackingRadar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_trackingRadar;

EXTERN int asn1E_SensorElements_trackingRadar (OSCTXT* pctxt,
   SensorElements_trackingRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_trackingRadar (OSCTXT* pctxt, 
   SensorElements_trackingRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_trackingRadar (OSCTXT* pctxt, 
   SensorElements_trackingRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_trackingRadar (OSCTXT* pctxt, 
   SensorElements_trackingRadar* pvalue);

EXTERN int DOMTest_SensorElements_trackingRadar (OSCTXT* pctxt, 
   SensorElements_trackingRadar* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_trackingRadar (
   SensorElements_trackingRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_fireControlRadar                           */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_fireControlRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_fireControlRadar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL altitude;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_fireControlRadar;

EXTERN int asn1E_SensorElements_fireControlRadar (OSCTXT* pctxt,
   SensorElements_fireControlRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_fireControlRadar (OSCTXT* pctxt, 
   SensorElements_fireControlRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_fireControlRadar (OSCTXT* pctxt, 
   SensorElements_fireControlRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_fireControlRadar (OSCTXT* pctxt, 
   SensorElements_fireControlRadar* pvalue);

EXTERN int DOMTest_SensorElements_fireControlRadar (OSCTXT* pctxt, 
   SensorElements_fireControlRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_fireControlRadar (
   SensorElements_fireControlRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_surfaceSearchRadar                         */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_surfaceSearchRadar	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_surfaceSearchRadar {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned mode1Present : 1;
      unsigned mode2Present : 1;
      unsigned mode3Present : 1;
      unsigned mode4Present : 1;
      unsigned modeCPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL heading;
   const OSUTF8CHAR* id;
   OSINT32 mode1;
   OSINT32 mode2;
   OSINT32 mode3;
   OSBOOL mode4;
   OSINT32 modeC;
   const OSUTF8CHAR* model;
   OSREAL range;
   NonNegativeScalarType timeStamp;
   OSREAL velocity;
} SensorElements_surfaceSearchRadar;

EXTERN int asn1E_SensorElements_surfaceSearchRadar (OSCTXT* pctxt,
   SensorElements_surfaceSearchRadar *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_surfaceSearchRadar (OSCTXT* pctxt, 
   SensorElements_surfaceSearchRadar *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_surfaceSearchRadar (OSCTXT* pctxt, 
   SensorElements_surfaceSearchRadar* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_surfaceSearchRadar (OSCTXT* pctxt, 
   SensorElements_surfaceSearchRadar* pvalue);

EXTERN int DOMTest_SensorElements_surfaceSearchRadar (OSCTXT* pctxt, 
   SensorElements_surfaceSearchRadar* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_surfaceSearchRadar (
   SensorElements_surfaceSearchRadar* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_eSM                                        */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_eSM	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_eSM {
   struct {
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned strengthPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL frequency;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   OSREAL strength;
   NonNegativeScalarType timeStamp;
} SensorElements_eSM;

EXTERN int asn1E_SensorElements_eSM (OSCTXT* pctxt,
   SensorElements_eSM *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_eSM (OSCTXT* pctxt, 
   SensorElements_eSM *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_eSM (OSCTXT* pctxt, 
   SensorElements_eSM* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_eSM (OSCTXT* pctxt, 
   SensorElements_eSM* pvalue);

EXTERN int DOMTest_SensorElements_eSM (OSCTXT* pctxt, SensorElements_eSM* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_eSM (SensorElements_eSM* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_passiveSoundDetection                      */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_passiveSoundDetection	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_passiveSoundDetection {
   struct {
      unsigned bearingPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned strengthPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   OSREAL bearing;
   const OSUTF8CHAR* description;
   OSREAL frequency;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   OSREAL strength;
   NonNegativeScalarType timeStamp;
} SensorElements_passiveSoundDetection;

EXTERN int asn1E_SensorElements_passiveSoundDetection (OSCTXT* pctxt,
   SensorElements_passiveSoundDetection *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_passiveSoundDetection (OSCTXT* pctxt, 
   SensorElements_passiveSoundDetection *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_SensorElements_passiveSoundDetection (OSCTXT* pctxt, 
   SensorElements_passiveSoundDetection* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_passiveSoundDetection (OSCTXT* pctxt, 
   SensorElements_passiveSoundDetection* pvalue);

EXTERN int DOMTest_SensorElements_passiveSoundDetection (OSCTXT* pctxt, 
   SensorElements_passiveSoundDetection* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_passiveSoundDetection (
   SensorElements_passiveSoundDetection* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_chemicalBiologicalRadiologicalDetection    */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_chemicalBiologicalRadiologicalDetection	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_chemicalBiologicalRadiologicalDetection {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned magnitudePresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   OSREAL magnitude;
   const OSUTF8CHAR* model;
   const OSUTF8CHAR* substance;
   NonNegativeScalarType timeStamp;
} SensorElements_chemicalBiologicalRadiologicalDetection;

EXTERN int asn1E_SensorElements_chemicalBiologicalRadiologicalDetection (OSCTXT* pctxt,
   SensorElements_chemicalBiologicalRadiologicalDetection *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_chemicalBiologicalRadiologicalDetection (
   OSCTXT* pctxt, 
   SensorElements_chemicalBiologicalRadiologicalDetection *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_chemicalBiologicalRadiologicalDetection 
   (OSCTXT* pctxt, 
   SensorElements_chemicalBiologicalRadiologicalDetection* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_chemicalBiologicalRadiologicalDetection 
   (OSCTXT* pctxt, 
   SensorElements_chemicalBiologicalRadiologicalDetection* pvalue);

EXTERN int DOMTest_SensorElements_chemicalBiologicalRadiologicalDetection (OSCTXT* pctxt, 
   SensorElements_chemicalBiologicalRadiologicalDetection* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_chemicalBiologicalRadiologicalDetection (
   SensorElements_chemicalBiologicalRadiologicalDetection* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_video                                      */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_video	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_video {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_video;

EXTERN int asn1E_SensorElements_video (OSCTXT* pctxt,
   SensorElements_video *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_video (OSCTXT* pctxt, 
   SensorElements_video *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_video (OSCTXT* pctxt, 
   SensorElements_video* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_video (OSCTXT* pctxt, 
   SensorElements_video* pvalue);

EXTERN int DOMTest_SensorElements_video (OSCTXT* pctxt, SensorElements_video* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_video (SensorElements_video* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_fLIR                                       */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_fLIR	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_fLIR {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_fLIR;

EXTERN int asn1E_SensorElements_fLIR (OSCTXT* pctxt,
   SensorElements_fLIR *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_fLIR (OSCTXT* pctxt, 
   SensorElements_fLIR *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_fLIR (OSCTXT* pctxt, 
   SensorElements_fLIR* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_fLIR (OSCTXT* pctxt, 
   SensorElements_fLIR* pvalue);

EXTERN int DOMTest_SensorElements_fLIR (OSCTXT* pctxt, SensorElements_fLIR* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_fLIR (SensorElements_fLIR* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements_motionSensor                               */
/*                                                            */
/**************************************************************/

#define TV_SensorElements_motionSensor	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElements_motionSensor {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* model;
   NonNegativeScalarType timeStamp;
} SensorElements_motionSensor;

EXTERN int asn1E_SensorElements_motionSensor (OSCTXT* pctxt,
   SensorElements_motionSensor *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements_motionSensor (OSCTXT* pctxt, 
   SensorElements_motionSensor *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements_motionSensor (OSCTXT* pctxt, 
   SensorElements_motionSensor* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements_motionSensor (OSCTXT* pctxt, 
   SensorElements_motionSensor* pvalue);

EXTERN int DOMTest_SensorElements_motionSensor (OSCTXT* pctxt, 
   SensorElements_motionSensor* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements_motionSensor (SensorElements_motionSensor* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElements                                            */
/*                                                            */
/**************************************************************/

#define TV_SensorElements	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SensorElements_activeSonar    1
#define T_SensorElements_imagingSonar   2
#define T_SensorElements_blazedArraySonar 3
#define T_SensorElements_syntheticApertureSonar 4
#define T_SensorElements_passiveSonar   5
#define T_SensorElements_radar          6
#define T_SensorElements_dopplerRadar   7
#define T_SensorElements_syntheticApertureRadar 8
#define T_SensorElements_trackWhileScanRadar 9
#define T_SensorElements_earlyWarningRadar 10
#define T_SensorElements_acquisitionRadar 11
#define T_SensorElements_trackingRadar  12
#define T_SensorElements_fireControlRadar 13
#define T_SensorElements_surfaceSearchRadar 14
#define T_SensorElements_eSM            15
#define T_SensorElements_passiveSoundDetection 16
#define T_SensorElements_chemicalBiologicalRadiologicalDetection 17
#define T_SensorElements_video          18
#define T_SensorElements_fLIR           19
#define T_SensorElements_motionSensor   20

typedef struct EXTERN SensorElements {
   int t;
   union {
      /* t = 1 */
      SensorElements_activeSonar *activeSonar;
      /* t = 2 */
      SensorElements_imagingSonar *imagingSonar;
      /* t = 3 */
      SensorElements_blazedArraySonar *blazedArraySonar;
      /* t = 4 */
      SensorElements_syntheticApertureSonar *syntheticApertureSonar;
      /* t = 5 */
      SensorElements_passiveSonar *passiveSonar;
      /* t = 6 */
      SensorElements_radar *radar;
      /* t = 7 */
      SensorElements_dopplerRadar *dopplerRadar;
      /* t = 8 */
      SensorElements_syntheticApertureRadar *syntheticApertureRadar;
      /* t = 9 */
      SensorElements_trackWhileScanRadar *trackWhileScanRadar;
      /* t = 10 */
      SensorElements_earlyWarningRadar *earlyWarningRadar;
      /* t = 11 */
      SensorElements_acquisitionRadar *acquisitionRadar;
      /* t = 12 */
      SensorElements_trackingRadar *trackingRadar;
      /* t = 13 */
      SensorElements_fireControlRadar *fireControlRadar;
      /* t = 14 */
      SensorElements_surfaceSearchRadar *surfaceSearchRadar;
      /* t = 15 */
      SensorElements_eSM *eSM;
      /* t = 16 */
      SensorElements_passiveSoundDetection *passiveSoundDetection;
      /* t = 17 */
      SensorElements_chemicalBiologicalRadiologicalDetection *chemicalBiologicalRadiologicalDetection;
      /* t = 18 */
      SensorElements_video *video;
      /* t = 19 */
      SensorElements_fLIR *fLIR;
      /* t = 20 */
      SensorElements_motionSensor *motionSensor;
   } u;
} SensorElements;

EXTERN int asn1E_SensorElements (OSCTXT* pctxt,
   SensorElements *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElements (OSCTXT* pctxt, SensorElements *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElements (OSCTXT* pctxt, SensorElements* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElements (OSCTXT* pctxt, SensorElements* pvalue);

EXTERN int DOMTest_SensorElements (OSCTXT* pctxt, SensorElements* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElements (SensorElements* pvalue);

/**************************************************************/
/*                                                            */
/*  SensorElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_SensorElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SensorElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of SensorElements */
   OSRTDList choice_list;
} SensorElementType;

EXTERN int asn1E_SensorElementType (OSCTXT* pctxt,
   SensorElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SensorElementType (OSCTXT* pctxt, SensorElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SensorElementType (OSCTXT* pctxt, SensorElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SensorElementType (OSCTXT* pctxt, SensorElementType* pvalue)
   ;

EXTERN int DOMTest_SensorElementType (OSCTXT* pctxt, SensorElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SensorElementType (SensorElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  WeaponElementType                                         */
/*                                                            */
/**************************************************************/

#define TV_WeaponElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN WeaponElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
} WeaponElementType;

EXTERN int asn1E_WeaponElementType (OSCTXT* pctxt,
   WeaponElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_WeaponElementType (OSCTXT* pctxt, WeaponElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_WeaponElementType (OSCTXT* pctxt, WeaponElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_WeaponElementType (OSCTXT* pctxt, WeaponElementType* pvalue)
   ;

EXTERN int DOMTest_WeaponElementType (OSCTXT* pctxt, WeaponElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_WeaponElementType (WeaponElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DiscreteTimeResultsElementType                            */
/*                                                            */
/**************************************************************/

#define TV_DiscreteTimeResultsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DiscreteTimeResultsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned choicePresent : 1;
      unsigned choice_1Present : 1;
      unsigned sensorPresent : 1;
      unsigned weaponPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DiscreteTimeResultsElementType_choice choice;
   DiscreteTimeResultsElementType_choice_1 choice_1;
   SensorElementType sensor;
   WeaponElementType weapon;
} DiscreteTimeResultsElementType;

EXTERN int asn1E_DiscreteTimeResultsElementType (OSCTXT* pctxt,
   DiscreteTimeResultsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DiscreteTimeResultsElementType (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DiscreteTimeResultsElementType (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DiscreteTimeResultsElementType (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType* pvalue);

EXTERN int DOMTest_DiscreteTimeResultsElementType (OSCTXT* pctxt, 
   DiscreteTimeResultsElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DiscreteTimeResultsElementType (
   DiscreteTimeResultsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvLoggableEventType_element                              */
/*                                                            */
/**************************************************************/

#define TV_UuvLoggableEventType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UuvLoggableEventType_element_compositeWaypoint 1
#define T_UuvLoggableEventType_element_followBeacon 2
#define T_UuvLoggableEventType_element_gpsFix 3
#define T_UuvLoggableEventType_element_help 4
#define T_UuvLoggableEventType_element_hover 5
#define T_UuvLoggableEventType_element_loiter 6
#define T_UuvLoggableEventType_element_makeAltitude 7
#define T_UuvLoggableEventType_element_makeDepth 8
#define T_UuvLoggableEventType_element_makeHeading 9
#define T_UuvLoggableEventType_element_makeKnots 10
#define T_UuvLoggableEventType_element_makeSpeed 11
#define T_UuvLoggableEventType_element_metaCommand 12
#define T_UuvLoggableEventType_element_missionScript 13
#define T_UuvLoggableEventType_element_missionScriptInline 14
#define T_UuvLoggableEventType_element_moveLateral 15
#define T_UuvLoggableEventType_element_moveRotate 16
#define T_UuvLoggableEventType_element_quit 17
#define T_UuvLoggableEventType_element_realtime 18
#define T_UuvLoggableEventType_element_recover 19
#define T_UuvLoggableEventType_element_sendMessage 20
#define T_UuvLoggableEventType_element_setPlanes 21
#define T_UuvLoggableEventType_element_setPosition 22
#define T_UuvLoggableEventType_element_setPower 23
#define T_UuvLoggableEventType_element_setRudder 24
#define T_UuvLoggableEventType_element_setSonar 25
#define T_UuvLoggableEventType_element_setStandoff 26
#define T_UuvLoggableEventType_element_setThruster 27
#define T_UuvLoggableEventType_element_setTime 28
#define T_UuvLoggableEventType_element_setTimeStep 29
#define T_UuvLoggableEventType_element_takeStation 30
#define T_UuvLoggableEventType_element_thrusters 31
#define T_UuvLoggableEventType_element_trace 32
#define T_UuvLoggableEventType_element_wait 33
#define T_UuvLoggableEventType_element_waitUntilTime 34
#define T_UuvLoggableEventType_element_waypoint 35
#define T_UuvLoggableEventType_element_aVCLMessage 36

typedef struct EXTERN UuvLoggableEventType_element {
   int t;
   union {
      /* t = 1 */
      UuvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      FollowBeaconCommandType *followBeacon;
      /* t = 3 */
      GpsFixCommandType *gpsFix;
      /* t = 4 */
      NoValueElementType *help;
      /* t = 5 */
      HoverCommandType *hover;
      /* t = 6 */
      UuvLoiterCommandType *loiter;
      /* t = 7 */
      PositiveScalarElementType_derivations *makeAltitude;
      /* t = 8 */
      PositiveScalarElementType_derivations *makeDepth;
      /* t = 9 */
      HeadingElementType *makeHeading;
      /* t = 10 */
      SpeedElementType *makeKnots;
      /* t = 11 */
      SpeedElementType *makeSpeed;
      /* t = 12 */
      MetaDataType *metaCommand;
      /* t = 13 */
      StringElementType *missionScript;
      /* t = 14 */
      StringElementType *missionScriptInline;
      /* t = 15 */
      ScalarElementType *moveLateral;
      /* t = 16 */
      ScalarElementType *moveRotate;
      /* t = 17 */
      QuitCommandType *quit;
      /* t = 18 */
      BooleanElementType_derivations *realtime;
      /* t = 19 */
      RecoverCommandType *recover;
      /* t = 20 */
      SendMessageCommandType *sendMessage;
      /* t = 21 */
      SetPlanesCommandType *setPlanes;
      /* t = 22 */
      UuvPositionCommandType *setPosition;
      /* t = 23 */
      SetPropellerCommandType *setPower;
      /* t = 24 */
      SignedPercentElementType *setRudder;
      /* t = 25 */
      SetSonarCommandType *setSonar;
      /* t = 26 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 27 */
      SetThrusterCommandType *setThruster;
      /* t = 28 */
      ScalarElementType *setTime;
      /* t = 29 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 30 */
      TakeStationCommandType *takeStation;
      /* t = 31 */
      BooleanElementType_derivations *thrusters;
      /* t = 32 */
      BooleanElementType_derivations *trace;
      /* t = 33 */
      PositiveScalarElementType_derivations *wait;
      /* t = 34 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 35 */
      UuvWaypointCommandType *waypoint;
      /* t = 36 */
      struct AvclMessageType *aVCLMessage;
   } u;
} UuvLoggableEventType_element;

EXTERN int asn1E_UuvLoggableEventType_element (OSCTXT* pctxt,
   UuvLoggableEventType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvLoggableEventType_element (OSCTXT* pctxt, 
   UuvLoggableEventType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvLoggableEventType_element (OSCTXT* pctxt, 
   UuvLoggableEventType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvLoggableEventType_element (OSCTXT* pctxt, 
   UuvLoggableEventType_element* pvalue);

EXTERN int DOMTest_UuvLoggableEventType_element (OSCTXT* pctxt, 
   UuvLoggableEventType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvLoggableEventType_element (
   UuvLoggableEventType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UuvLoggableEventType                                      */
/*                                                            */
/**************************************************************/

#define TV_UuvLoggableEventType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UuvLoggableEventType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UuvLoggableEventType_element */
   OSRTDList choice_list;
} UuvLoggableEventType;

EXTERN int asn1E_UuvLoggableEventType (OSCTXT* pctxt,
   UuvLoggableEventType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UuvLoggableEventType (OSCTXT* pctxt, 
   UuvLoggableEventType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UuvLoggableEventType (OSCTXT* pctxt, 
   UuvLoggableEventType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UuvLoggableEventType (OSCTXT* pctxt, 
   UuvLoggableEventType* pvalue);

EXTERN int DOMTest_UuvLoggableEventType (OSCTXT* pctxt, UuvLoggableEventType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UuvLoggableEventType (UuvLoggableEventType* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvLoggableEventType_element                              */
/*                                                            */
/**************************************************************/

#define TV_UgvLoggableEventType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UgvLoggableEventType_element_compositeWaypoint 1
#define T_UgvLoggableEventType_element_help 2
#define T_UgvLoggableEventType_element_loiter 3
#define T_UgvLoggableEventType_element_makeHeading 4
#define T_UgvLoggableEventType_element_makeSpeed 5
#define T_UgvLoggableEventType_element_metaCommand 6
#define T_UgvLoggableEventType_element_missionScript 7
#define T_UgvLoggableEventType_element_missionScriptInline 8
#define T_UgvLoggableEventType_element_quit 9
#define T_UgvLoggableEventType_element_realtime 10
#define T_UgvLoggableEventType_element_sendMessage 11
#define T_UgvLoggableEventType_element_setPosition 12
#define T_UgvLoggableEventType_element_setStandoff 13
#define T_UgvLoggableEventType_element_setTime 14
#define T_UgvLoggableEventType_element_setTimeStep 15
#define T_UgvLoggableEventType_element_trace 16
#define T_UgvLoggableEventType_element_wait 17
#define T_UgvLoggableEventType_element_waitUntilTime 18
#define T_UgvLoggableEventType_element_waypoint 19
#define T_UgvLoggableEventType_element_aVCLMessage 20

typedef struct EXTERN UgvLoggableEventType_element {
   int t;
   union {
      /* t = 1 */
      UgvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      NoValueElementType *help;
      /* t = 3 */
      UgvLoiterCommandType *loiter;
      /* t = 4 */
      HeadingElementType *makeHeading;
      /* t = 5 */
      PositiveScalarElementType_derivations *makeSpeed;
      /* t = 6 */
      MetaDataType *metaCommand;
      /* t = 7 */
      StringElementType *missionScript;
      /* t = 8 */
      StringElementType *missionScriptInline;
      /* t = 9 */
      QuitCommandType *quit;
      /* t = 10 */
      BooleanElementType_derivations *realtime;
      /* t = 11 */
      SendMessageCommandType *sendMessage;
      /* t = 12 */
      UgvPositionCommandType *setPosition;
      /* t = 13 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 14 */
      ScalarElementType *setTime;
      /* t = 15 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 16 */
      BooleanElementType_derivations *trace;
      /* t = 17 */
      PositiveScalarElementType_derivations *wait;
      /* t = 18 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 19 */
      UgvWaypointCommandType *waypoint;
      /* t = 20 */
      struct AvclMessageType *aVCLMessage;
   } u;
} UgvLoggableEventType_element;

EXTERN int asn1E_UgvLoggableEventType_element (OSCTXT* pctxt,
   UgvLoggableEventType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvLoggableEventType_element (OSCTXT* pctxt, 
   UgvLoggableEventType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvLoggableEventType_element (OSCTXT* pctxt, 
   UgvLoggableEventType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvLoggableEventType_element (OSCTXT* pctxt, 
   UgvLoggableEventType_element* pvalue);

EXTERN int DOMTest_UgvLoggableEventType_element (OSCTXT* pctxt, 
   UgvLoggableEventType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvLoggableEventType_element (
   UgvLoggableEventType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UgvLoggableEventType                                      */
/*                                                            */
/**************************************************************/

#define TV_UgvLoggableEventType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UgvLoggableEventType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UgvLoggableEventType_element */
   OSRTDList choice_list;
} UgvLoggableEventType;

EXTERN int asn1E_UgvLoggableEventType (OSCTXT* pctxt,
   UgvLoggableEventType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UgvLoggableEventType (OSCTXT* pctxt, 
   UgvLoggableEventType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UgvLoggableEventType (OSCTXT* pctxt, 
   UgvLoggableEventType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UgvLoggableEventType (OSCTXT* pctxt, 
   UgvLoggableEventType* pvalue);

EXTERN int DOMTest_UgvLoggableEventType (OSCTXT* pctxt, UgvLoggableEventType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UgvLoggableEventType (UgvLoggableEventType* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvLoggableEventType_element                              */
/*                                                            */
/**************************************************************/

#define TV_UsvLoggableEventType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UsvLoggableEventType_element_compositeWaypoint 1
#define T_UsvLoggableEventType_element_help 2
#define T_UsvLoggableEventType_element_loiter 3
#define T_UsvLoggableEventType_element_makeHeading 4
#define T_UsvLoggableEventType_element_makeKnots 5
#define T_UsvLoggableEventType_element_makeSpeed 6
#define T_UsvLoggableEventType_element_metaCommand 7
#define T_UsvLoggableEventType_element_missionScript 8
#define T_UsvLoggableEventType_element_missionScriptInline 9
#define T_UsvLoggableEventType_element_quit 10
#define T_UsvLoggableEventType_element_realtime 11
#define T_UsvLoggableEventType_element_sendMessage 12
#define T_UsvLoggableEventType_element_setPosition 13
#define T_UsvLoggableEventType_element_setPower 14
#define T_UsvLoggableEventType_element_setRudder 15
#define T_UsvLoggableEventType_element_setStandoff 16
#define T_UsvLoggableEventType_element_setTime 17
#define T_UsvLoggableEventType_element_setTimeStep 18
#define T_UsvLoggableEventType_element_trace 19
#define T_UsvLoggableEventType_element_wait 20
#define T_UsvLoggableEventType_element_waitUntilTime 21
#define T_UsvLoggableEventType_element_waypoint 22
#define T_UsvLoggableEventType_element_aVCLMessage 23

typedef struct EXTERN UsvLoggableEventType_element {
   int t;
   union {
      /* t = 1 */
      UsvCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      NoValueElementType *help;
      /* t = 3 */
      UsvLoiterCommandType *loiter;
      /* t = 4 */
      HeadingElementType *makeHeading;
      /* t = 5 */
      SpeedElementType *makeKnots;
      /* t = 6 */
      SpeedElementType *makeSpeed;
      /* t = 7 */
      MetaDataType *metaCommand;
      /* t = 8 */
      StringElementType *missionScript;
      /* t = 9 */
      StringElementType *missionScriptInline;
      /* t = 10 */
      QuitCommandType *quit;
      /* t = 11 */
      BooleanElementType_derivations *realtime;
      /* t = 12 */
      SendMessageCommandType *sendMessage;
      /* t = 13 */
      UsvPositionCommandType *setPosition;
      /* t = 14 */
      SetPropellerCommandType *setPower;
      /* t = 15 */
      SignedPercentElementType *setRudder;
      /* t = 16 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 17 */
      ScalarElementType *setTime;
      /* t = 18 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 19 */
      BooleanElementType_derivations *trace;
      /* t = 20 */
      PositiveScalarElementType_derivations *wait;
      /* t = 21 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 22 */
      UsvWaypointCommandType *waypoint;
      /* t = 23 */
      struct AvclMessageType *aVCLMessage;
   } u;
} UsvLoggableEventType_element;

EXTERN int asn1E_UsvLoggableEventType_element (OSCTXT* pctxt,
   UsvLoggableEventType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvLoggableEventType_element (OSCTXT* pctxt, 
   UsvLoggableEventType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvLoggableEventType_element (OSCTXT* pctxt, 
   UsvLoggableEventType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvLoggableEventType_element (OSCTXT* pctxt, 
   UsvLoggableEventType_element* pvalue);

EXTERN int DOMTest_UsvLoggableEventType_element (OSCTXT* pctxt, 
   UsvLoggableEventType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvLoggableEventType_element (
   UsvLoggableEventType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UsvLoggableEventType                                      */
/*                                                            */
/**************************************************************/

#define TV_UsvLoggableEventType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UsvLoggableEventType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UsvLoggableEventType_element */
   OSRTDList choice_list;
} UsvLoggableEventType;

EXTERN int asn1E_UsvLoggableEventType (OSCTXT* pctxt,
   UsvLoggableEventType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UsvLoggableEventType (OSCTXT* pctxt, 
   UsvLoggableEventType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UsvLoggableEventType (OSCTXT* pctxt, 
   UsvLoggableEventType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UsvLoggableEventType (OSCTXT* pctxt, 
   UsvLoggableEventType* pvalue);

EXTERN int DOMTest_UsvLoggableEventType (OSCTXT* pctxt, UsvLoggableEventType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UsvLoggableEventType (UsvLoggableEventType* pvalue);

/**************************************************************/
/*                                                            */
/*  UavLoggableEventType_element                              */
/*                                                            */
/**************************************************************/

#define TV_UavLoggableEventType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UavLoggableEventType_element_compositeWaypoint 1
#define T_UavLoggableEventType_element_help 2
#define T_UavLoggableEventType_element_loiter 3
#define T_UavLoggableEventType_element_makeAltitudeAGL 4
#define T_UavLoggableEventType_element_makeAltitudeMSL 5
#define T_UavLoggableEventType_element_makeClimbRate 6
#define T_UavLoggableEventType_element_makeHeading 7
#define T_UavLoggableEventType_element_makeKnots 8
#define T_UavLoggableEventType_element_makeSpeed 9
#define T_UavLoggableEventType_element_makeTurnRate 10
#define T_UavLoggableEventType_element_metaCommand 11
#define T_UavLoggableEventType_element_missionScript 12
#define T_UavLoggableEventType_element_missionScriptInline 13
#define T_UavLoggableEventType_element_quit 14
#define T_UavLoggableEventType_element_realtime 15
#define T_UavLoggableEventType_element_sendMessage 16
#define T_UavLoggableEventType_element_setAileron 17
#define T_UavLoggableEventType_element_setElevator 18
#define T_UavLoggableEventType_element_setPosition 19
#define T_UavLoggableEventType_element_setPower 20
#define T_UavLoggableEventType_element_setRudder 21
#define T_UavLoggableEventType_element_setStandoff 22
#define T_UavLoggableEventType_element_setTime 23
#define T_UavLoggableEventType_element_setTimeStep 24
#define T_UavLoggableEventType_element_trace 25
#define T_UavLoggableEventType_element_wait 26
#define T_UavLoggableEventType_element_waitUntilTime 27
#define T_UavLoggableEventType_element_waypoint 28
#define T_UavLoggableEventType_element_aVCLMessage 29

typedef struct EXTERN UavLoggableEventType_element {
   int t;
   union {
      /* t = 1 */
      UavCompositeWaypointCommandType *compositeWaypoint;
      /* t = 2 */
      NoValueElementType *help;
      /* t = 3 */
      UavLoiterCommandType *loiter;
      /* t = 4 */
      PositiveScalarElementType_derivations *makeAltitudeAGL;
      /* t = 5 */
      PositiveScalarElementType_derivations *makeAltitudeMSL;
      /* t = 6 */
      SignedPercentElementType *makeClimbRate;
      /* t = 7 */
      HeadingElementType *makeHeading;
      /* t = 8 */
      SpeedElementType *makeKnots;
      /* t = 9 */
      SpeedElementType *makeSpeed;
      /* t = 10 */
      SignedPercentElementType *makeTurnRate;
      /* t = 11 */
      MetaDataType *metaCommand;
      /* t = 12 */
      StringElementType *missionScript;
      /* t = 13 */
      StringElementType *missionScriptInline;
      /* t = 14 */
      QuitCommandType *quit;
      /* t = 15 */
      BooleanElementType_derivations *realtime;
      /* t = 16 */
      SendMessageCommandType *sendMessage;
      /* t = 17 */
      SignedPercentElementType *setAileron;
      /* t = 18 */
      SignedPercentElementType *setElevator;
      /* t = 19 */
      UavPositionCommandType *setPosition;
      /* t = 20 */
      PercentElementType *setPower;
      /* t = 21 */
      SignedPercentElementType *setRudder;
      /* t = 22 */
      PositiveScalarElementType_derivations *setStandoff;
      /* t = 23 */
      ScalarElementType *setTime;
      /* t = 24 */
      PositiveScalarElementType_derivations *setTimeStep;
      /* t = 25 */
      BooleanElementType_derivations *trace;
      /* t = 26 */
      PositiveScalarElementType_derivations *wait;
      /* t = 27 */
      PositiveScalarElementType_derivations *waitUntilTime;
      /* t = 28 */
      UavWaypointCommandType *waypoint;
      /* t = 29 */
      struct AvclMessageType *aVCLMessage;
   } u;
} UavLoggableEventType_element;

EXTERN int asn1E_UavLoggableEventType_element (OSCTXT* pctxt,
   UavLoggableEventType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavLoggableEventType_element (OSCTXT* pctxt, 
   UavLoggableEventType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavLoggableEventType_element (OSCTXT* pctxt, 
   UavLoggableEventType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavLoggableEventType_element (OSCTXT* pctxt, 
   UavLoggableEventType_element* pvalue);

EXTERN int DOMTest_UavLoggableEventType_element (OSCTXT* pctxt, 
   UavLoggableEventType_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavLoggableEventType_element (
   UavLoggableEventType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  UavLoggableEventType                                      */
/*                                                            */
/**************************************************************/

#define TV_UavLoggableEventType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UavLoggableEventType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of UavLoggableEventType_element */
   OSRTDList choice_list;
} UavLoggableEventType;

EXTERN int asn1E_UavLoggableEventType (OSCTXT* pctxt,
   UavLoggableEventType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UavLoggableEventType (OSCTXT* pctxt, 
   UavLoggableEventType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UavLoggableEventType (OSCTXT* pctxt, 
   UavLoggableEventType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UavLoggableEventType (OSCTXT* pctxt, 
   UavLoggableEventType* pvalue);

EXTERN int DOMTest_UavLoggableEventType (OSCTXT* pctxt, UavLoggableEventType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UavLoggableEventType (UavLoggableEventType* pvalue);

/**************************************************************/
/*                                                            */
/*  LoggableEvent                                             */
/*                                                            */
/**************************************************************/

#define TV_LoggableEvent	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LoggableEvent_uUVEvent        1
#define T_LoggableEvent_uGVEvent        2
#define T_LoggableEvent_uSVEvent        3
#define T_LoggableEvent_uAVEvent        4

typedef struct EXTERN LoggableEvent {
   int t;
   union {
      /* t = 1 */
      UuvLoggableEventType *uUVEvent;
      /* t = 2 */
      UgvLoggableEventType *uGVEvent;
      /* t = 3 */
      UsvLoggableEventType *uSVEvent;
      /* t = 4 */
      UavLoggableEventType *uAVEvent;
   } u;
} LoggableEvent;

EXTERN int asn1E_LoggableEvent (OSCTXT* pctxt,
   LoggableEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LoggableEvent (OSCTXT* pctxt, LoggableEvent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LoggableEvent (OSCTXT* pctxt, LoggableEvent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LoggableEvent (OSCTXT* pctxt, LoggableEvent* pvalue);

EXTERN int DOMTest_LoggableEvent (OSCTXT* pctxt, LoggableEvent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LoggableEvent (LoggableEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageBodyContent_sensorDataReport                       */
/*                                                            */
/**************************************************************/

#define TV_MessageBodyContent_sensorDataReport	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_MessageBodyContent_sensorDataReport_choice_list 1

typedef struct EXTERN MessageBodyContent_sensorDataReport {
   int t;
   union {
      /* t = 1 */
      /* List of SensorElements */
      OSRTDList *choice_list;
   } u;
} MessageBodyContent_sensorDataReport;

EXTERN int asn1E_MessageBodyContent_sensorDataReport (OSCTXT* pctxt,
   MessageBodyContent_sensorDataReport *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageBodyContent_sensorDataReport (OSCTXT* pctxt, 
   MessageBodyContent_sensorDataReport *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_MessageBodyContent_sensorDataReport (OSCTXT* pctxt, 
   MessageBodyContent_sensorDataReport* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageBodyContent_sensorDataReport (OSCTXT* pctxt, 
   MessageBodyContent_sensorDataReport* pvalue);

EXTERN int DOMTest_MessageBodyContent_sensorDataReport (OSCTXT* pctxt, 
   MessageBodyContent_sensorDataReport* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageBodyContent_sensorDataReport (
   MessageBodyContent_sensorDataReport* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageBodyContent                                        */
/*                                                            */
/**************************************************************/

#define TV_MessageBodyContent	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_MessageBodyContent_choice     1
#define T_MessageBodyContent_uUVCommand 2
#define T_MessageBodyContent_uGVCommand 3
#define T_MessageBodyContent_uSVCommand 4
#define T_MessageBodyContent_uAVCommand 5
#define T_MessageBodyContent_informationRequest 6
#define T_MessageBodyContent_groupMaintenance 7
#define T_MessageBodyContent_choice_1   8
#define T_MessageBodyContent_vehicleState 9
#define T_MessageBodyContent_choice_2   10
#define T_MessageBodyContent_sensorDataReport 11

typedef struct EXTERN MessageBodyContent {
   int t;
   union {
      /* t = 1 */
      MissionSpecification *choice;
      /* t = 2 */
      UuvScriptCommandsType *uUVCommand;
      /* t = 3 */
      UgvScriptCommandsType *uGVCommand;
      /* t = 4 */
      UsvScriptCommandsType *uSVCommand;
      /* t = 5 */
      UavScriptCommandsType *uAVCommand;
      /* t = 6 */
      InformationRequestElementType *informationRequest;
      /* t = 7 */
      VehicleGroupCompositionElementType *groupMaintenance;
      /* t = 8 */
      VehicleCharacteristicsGroup *choice_1;
      /* t = 9 */
      DiscreteTimeResultsElementType *vehicleState;
      /* t = 10 */
      LoggableEvent *choice_2;
      /* t = 11 */
      MessageBodyContent_sensorDataReport *sensorDataReport;
   } u;
} MessageBodyContent;

EXTERN int asn1E_MessageBodyContent (OSCTXT* pctxt,
   MessageBodyContent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageBodyContent (OSCTXT* pctxt, 
   MessageBodyContent *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageBodyContent (OSCTXT* pctxt, 
   MessageBodyContent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageBodyContent (OSCTXT* pctxt, 
   MessageBodyContent* pvalue);

EXTERN int DOMTest_MessageBodyContent (OSCTXT* pctxt, MessageBodyContent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageBodyContent (MessageBodyContent* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclMessageBodyType                                       */
/*                                                            */
/**************************************************************/

#define TV_AvclMessageBodyType	(TM_UNIV|TM_CONS|0)

typedef MessageBodyContent AvclMessageBodyType;

EXTERN int asn1E_AvclMessageBodyType (OSCTXT* pctxt,
   AvclMessageBodyType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclMessageBodyType (OSCTXT* pctxt, 
   AvclMessageBodyType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclMessageBodyType (OSCTXT* pctxt, 
   AvclMessageBodyType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclMessageBodyType (OSCTXT* pctxt, 
   AvclMessageBodyType* pvalue);

EXTERN int DOMTest_AvclMessageBodyType (OSCTXT* pctxt, AvclMessageBodyType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclMessageBodyType (AvclMessageBodyType* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclMessageType                                           */
/*                                                            */
/**************************************************************/

#define TV_AvclMessageType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AvclMessageType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned transportStatusPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   AvclMessageType_transportStatus transportStatus;
   const OSUTF8CHAR* version;
   AvclMessageHeadType head;
   AvclMessageBodyType body;
} AvclMessageType;

EXTERN int asn1E_AvclMessageType (OSCTXT* pctxt,
   AvclMessageType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclMessageType (OSCTXT* pctxt, AvclMessageType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclMessageType (OSCTXT* pctxt, AvclMessageType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclMessageType (OSCTXT* pctxt, AvclMessageType* pvalue);

EXTERN int DOMTest_AvclMessageType (OSCTXT* pctxt, AvclMessageType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclMessageType (AvclMessageType* pvalue);

/**************************************************************/
/*                                                            */
/*  AVCLMessage                                               */
/*                                                            */
/**************************************************************/

#define TV_AVCLMessage	(TM_UNIV|TM_CONS|16)

typedef AvclMessageType AVCLMessage;

EXTERN int asn1E_AVCLMessage (OSCTXT* pctxt,
   AVCLMessage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AVCLMessage (OSCTXT* pctxt, AVCLMessage *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AVCLMessage (OSCTXT* pctxt, AVCLMessage* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AVCLMessage (OSCTXT* pctxt, AVCLMessage* pvalue);

EXTERN int DOMTest_AVCLMessage (OSCTXT* pctxt, AVCLMessage* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AVCLMessage (AVCLMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  CalendarDaysType                                          */
/*                                                            */
/**************************************************************/

#define TV_CalendarDaysType	(TM_UNIV|TM_PRIM|2)

typedef OSUINT8 CalendarDaysType;

EXTERN int asn1E_CalendarDaysType (OSCTXT* pctxt,
   CalendarDaysType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalendarDaysType (OSCTXT* pctxt, CalendarDaysType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalendarDaysType (OSCTXT* pctxt, CalendarDaysType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalendarDaysType (OSCTXT* pctxt, CalendarDaysType* pvalue);

/**************************************************************/
/*                                                            */
/*  MonthsType                                                */
/*                                                            */
/**************************************************************/

#define TV_MonthsType	(TM_UNIV|TM_PRIM|10)

typedef enum {
   MonthsType_april = 0,
   MonthsType_august = 1,
   MonthsType_december = 2,
   MonthsType_february = 3,
   MonthsType_january = 4,
   MonthsType_july = 5,
   MonthsType_june = 6,
   MonthsType_march = 7,
   MonthsType_may = 8,
   MonthsType_november = 9,
   MonthsType_october = 10,
   MonthsType_september = 11
} MonthsType_Root;

typedef OSUINT32 MonthsType;

EXTERN int asn1E_MonthsType (OSCTXT* pctxt,
   MonthsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MonthsType (OSCTXT* pctxt, MonthsType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MonthsType (OSCTXT* pctxt, MonthsType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MonthsType (OSCTXT* pctxt, MonthsType* pvalue);

EXTERN const OSUTF8CHAR* MonthsType_ToString (OSINT32 value);

EXTERN int MonthsType_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MonthsType* pvalue);

/**************************************************************/
/*                                                            */
/*  ClockHoursType                                            */
/*                                                            */
/**************************************************************/

#define TV_ClockHoursType	(TM_UNIV|TM_PRIM|2)

typedef OSUINT8 ClockHoursType;

EXTERN int asn1E_ClockHoursType (OSCTXT* pctxt,
   ClockHoursType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ClockHoursType (OSCTXT* pctxt, ClockHoursType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ClockHoursType (OSCTXT* pctxt, ClockHoursType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ClockHoursType (OSCTXT* pctxt, ClockHoursType* pvalue);

/**************************************************************/
/*                                                            */
/*  ClockMinutesOrSecondsType                                 */
/*                                                            */
/**************************************************************/

#define TV_ClockMinutesOrSecondsType	(TM_UNIV|TM_PRIM|2)

typedef OSUINT8 ClockMinutesOrSecondsType;

EXTERN int asn1E_ClockMinutesOrSecondsType (OSCTXT* pctxt,
   ClockMinutesOrSecondsType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ClockMinutesOrSecondsType (OSCTXT* pctxt, 
   ClockMinutesOrSecondsType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ClockMinutesOrSecondsType (OSCTXT* pctxt, 
   ClockMinutesOrSecondsType value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ClockMinutesOrSecondsType (OSCTXT* pctxt, 
   ClockMinutesOrSecondsType* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeZoneType                                              */
/*                                                            */
/**************************************************************/

#define TV_TimeZoneType	(TM_UNIV|TM_PRIM|2)

typedef OSINT8 TimeZoneType;

EXTERN int asn1E_TimeZoneType (OSCTXT* pctxt,
   TimeZoneType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TimeZoneType (OSCTXT* pctxt, TimeZoneType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TimeZoneType (OSCTXT* pctxt, TimeZoneType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TimeZoneType (OSCTXT* pctxt, TimeZoneType* pvalue);

/**************************************************************/
/*                                                            */
/*  NonNegativeIntType                                        */
/*                                                            */
/**************************************************************/

#define TV_NonNegativeIntType	(TM_UNIV|TM_PRIM|2)

typedef OSINT32 NonNegativeIntType;

EXTERN int asn1E_NonNegativeIntType (OSCTXT* pctxt,
   NonNegativeIntType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NonNegativeIntType (OSCTXT* pctxt, 
   NonNegativeIntType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NonNegativeIntType (OSCTXT* pctxt, NonNegativeIntType value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NonNegativeIntType (OSCTXT* pctxt, 
   NonNegativeIntType* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclHeadType                                              */
/*                                                            */
/**************************************************************/

#define TV_AvclHeadType	(TM_UNIV|TM_CONS|16)

/* List of MetaDataType */
typedef OSRTDList AvclHeadType;

EXTERN int asn1E_AvclHeadType (OSCTXT* pctxt,
   AvclHeadType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclHeadType (OSCTXT* pctxt, AvclHeadType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclHeadType (OSCTXT* pctxt, AvclHeadType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclHeadType (OSCTXT* pctxt, AvclHeadType* pvalue);

EXTERN int DOMTest_AvclHeadType (OSCTXT* pctxt, AvclHeadType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclHeadType (AvclHeadType* pvalue);

/**************************************************************/
/*                                                            */
/*  UnitsOfMeasureElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_UnitsOfMeasureElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnitsOfMeasureElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* angle;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* distance;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* mass;
   const OSUTF8CHAR* time_;
   NonNegativeScalarType timeStamp;
} UnitsOfMeasureElementType;

EXTERN int asn1E_UnitsOfMeasureElementType (OSCTXT* pctxt,
   UnitsOfMeasureElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnitsOfMeasureElementType (OSCTXT* pctxt, 
   UnitsOfMeasureElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnitsOfMeasureElementType (OSCTXT* pctxt, 
   UnitsOfMeasureElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnitsOfMeasureElementType (OSCTXT* pctxt, 
   UnitsOfMeasureElementType* pvalue);

EXTERN int DOMTest_UnitsOfMeasureElementType (OSCTXT* pctxt, 
   UnitsOfMeasureElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnitsOfMeasureElementType (UnitsOfMeasureElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigurationElementType_choice                           */
/*                                                            */
/**************************************************************/

#define TV_ConfigurationElementType_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ConfigurationElementType_choice_unmannedUnderwaterVehicle 1
#define T_ConfigurationElementType_choice_unmannedSurfaceVehicle 2
#define T_ConfigurationElementType_choice_unmannedGroundVehicle 3
#define T_ConfigurationElementType_choice_unmannedAerialVehicle 4

typedef struct EXTERN ConfigurationElementType_choice {
   int t;
   union {
      /* t = 1 */
      UuvCharacteristicsElementType *unmannedUnderwaterVehicle;
      /* t = 2 */
      UsvCharacteristicsElementType *unmannedSurfaceVehicle;
      /* t = 3 */
      UgvCharacteristicsElementType *unmannedGroundVehicle;
      /* t = 4 */
      UavCharacteristicsElementType *unmannedAerialVehicle;
   } u;
} ConfigurationElementType_choice;

EXTERN int asn1E_ConfigurationElementType_choice (OSCTXT* pctxt,
   ConfigurationElementType_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfigurationElementType_choice (OSCTXT* pctxt, 
   ConfigurationElementType_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfigurationElementType_choice (OSCTXT* pctxt, 
   ConfigurationElementType_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfigurationElementType_choice (OSCTXT* pctxt, 
   ConfigurationElementType_choice* pvalue);

EXTERN int DOMTest_ConfigurationElementType_choice (OSCTXT* pctxt, 
   ConfigurationElementType_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConfigurationElementType_choice (
   ConfigurationElementType_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfigurationElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_ConfigurationElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConfigurationElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   ConfigurationElementType_choice choice;
} ConfigurationElementType;

EXTERN int asn1E_ConfigurationElementType (OSCTXT* pctxt,
   ConfigurationElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfigurationElementType (OSCTXT* pctxt, 
   ConfigurationElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfigurationElementType (OSCTXT* pctxt, 
   ConfigurationElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfigurationElementType (OSCTXT* pctxt, 
   ConfigurationElementType* pvalue);

EXTERN int DOMTest_ConfigurationElementType (OSCTXT* pctxt, 
   ConfigurationElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConfigurationElementType (ConfigurationElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionPreparationElementType                             */
/*                                                            */
/**************************************************************/

#define TV_MissionPreparationElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MissionPreparationElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned geoOriginPresent : 1;
      unsigned configurationPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   UnitsOfMeasureElementType unitsOfMeasure;
   GeoOriginElementType geoOrigin;
   ConfigurationElementType configuration;
   MissionSpecification choice;
} MissionPreparationElementType;

EXTERN int asn1E_MissionPreparationElementType (OSCTXT* pctxt,
   MissionPreparationElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MissionPreparationElementType (OSCTXT* pctxt, 
   MissionPreparationElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MissionPreparationElementType (OSCTXT* pctxt, 
   MissionPreparationElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MissionPreparationElementType (OSCTXT* pctxt, 
   MissionPreparationElementType* pvalue);

EXTERN int DOMTest_MissionPreparationElementType (OSCTXT* pctxt, 
   MissionPreparationElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MissionPreparationElementType (
   MissionPreparationElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  EventLogElementType                                       */
/*                                                            */
/**************************************************************/

#define TV_EventLogElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EventLogElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   /* List of LoggableEvent */
   OSRTDList choice_list;
} EventLogElementType;

EXTERN int asn1E_EventLogElementType (OSCTXT* pctxt,
   EventLogElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EventLogElementType (OSCTXT* pctxt, 
   EventLogElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EventLogElementType (OSCTXT* pctxt, 
   EventLogElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EventLogElementType (OSCTXT* pctxt, 
   EventLogElementType* pvalue);

EXTERN int DOMTest_EventLogElementType (OSCTXT* pctxt, EventLogElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EventLogElementType (EventLogElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  DateTimeGroupElementType                                  */
/*                                                            */
/**************************************************************/

#define TV_DateTimeGroupElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DateTimeGroupElementType {
   struct {
      unsigned descriptionPresent : 1;
   } m;
   CalendarDaysType day;
   const OSUTF8CHAR* description;
   ClockHoursType hour;
   ClockMinutesOrSecondsType minute;
   MonthsType month;
   ClockMinutesOrSecondsType second;
   TimeZoneType timeZone;
   PositiveIntType year;
} DateTimeGroupElementType;

EXTERN int asn1E_DateTimeGroupElementType (OSCTXT* pctxt,
   DateTimeGroupElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateTimeGroupElementType (OSCTXT* pctxt, 
   DateTimeGroupElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateTimeGroupElementType (OSCTXT* pctxt, 
   DateTimeGroupElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateTimeGroupElementType (OSCTXT* pctxt, 
   DateTimeGroupElementType* pvalue);

EXTERN int DOMTest_DateTimeGroupElementType (OSCTXT* pctxt, 
   DateTimeGroupElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateTimeGroupElementType (DateTimeGroupElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionResultsElementType_element                         */
/*                                                            */
/**************************************************************/

#define TV_MissionResultsElementType_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_MissionResultsElementType_element_sampledResults 1

typedef struct EXTERN MissionResultsElementType_element {
   int t;
   union {
      /* t = 1 */
      DiscreteTimeResultsElementType *sampledResults;
   } u;
} MissionResultsElementType_element;

EXTERN int asn1E_MissionResultsElementType_element (OSCTXT* pctxt,
   MissionResultsElementType_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MissionResultsElementType_element (OSCTXT* pctxt, 
   MissionResultsElementType_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MissionResultsElementType_element (OSCTXT* pctxt, 
   MissionResultsElementType_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MissionResultsElementType_element (OSCTXT* pctxt, 
   MissionResultsElementType_element* pvalue);

EXTERN int DOMTest_MissionResultsElementType_element (OSCTXT* pctxt, 
   MissionResultsElementType_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MissionResultsElementType_element (
   MissionResultsElementType_element* pvalue);

/**************************************************************/
/*                                                            */
/*  MissionResultsElementType                                 */
/*                                                            */
/**************************************************************/

#define TV_MissionResultsElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MissionResultsElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned missionStartTimePresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   DateTimeGroupElementType missionStartTime;
   /* List of MissionResultsElementType_element */
   OSRTDList choice_list;
} MissionResultsElementType;

EXTERN int asn1E_MissionResultsElementType (OSCTXT* pctxt,
   MissionResultsElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MissionResultsElementType (OSCTXT* pctxt, 
   MissionResultsElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MissionResultsElementType (OSCTXT* pctxt, 
   MissionResultsElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MissionResultsElementType (OSCTXT* pctxt, 
   MissionResultsElementType* pvalue);

EXTERN int DOMTest_MissionResultsElementType (OSCTXT* pctxt, 
   MissionResultsElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MissionResultsElementType (MissionResultsElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclBodyType                                              */
/*                                                            */
/**************************************************************/

#define TV_AvclBodyType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AvclBodyType {
   struct {
      unsigned eventLogPresent : 1;
      unsigned missionResultsPresent : 1;
   } m;
   struct  {
      OSUINT32 n;
      OSUINT8 elem[3];
   } _order;
   MissionPreparationElementType missionPreparation;
   EventLogElementType eventLog;
   MissionResultsElementType missionResults;
} AvclBodyType;

EXTERN int asn1E_AvclBodyType (OSCTXT* pctxt,
   AvclBodyType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclBodyType (OSCTXT* pctxt, AvclBodyType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclBodyType (OSCTXT* pctxt, AvclBodyType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclBodyType (OSCTXT* pctxt, AvclBodyType* pvalue);

EXTERN int DOMTest_AvclBodyType (OSCTXT* pctxt, AvclBodyType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclBodyType (AvclBodyType* pvalue);

/**************************************************************/
/*                                                            */
/*  AVCL                                                      */
/*                                                            */
/**************************************************************/

#define TV_AVCL	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AVCL {
   struct {
      unsigned datePresent : 1;
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned vehicleTypePresent : 1;
      unsigned headPresent : 1;
   } m;
   const char* date;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSUINT16 vehicleID;
   const OSUTF8CHAR* vehicleType;
   OSREAL version;
   AvclHeadType head;
   AvclBodyType body;
} AVCL;

EXTERN int asn1E_AVCL (OSCTXT* pctxt,
   AVCL *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AVCL (OSCTXT* pctxt, AVCL *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_AVCL (OSCTXT* pctxt, AVCL* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AVCL (OSCTXT* pctxt, AVCL* pvalue);

EXTERN int DOMTest_AVCL (OSCTXT* pctxt, AVCL* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AVCL (AVCL* pvalue);

/**************************************************************/
/*                                                            */
/*  AvclMessageListBodyType                                   */
/*                                                            */
/**************************************************************/

#define TV_AvclMessageListBodyType	(TM_UNIV|TM_CONS|16)

/* List of AvclMessageType */
typedef OSRTDList AvclMessageListBodyType;

EXTERN int asn1E_AvclMessageListBodyType (OSCTXT* pctxt,
   AvclMessageListBodyType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AvclMessageListBodyType (OSCTXT* pctxt, 
   AvclMessageListBodyType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AvclMessageListBodyType (OSCTXT* pctxt, 
   AvclMessageListBodyType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AvclMessageListBodyType (OSCTXT* pctxt, 
   AvclMessageListBodyType* pvalue);

EXTERN int DOMTest_AvclMessageListBodyType (OSCTXT* pctxt, 
   AvclMessageListBodyType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AvclMessageListBodyType (AvclMessageListBodyType* pvalue);

/**************************************************************/
/*                                                            */
/*  AVCLMessageList                                           */
/*                                                            */
/**************************************************************/

#define TV_AVCLMessageList	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AVCLMessageList {
   struct {
      unsigned datePresent : 1;
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
      unsigned vehicleTypePresent : 1;
      unsigned headPresent : 1;
   } m;
   const char* date;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSUINT16 vehicleID;
   const OSUTF8CHAR* vehicleType;
   OSREAL version;
   AvclHeadType head;
   AvclMessageListBodyType body;
} AVCLMessageList;

EXTERN int asn1E_AVCLMessageList (OSCTXT* pctxt,
   AVCLMessageList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AVCLMessageList (OSCTXT* pctxt, AVCLMessageList *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AVCLMessageList (OSCTXT* pctxt, AVCLMessageList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AVCLMessageList (OSCTXT* pctxt, AVCLMessageList* pvalue);

EXTERN int DOMTest_AVCLMessageList (OSCTXT* pctxt, AVCLMessageList* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AVCLMessageList (AVCLMessageList* pvalue);

/**************************************************************/
/*                                                            */
/*  NonNegativeScalarElementType                              */
/*                                                            */
/**************************************************************/

#define TV_NonNegativeScalarElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NonNegativeScalarElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   NonNegativeScalarType value;
} NonNegativeScalarElementType;

EXTERN int asn1E_NonNegativeScalarElementType (OSCTXT* pctxt,
   NonNegativeScalarElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NonNegativeScalarElementType (OSCTXT* pctxt, 
   NonNegativeScalarElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NonNegativeScalarElementType (OSCTXT* pctxt, 
   NonNegativeScalarElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NonNegativeScalarElementType (OSCTXT* pctxt, 
   NonNegativeScalarElementType* pvalue);

EXTERN int DOMTest_NonNegativeScalarElementType (OSCTXT* pctxt, 
   NonNegativeScalarElementType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NonNegativeScalarElementType (
   NonNegativeScalarElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  IntegerElementType                                        */
/*                                                            */
/**************************************************************/

#define TV_IntegerElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IntegerElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   OSINT32 value;
} IntegerElementType;

EXTERN int asn1E_IntegerElementType (OSCTXT* pctxt,
   IntegerElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IntegerElementType (OSCTXT* pctxt, 
   IntegerElementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IntegerElementType (OSCTXT* pctxt, 
   IntegerElementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IntegerElementType (OSCTXT* pctxt, 
   IntegerElementType* pvalue);

EXTERN int DOMTest_IntegerElementType (OSCTXT* pctxt, IntegerElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IntegerElementType (IntegerElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  TokenElementType                                          */
/*                                                            */
/**************************************************************/

#define TV_TokenElementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TokenElementType {
   struct {
      unsigned descriptionPresent : 1;
      unsigned idPresent : 1;
      unsigned timeStampPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   const OSUTF8CHAR* id;
   NonNegativeScalarType timeStamp;
   const OSUTF8CHAR* value;
} TokenElementType;

EXTERN int asn1E_TokenElementType (OSCTXT* pctxt,
   TokenElementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TokenElementType (OSCTXT* pctxt, TokenElementType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TokenElementType (OSCTXT* pctxt, TokenElementType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TokenElementType (OSCTXT* pctxt, TokenElementType* pvalue);

EXTERN int DOMTest_TokenElementType (OSCTXT* pctxt, TokenElementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TokenElementType (TokenElementType* pvalue);

/**************************************************************/
/*                                                            */
/*  TelemetryElement                                          */
/*                                                            */
/**************************************************************/

#define TV_TelemetryElement	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_TelemetryElement_uUVTelemetry 1
#define T_TelemetryElement_uSVTelemetry 2
#define T_TelemetryElement_uGVTelemetry 3
#define T_TelemetryElement_uAVTelemetry 4

typedef struct EXTERN TelemetryElement {
   int t;
   union {
      /* t = 1 */
      UuvTelemetryElementType *uUVTelemetry;
      /* t = 2 */
      UsvTelemetryElementType *uSVTelemetry;
      /* t = 3 */
      UgvTelemetryElementType *uGVTelemetry;
      /* t = 4 */
      UavTelemetryElementType *uAVTelemetry;
   } u;
} TelemetryElement;

EXTERN int asn1E_TelemetryElement (OSCTXT* pctxt,
   TelemetryElement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TelemetryElement (OSCTXT* pctxt, TelemetryElement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TelemetryElement (OSCTXT* pctxt, TelemetryElement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TelemetryElement (OSCTXT* pctxt, TelemetryElement* pvalue);

EXTERN int DOMTest_TelemetryElement (OSCTXT* pctxt, TelemetryElement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TelemetryElement (TelemetryElement* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
EXTERN int XmlEnc_AVCLMessage_PDU (OSCTXT* pctxt, AVCLMessage* pvalue);

EXTERN int XmlDec_AVCLMessage_PDU (OSCTXT* pctxt, AVCLMessage* pvalue);

EXTERN int XmlEnc_NonNegativeIntType_PDU (OSCTXT* pctxt, NonNegativeIntType value);

EXTERN int XmlDec_NonNegativeIntType_PDU (OSCTXT* pctxt, NonNegativeIntType* pvalue);

EXTERN int XmlEnc_AVCL_PDU (OSCTXT* pctxt, AVCL* pvalue);

EXTERN int XmlDec_AVCL_PDU (OSCTXT* pctxt, AVCL* pvalue);

EXTERN int XmlEnc_AVCLMessageList_PDU (OSCTXT* pctxt, AVCLMessageList* pvalue);

EXTERN int XmlDec_AVCLMessageList_PDU (OSCTXT* pctxt, AVCLMessageList* pvalue);

EXTERN int XmlEnc_NonNegativeScalarElementType_PDU (OSCTXT* pctxt, NonNegativeScalarElementType* pvalue);

EXTERN int XmlDec_NonNegativeScalarElementType_PDU (OSCTXT* pctxt, NonNegativeScalarElementType* pvalue);

EXTERN int XmlEnc_IntegerElementType_PDU (OSCTXT* pctxt, IntegerElementType* pvalue);

EXTERN int XmlDec_IntegerElementType_PDU (OSCTXT* pctxt, IntegerElementType* pvalue);

EXTERN int XmlEnc_TokenElementType_PDU (OSCTXT* pctxt, TokenElementType* pvalue);

EXTERN int XmlDec_TokenElementType_PDU (OSCTXT* pctxt, TokenElementType* pvalue);

EXTERN int XmlEnc_TelemetryElement_PDU (OSCTXT* pctxt, TelemetryElement* pvalue);

EXTERN int XmlDec_TelemetryElement_PDU (OSCTXT* pctxt, TelemetryElement* pvalue);

#ifdef __cplusplus
}
#endif

#endif
