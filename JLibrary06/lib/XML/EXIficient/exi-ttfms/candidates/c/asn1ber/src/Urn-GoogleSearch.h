/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef URN_GOOGLESEARCH_H
#define URN_GOOGLESEARCH_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"
#include "Soap-1-1.h"

/**
 * Header file for ASN.1 module Urn-GoogleSearch
 */
/**************************************************************/
/*                                                            */
/*  DirectoryCategory                                         */
/*                                                            */
/**************************************************************/

#define TV_DirectoryCategory	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DirectoryCategory {
   struct  {
      OSUINT32 n;
      OSUINT8 elem[2];
   } _order;
   const OSUTF8CHAR* fullViewableName;
   const OSUTF8CHAR* specialEncoding;
} DirectoryCategory;

EXTERN int asn1E_DirectoryCategory (OSCTXT* pctxt,
   DirectoryCategory *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DirectoryCategory (OSCTXT* pctxt, DirectoryCategory *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DirectoryCategory (OSCTXT* pctxt, DirectoryCategory* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DirectoryCategory (OSCTXT* pctxt, DirectoryCategory* pvalue)
   ;

EXTERN int DOMTest_DirectoryCategory (OSCTXT* pctxt, DirectoryCategory* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DirectoryCategory (DirectoryCategory* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultElement                                             */
/*                                                            */
/**************************************************************/

#define TV_ResultElement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ResultElement {
   struct  {
      OSUINT32 n;
      OSUINT8 elem[9];
   } _order;
   const OSUTF8CHAR* summary;
   const OSUTF8CHAR* uRL;
   const OSUTF8CHAR* snippet;
   const OSUTF8CHAR* title;
   const OSUTF8CHAR* cachedSize;
   OSBOOL relatedInformationPresent;
   const OSUTF8CHAR* hostName;
   DirectoryCategory directoryCategory;
   const OSUTF8CHAR* directoryTitle;
} ResultElement;

EXTERN int asn1E_ResultElement (OSCTXT* pctxt,
   ResultElement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResultElement (OSCTXT* pctxt, ResultElement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResultElement (OSCTXT* pctxt, ResultElement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResultElement (OSCTXT* pctxt, ResultElement* pvalue);

EXTERN int DOMTest_ResultElement (OSCTXT* pctxt, ResultElement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResultElement (ResultElement* pvalue);

/**************************************************************/
/*                                                            */
/*  ResultElementArray                                        */
/*                                                            */
/**************************************************************/

#define TV_ResultElementArray	(TM_UNIV|TM_CONS|16)

/* List of ResultElement */
typedef OSRTDList ResultElementArray;

EXTERN int asn1E_ResultElementArray (OSCTXT* pctxt,
   ResultElementArray *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResultElementArray (OSCTXT* pctxt, 
   ResultElementArray *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResultElementArray (OSCTXT* pctxt, 
   ResultElementArray* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResultElementArray (OSCTXT* pctxt, 
   ResultElementArray* pvalue);

EXTERN int DOMTest_ResultElementArray (OSCTXT* pctxt, ResultElementArray* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResultElementArray (ResultElementArray* pvalue);

/**************************************************************/
/*                                                            */
/*  DirectoryCategoryArray                                    */
/*                                                            */
/**************************************************************/

#define TV_DirectoryCategoryArray	(TM_UNIV|TM_CONS|16)

/* List of DirectoryCategory */
typedef OSRTDList DirectoryCategoryArray;

EXTERN int asn1E_DirectoryCategoryArray (OSCTXT* pctxt,
   DirectoryCategoryArray *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DirectoryCategoryArray (OSCTXT* pctxt, 
   DirectoryCategoryArray *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DirectoryCategoryArray (OSCTXT* pctxt, 
   DirectoryCategoryArray* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DirectoryCategoryArray (OSCTXT* pctxt, 
   DirectoryCategoryArray* pvalue);

EXTERN int DOMTest_DirectoryCategoryArray (OSCTXT* pctxt, 
   DirectoryCategoryArray* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DirectoryCategoryArray (DirectoryCategoryArray* pvalue);

/**************************************************************/
/*                                                            */
/*  GoogleSearchResult                                        */
/*                                                            */
/**************************************************************/

#define TV_GoogleSearchResult	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN GoogleSearchResult {
   struct  {
      OSUINT32 n;
      OSUINT8 elem[11];
   } _order;
   OSBOOL documentFiltering;
   const OSUTF8CHAR* searchComments;
   OSINT32 estimatedTotalResultsCount;
   OSBOOL estimateIsExact;
   ResultElementArray resultElements;
   const OSUTF8CHAR* searchQuery;
   OSINT32 startIndex;
   OSINT32 endIndex;
   const OSUTF8CHAR* searchTips;
   DirectoryCategoryArray directoryCategories;
   OSREAL searchTime;
} GoogleSearchResult;

EXTERN int asn1E_GoogleSearchResult (OSCTXT* pctxt,
   GoogleSearchResult *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GoogleSearchResult (OSCTXT* pctxt, 
   GoogleSearchResult *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_GoogleSearchResult (OSCTXT* pctxt, 
   GoogleSearchResult* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GoogleSearchResult (OSCTXT* pctxt, 
   GoogleSearchResult* pvalue);

EXTERN int DOMTest_GoogleSearchResult (OSCTXT* pctxt, GoogleSearchResult* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GoogleSearchResult (GoogleSearchResult* pvalue);

/**************************************************************/
/*                                                            */
/*  DoGoogleSearchResponse                                    */
/*                                                            */
/**************************************************************/

#define TV_DoGoogleSearchResponse	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DoGoogleSearchResponse {
   struct {
      unsigned encodingStylePresent : 1;
   } m;
   EncodingStyle encodingStyle;
   GoogleSearchResult return_;
} DoGoogleSearchResponse;

EXTERN int asn1E_DoGoogleSearchResponse (OSCTXT* pctxt,
   DoGoogleSearchResponse *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DoGoogleSearchResponse (OSCTXT* pctxt, 
   DoGoogleSearchResponse *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DoGoogleSearchResponse (OSCTXT* pctxt, 
   DoGoogleSearchResponse* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DoGoogleSearchResponse (OSCTXT* pctxt, 
   DoGoogleSearchResponse* pvalue);

EXTERN int DOMTest_DoGoogleSearchResponse (OSCTXT* pctxt, 
   DoGoogleSearchResponse* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DoGoogleSearchResponse (DoGoogleSearchResponse* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
EXTERN int XmlEnc_DoGoogleSearchResponse_PDU (OSCTXT* pctxt, DoGoogleSearchResponse* pvalue);

EXTERN int XmlDec_DoGoogleSearchResponse_PDU (OSCTXT* pctxt, DoGoogleSearchResponse* pvalue);

#ifdef __cplusplus
}
#endif

#endif
