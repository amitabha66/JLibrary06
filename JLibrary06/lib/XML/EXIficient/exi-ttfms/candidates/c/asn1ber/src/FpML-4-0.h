/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef FPML_4_0_H
#define FPML_4_0_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"
#include "Xmldsig.h"

/**
 * Header file for ASN.1 module FpML-4-0
 */
/**************************************************************/
/*                                                            */
/*  ProductType                                               */
/*                                                            */
/**************************************************************/

#define TV_ProductType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ProductType {
   struct {
      unsigned productTypeSchemePresent : 1;
   } m;
   const OSUTF8CHAR* productTypeScheme;
   const OSUTF8CHAR* base;
} ProductType;

EXTERN int asn1E_ProductType (OSCTXT* pctxt,
   ProductType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ProductType (OSCTXT* pctxt, ProductType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ProductType (OSCTXT* pctxt, ProductType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProductType (OSCTXT* pctxt, ProductType* pvalue);

EXTERN int DOMTest_ProductType (OSCTXT* pctxt, ProductType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ProductType (ProductType* pvalue);

/**************************************************************/
/*                                                            */
/*  ProductId                                                 */
/*                                                            */
/**************************************************************/

#define TV_ProductId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ProductId {
   const OSUTF8CHAR* base;
} ProductId;

EXTERN int asn1E_ProductId (OSCTXT* pctxt,
   ProductId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ProductId (OSCTXT* pctxt, ProductId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ProductId (OSCTXT* pctxt, ProductId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProductId (OSCTXT* pctxt, ProductId* pvalue);

EXTERN int DOMTest_ProductId (OSCTXT* pctxt, ProductId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ProductId (ProductId* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyReference                                            */
/*                                                            */
/**************************************************************/

#define TV_PartyReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyReference {
   const OSUTF8CHAR* href;
} PartyReference;

EXTERN int asn1E_PartyReference (OSCTXT* pctxt,
   PartyReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyReference (OSCTXT* pctxt, PartyReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartyReference (OSCTXT* pctxt, PartyReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyReference (OSCTXT* pctxt, PartyReference* pvalue);

EXTERN int DOMTest_PartyReference (OSCTXT* pctxt, PartyReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyReference (PartyReference* pvalue);

/**************************************************************/
/*                                                            */
/*  BuyerSeller_model                                         */
/*                                                            */
/**************************************************************/

#define TV_BuyerSeller_model	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BuyerSeller_model {
   PartyReference buyerPartyReference;
   PartyReference sellerPartyReference;
} BuyerSeller_model;

EXTERN int asn1E_BuyerSeller_model (OSCTXT* pctxt,
   BuyerSeller_model *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BuyerSeller_model (OSCTXT* pctxt, BuyerSeller_model *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BuyerSeller_model (OSCTXT* pctxt, BuyerSeller_model* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BuyerSeller_model (OSCTXT* pctxt, BuyerSeller_model* pvalue)
   ;

EXTERN int DOMTest_BuyerSeller_model (OSCTXT* pctxt, BuyerSeller_model* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BuyerSeller_model (BuyerSeller_model* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessCenter                                            */
/*                                                            */
/**************************************************************/

#define TV_BusinessCenter	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessCenter {
   struct {
      unsigned businessCenterSchemePresent : 1;
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* businessCenterScheme;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* base;
} BusinessCenter;

EXTERN int asn1E_BusinessCenter (OSCTXT* pctxt,
   BusinessCenter *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessCenter (OSCTXT* pctxt, BusinessCenter *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessCenter (OSCTXT* pctxt, BusinessCenter* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessCenter (OSCTXT* pctxt, BusinessCenter* pvalue);

EXTERN int DOMTest_BusinessCenter (OSCTXT* pctxt, BusinessCenter* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessCenter (BusinessCenter* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessCenterTime                                        */
/*                                                            */
/**************************************************************/

#define TV_BusinessCenterTime	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessCenterTime {
   const char* hourMinuteTime;
   BusinessCenter businessCenter;
} BusinessCenterTime;

EXTERN int asn1E_BusinessCenterTime (OSCTXT* pctxt,
   BusinessCenterTime *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessCenterTime (OSCTXT* pctxt, 
   BusinessCenterTime *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessCenterTime (OSCTXT* pctxt, 
   BusinessCenterTime* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessCenterTime (OSCTXT* pctxt, 
   BusinessCenterTime* pvalue);

EXTERN int DOMTest_BusinessCenterTime (OSCTXT* pctxt, BusinessCenterTime* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessCenterTime (BusinessCenterTime* pvalue);

/**************************************************************/
/*                                                            */
/*  CutName                                                   */
/*                                                            */
/**************************************************************/

#define TV_CutName	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CutName {
   struct {
      unsigned cutNameSchemePresent : 1;
   } m;
   const OSUTF8CHAR* cutNameScheme;
   const OSUTF8CHAR* base;
} CutName;

EXTERN int asn1E_CutName (OSCTXT* pctxt,
   CutName *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CutName (OSCTXT* pctxt, CutName *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_CutName (OSCTXT* pctxt, CutName* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CutName (OSCTXT* pctxt, CutName* pvalue);

EXTERN int DOMTest_CutName (OSCTXT* pctxt, CutName* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CutName (CutName* pvalue);

/**************************************************************/
/*                                                            */
/*  ExpiryDateTime                                            */
/*                                                            */
/**************************************************************/

#define TV_ExpiryDateTime	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExpiryDateTime {
   struct {
      unsigned cutNamePresent : 1;
   } m;
   const char* expiryDate;
   BusinessCenterTime expiryTime;
   CutName cutName;
} ExpiryDateTime;

EXTERN int asn1E_ExpiryDateTime (OSCTXT* pctxt,
   ExpiryDateTime *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExpiryDateTime (OSCTXT* pctxt, ExpiryDateTime *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExpiryDateTime (OSCTXT* pctxt, ExpiryDateTime* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExpiryDateTime (OSCTXT* pctxt, ExpiryDateTime* pvalue);

EXTERN int DOMTest_ExpiryDateTime (OSCTXT* pctxt, ExpiryDateTime* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExpiryDateTime (ExpiryDateTime* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseStyleEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_ExerciseStyleEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ExerciseStyleEnum_american = 0,
   ExerciseStyleEnum_european = 1
} ExerciseStyleEnum_Root;

typedef OSUINT32 ExerciseStyleEnum;

EXTERN int asn1E_ExerciseStyleEnum (OSCTXT* pctxt,
   ExerciseStyleEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseStyleEnum (OSCTXT* pctxt, ExerciseStyleEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseStyleEnum (OSCTXT* pctxt, ExerciseStyleEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseStyleEnum (OSCTXT* pctxt, ExerciseStyleEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* ExerciseStyleEnum_ToString (OSINT32 value);

EXTERN int ExerciseStyleEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ExerciseStyleEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  PayerReceiver_model                                       */
/*                                                            */
/**************************************************************/

#define TV_PayerReceiver_model	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PayerReceiver_model {
   PartyReference payerPartyReference;
   PartyReference receiverPartyReference;
} PayerReceiver_model;

EXTERN int asn1E_PayerReceiver_model (OSCTXT* pctxt,
   PayerReceiver_model *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PayerReceiver_model (OSCTXT* pctxt, 
   PayerReceiver_model *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PayerReceiver_model (OSCTXT* pctxt, 
   PayerReceiver_model* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PayerReceiver_model (OSCTXT* pctxt, 
   PayerReceiver_model* pvalue);

EXTERN int DOMTest_PayerReceiver_model (OSCTXT* pctxt, PayerReceiver_model* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PayerReceiver_model (PayerReceiver_model* pvalue);

/**************************************************************/
/*                                                            */
/*  Currency                                                  */
/*                                                            */
/**************************************************************/

#define TV_Currency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Currency {
   struct {
      unsigned currencySchemePresent : 1;
   } m;
   const OSUTF8CHAR* currencyScheme;
   const OSUTF8CHAR* base;
} Currency;

EXTERN int asn1E_Currency (OSCTXT* pctxt,
   Currency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Currency (OSCTXT* pctxt, Currency *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Currency (OSCTXT* pctxt, Currency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Currency (OSCTXT* pctxt, Currency* pvalue);

EXTERN int DOMTest_Currency (OSCTXT* pctxt, Currency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Currency (Currency* pvalue);

/**************************************************************/
/*                                                            */
/*  Money                                                     */
/*                                                            */
/**************************************************************/

#define TV_Money	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Money {
   Currency currency;
   OSREAL amount;
} Money;

EXTERN int asn1E_Money (OSCTXT* pctxt,
   Money *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Money (OSCTXT* pctxt, Money *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Money (OSCTXT* pctxt, Money* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Money (OSCTXT* pctxt, Money* pvalue);

EXTERN int DOMTest_Money (OSCTXT* pctxt, Money* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Money (Money* pvalue);

/**************************************************************/
/*                                                            */
/*  PayoutEnum                                                */
/*                                                            */
/**************************************************************/

#define TV_PayoutEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PayoutEnum_deferred = 0,
   PayoutEnum_immediate = 1
} PayoutEnum_Root;

typedef OSUINT32 PayoutEnum;

EXTERN int asn1E_PayoutEnum (OSCTXT* pctxt,
   PayoutEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PayoutEnum (OSCTXT* pctxt, PayoutEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PayoutEnum (OSCTXT* pctxt, PayoutEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PayoutEnum (OSCTXT* pctxt, PayoutEnum* pvalue);

EXTERN const OSUTF8CHAR* PayoutEnum_ToString (OSINT32 value);

EXTERN int PayoutEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PayoutEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  StandardSettlementStyleEnum                               */
/*                                                            */
/**************************************************************/

#define TV_StandardSettlementStyleEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   StandardSettlementStyleEnum_net = 0,
   StandardSettlementStyleEnum_standard = 1,
   StandardSettlementStyleEnum_standardAndNet = 2
} StandardSettlementStyleEnum_Root;

typedef OSUINT32 StandardSettlementStyleEnum;

EXTERN int asn1E_StandardSettlementStyleEnum (OSCTXT* pctxt,
   StandardSettlementStyleEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StandardSettlementStyleEnum (OSCTXT* pctxt, 
   StandardSettlementStyleEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StandardSettlementStyleEnum (OSCTXT* pctxt, 
   StandardSettlementStyleEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StandardSettlementStyleEnum (OSCTXT* pctxt, 
   StandardSettlementStyleEnum* pvalue);

EXTERN const OSUTF8CHAR* StandardSettlementStyleEnum_ToString (OSINT32 value);

EXTERN int StandardSettlementStyleEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, StandardSettlementStyleEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementMethod                                          */
/*                                                            */
/**************************************************************/

#define TV_SettlementMethod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SettlementMethod {
   struct {
      unsigned settlementMethodSchemePresent : 1;
   } m;
   const OSUTF8CHAR* settlementMethodScheme;
   const OSUTF8CHAR* base;
} SettlementMethod;

EXTERN int asn1E_SettlementMethod (OSCTXT* pctxt,
   SettlementMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementMethod (OSCTXT* pctxt, SettlementMethod *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementMethod (OSCTXT* pctxt, SettlementMethod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementMethod (OSCTXT* pctxt, SettlementMethod* pvalue);

EXTERN int DOMTest_SettlementMethod (OSCTXT* pctxt, SettlementMethod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementMethod (SettlementMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingId                                                 */
/*                                                            */
/**************************************************************/

#define TV_RoutingId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RoutingId {
   struct {
      unsigned routingIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* routingIdScheme;
   const OSUTF8CHAR* base;
} RoutingId;

EXTERN int asn1E_RoutingId (OSCTXT* pctxt,
   RoutingId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RoutingId (OSCTXT* pctxt, RoutingId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RoutingId (OSCTXT* pctxt, RoutingId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoutingId (OSCTXT* pctxt, RoutingId* pvalue);

EXTERN int DOMTest_RoutingId (OSCTXT* pctxt, RoutingId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RoutingId (RoutingId* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingIds                                                */
/*                                                            */
/**************************************************************/

#define TV_RoutingIds	(TM_UNIV|TM_CONS|16)

/* List of RoutingId */
typedef OSRTDList RoutingIds;

EXTERN int asn1E_RoutingIds (OSCTXT* pctxt,
   RoutingIds *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RoutingIds (OSCTXT* pctxt, RoutingIds *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RoutingIds (OSCTXT* pctxt, RoutingIds* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoutingIds (OSCTXT* pctxt, RoutingIds* pvalue);

EXTERN int DOMTest_RoutingIds (OSCTXT* pctxt, RoutingIds* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RoutingIds (RoutingIds* pvalue);

/**************************************************************/
/*                                                            */
/*  StreetAddress                                             */
/*                                                            */
/**************************************************************/

#define TV_StreetAddress	(TM_UNIV|TM_CONS|16)

/* List of const OSUTF8CHAR* */
typedef OSRTDList StreetAddress;

EXTERN int asn1E_StreetAddress (OSCTXT* pctxt,
   StreetAddress *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StreetAddress (OSCTXT* pctxt, StreetAddress *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_StreetAddress (OSCTXT* pctxt, StreetAddress* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StreetAddress (OSCTXT* pctxt, StreetAddress* pvalue);

EXTERN int DOMTest_StreetAddress (OSCTXT* pctxt, StreetAddress* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StreetAddress (StreetAddress* pvalue);

/**************************************************************/
/*                                                            */
/*  Country                                                   */
/*                                                            */
/**************************************************************/

#define TV_Country	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Country {
   struct {
      unsigned countrySchemePresent : 1;
   } m;
   const OSUTF8CHAR* countryScheme;
   const OSUTF8CHAR* base;
} Country;

EXTERN int asn1E_Country (OSCTXT* pctxt,
   Country *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Country (OSCTXT* pctxt, Country *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Country (OSCTXT* pctxt, Country* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Country (OSCTXT* pctxt, Country* pvalue);

EXTERN int DOMTest_Country (OSCTXT* pctxt, Country* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Country (Country* pvalue);

/**************************************************************/
/*                                                            */
/*  Address                                                   */
/*                                                            */
/**************************************************************/

#define TV_Address	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Address {
   struct {
      unsigned streetAddressPresent : 1;
      unsigned cityPresent : 1;
      unsigned statePresent : 1;
      unsigned countryPresent : 1;
      unsigned postalCodePresent : 1;
   } m;
   StreetAddress streetAddress;
   const OSUTF8CHAR* city;
   const OSUTF8CHAR* state;
   Country country;
   const OSUTF8CHAR* postalCode;
} Address;

EXTERN int asn1E_Address (OSCTXT* pctxt,
   Address *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Address (OSCTXT* pctxt, Address *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Address (OSCTXT* pctxt, Address* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Address (OSCTXT* pctxt, Address* pvalue);

EXTERN int DOMTest_Address (OSCTXT* pctxt, Address* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Address (Address* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingExplicitDetails                                    */
/*                                                            */
/**************************************************************/

#define TV_RoutingExplicitDetails	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RoutingExplicitDetails {
   struct {
      unsigned routingAddressPresent : 1;
      unsigned routingAccountNumberPresent : 1;
   } m;
   const OSUTF8CHAR* routingName;
   Address routingAddress;
   const OSUTF8CHAR* routingAccountNumber;
   /* List of const OSUTF8CHAR* */
   OSRTDList routingReferenceText_list;
} RoutingExplicitDetails;

EXTERN int asn1E_RoutingExplicitDetails (OSCTXT* pctxt,
   RoutingExplicitDetails *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RoutingExplicitDetails (OSCTXT* pctxt, 
   RoutingExplicitDetails *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RoutingExplicitDetails (OSCTXT* pctxt, 
   RoutingExplicitDetails* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoutingExplicitDetails (OSCTXT* pctxt, 
   RoutingExplicitDetails* pvalue);

EXTERN int DOMTest_RoutingExplicitDetails (OSCTXT* pctxt, 
   RoutingExplicitDetails* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RoutingExplicitDetails (RoutingExplicitDetails* pvalue);

/**************************************************************/
/*                                                            */
/*  RoutingIdsAndExplicitDetails                              */
/*                                                            */
/**************************************************************/

#define TV_RoutingIdsAndExplicitDetails	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RoutingIdsAndExplicitDetails {
   struct {
      unsigned routingAddressPresent : 1;
      unsigned routingAccountNumberPresent : 1;
   } m;
   /* List of RoutingIds */
   OSRTDList routingIds_list;
   const OSUTF8CHAR* routingName;
   Address routingAddress;
   const OSUTF8CHAR* routingAccountNumber;
   /* List of const OSUTF8CHAR* */
   OSRTDList routingReferenceText_list;
} RoutingIdsAndExplicitDetails;

EXTERN int asn1E_RoutingIdsAndExplicitDetails (OSCTXT* pctxt,
   RoutingIdsAndExplicitDetails *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RoutingIdsAndExplicitDetails (OSCTXT* pctxt, 
   RoutingIdsAndExplicitDetails *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RoutingIdsAndExplicitDetails (OSCTXT* pctxt, 
   RoutingIdsAndExplicitDetails* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoutingIdsAndExplicitDetails (OSCTXT* pctxt, 
   RoutingIdsAndExplicitDetails* pvalue);

EXTERN int DOMTest_RoutingIdsAndExplicitDetails (OSCTXT* pctxt, 
   RoutingIdsAndExplicitDetails* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RoutingIdsAndExplicitDetails (
   RoutingIdsAndExplicitDetails* pvalue);

/**************************************************************/
/*                                                            */
/*  Routing                                                   */
/*                                                            */
/**************************************************************/

#define TV_Routing	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Routing_routingIds            1
#define T_Routing_routingExplicitDetails 2
#define T_Routing_routingIdsAndExplicitDetails 3

typedef struct EXTERN Routing {
   int t;
   union {
      /* t = 1 */
      RoutingIds *routingIds;
      /* t = 2 */
      RoutingExplicitDetails *routingExplicitDetails;
      /* t = 3 */
      RoutingIdsAndExplicitDetails *routingIdsAndExplicitDetails;
   } u;
} Routing;

EXTERN int asn1E_Routing (OSCTXT* pctxt,
   Routing *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Routing (OSCTXT* pctxt, Routing *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Routing (OSCTXT* pctxt, Routing* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Routing (OSCTXT* pctxt, Routing* pvalue);

EXTERN int DOMTest_Routing (OSCTXT* pctxt, Routing* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Routing (Routing* pvalue);

/**************************************************************/
/*                                                            */
/*  IntermediaryInformation_choice                            */
/*                                                            */
/**************************************************************/

#define TV_IntermediaryInformation_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_IntermediaryInformation_choice_routingIds 1
#define T_IntermediaryInformation_choice_routingExplicitDetails 2
#define T_IntermediaryInformation_choice_routingIdsAndExplicitDetails 3

typedef struct EXTERN IntermediaryInformation_choice {
   int t;
   union {
      /* t = 1 */
      RoutingIds *routingIds;
      /* t = 2 */
      RoutingExplicitDetails *routingExplicitDetails;
      /* t = 3 */
      RoutingIdsAndExplicitDetails *routingIdsAndExplicitDetails;
   } u;
} IntermediaryInformation_choice;

EXTERN int asn1E_IntermediaryInformation_choice (OSCTXT* pctxt,
   IntermediaryInformation_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IntermediaryInformation_choice (OSCTXT* pctxt, 
   IntermediaryInformation_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IntermediaryInformation_choice (OSCTXT* pctxt, 
   IntermediaryInformation_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IntermediaryInformation_choice (OSCTXT* pctxt, 
   IntermediaryInformation_choice* pvalue);

EXTERN int DOMTest_IntermediaryInformation_choice (OSCTXT* pctxt, 
   IntermediaryInformation_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IntermediaryInformation_choice (
   IntermediaryInformation_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  IntermediaryInformation                                   */
/*                                                            */
/**************************************************************/

#define TV_IntermediaryInformation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IntermediaryInformation {
   IntermediaryInformation_choice choice;
   OSINT32 intermediarySequenceNumber;
} IntermediaryInformation;

EXTERN int asn1E_IntermediaryInformation (OSCTXT* pctxt,
   IntermediaryInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IntermediaryInformation (OSCTXT* pctxt, 
   IntermediaryInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IntermediaryInformation (OSCTXT* pctxt, 
   IntermediaryInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IntermediaryInformation (OSCTXT* pctxt, 
   IntermediaryInformation* pvalue);

EXTERN int DOMTest_IntermediaryInformation (OSCTXT* pctxt, 
   IntermediaryInformation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IntermediaryInformation (IntermediaryInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  SplitSettlement                                           */
/*                                                            */
/**************************************************************/

#define TV_SplitSettlement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SplitSettlement {
   struct {
      unsigned beneficiaryBankPresent : 1;
   } m;
   struct Money_derivations *splitSettlementAmount;
   Routing beneficiaryBank;
   Routing beneficiary;
} SplitSettlement;

EXTERN int asn1E_SplitSettlement (OSCTXT* pctxt,
   SplitSettlement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SplitSettlement (OSCTXT* pctxt, SplitSettlement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SplitSettlement (OSCTXT* pctxt, SplitSettlement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SplitSettlement (OSCTXT* pctxt, SplitSettlement* pvalue);

EXTERN int DOMTest_SplitSettlement (OSCTXT* pctxt, SplitSettlement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SplitSettlement (SplitSettlement* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementInstruction                                     */
/*                                                            */
/**************************************************************/

#define TV_SettlementInstruction	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SettlementInstruction {
   struct {
      unsigned settlementMethodPresent : 1;
      unsigned correspondentInformationPresent : 1;
      unsigned beneficiaryBankPresent : 1;
   } m;
   SettlementMethod settlementMethod;
   Routing correspondentInformation;
   /* List of IntermediaryInformation */
   OSRTDList intermediaryInformation_list;
   Routing beneficiaryBank;
   Routing beneficiary;
   /* List of SplitSettlement */
   OSRTDList splitSettlement_list;
} SettlementInstruction;

EXTERN int asn1E_SettlementInstruction (OSCTXT* pctxt,
   SettlementInstruction *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementInstruction (OSCTXT* pctxt, 
   SettlementInstruction *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementInstruction (OSCTXT* pctxt, 
   SettlementInstruction* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementInstruction (OSCTXT* pctxt, 
   SettlementInstruction* pvalue);

EXTERN int DOMTest_SettlementInstruction (OSCTXT* pctxt, 
   SettlementInstruction* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementInstruction (SettlementInstruction* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementInformation                                     */
/*                                                            */
/**************************************************************/

#define TV_SettlementInformation	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SettlementInformation_standardSettlementStyle 1
#define T_SettlementInformation_settlementInstruction 2

typedef struct EXTERN SettlementInformation {
   int t;
   union {
      /* t = 1 */
      StandardSettlementStyleEnum standardSettlementStyle;
      /* t = 2 */
      SettlementInstruction *settlementInstruction;
   } u;
} SettlementInformation;

EXTERN int asn1E_SettlementInformation (OSCTXT* pctxt,
   SettlementInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementInformation (OSCTXT* pctxt, 
   SettlementInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementInformation (OSCTXT* pctxt, 
   SettlementInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementInformation (OSCTXT* pctxt, 
   SettlementInformation* pvalue);

EXTERN int DOMTest_SettlementInformation (OSCTXT* pctxt, 
   SettlementInformation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementInformation (SettlementInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  FXOptionPayout                                            */
/*                                                            */
/**************************************************************/

#define TV_FXOptionPayout	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXOptionPayout {
   struct {
      unsigned settlementInformationPresent : 1;
   } m;
   Currency currency;
   OSREAL amount;
   PayoutEnum payoutStyle;
   SettlementInformation settlementInformation;
} FXOptionPayout;

EXTERN int asn1E_FXOptionPayout (OSCTXT* pctxt,
   FXOptionPayout *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXOptionPayout (OSCTXT* pctxt, FXOptionPayout *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXOptionPayout (OSCTXT* pctxt, FXOptionPayout* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXOptionPayout (OSCTXT* pctxt, FXOptionPayout* pvalue);

EXTERN int DOMTest_FXOptionPayout (OSCTXT* pctxt, FXOptionPayout* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXOptionPayout (FXOptionPayout* pvalue);

/**************************************************************/
/*                                                            */
/*  Money_derivations                                         */
/*                                                            */
/**************************************************************/

#define TV_Money_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Money_derivations_money       1
#define T_Money_derivations_fXOptionPayout 2

typedef struct EXTERN Money_derivations {
   int t;
   union {
      /* t = 1 */
      Money *money;
      /* t = 2 */
      FXOptionPayout *fXOptionPayout;
   } u;
} Money_derivations;

EXTERN int asn1E_Money_derivations (OSCTXT* pctxt,
   Money_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Money_derivations (OSCTXT* pctxt, Money_derivations *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Money_derivations (OSCTXT* pctxt, Money_derivations* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Money_derivations (OSCTXT* pctxt, Money_derivations* pvalue)
   ;

EXTERN int DOMTest_Money_derivations (OSCTXT* pctxt, Money_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Money_derivations (Money_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  PremiumQuoteBasisEnum                                     */
/*                                                            */
/**************************************************************/

#define TV_PremiumQuoteBasisEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PremiumQuoteBasisEnum_callCurrencyPerPutCurrency = 0,
   PremiumQuoteBasisEnum_explicit_ = 1,
   PremiumQuoteBasisEnum_percentageOfCallCurrencyAmount = 2,
   PremiumQuoteBasisEnum_percentageOfPutCurrencyAmount = 3,
   PremiumQuoteBasisEnum_putCurrencyPerCallCurrency = 4
} PremiumQuoteBasisEnum_Root;

typedef OSUINT32 PremiumQuoteBasisEnum;

EXTERN int asn1E_PremiumQuoteBasisEnum (OSCTXT* pctxt,
   PremiumQuoteBasisEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PremiumQuoteBasisEnum (OSCTXT* pctxt, 
   PremiumQuoteBasisEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PremiumQuoteBasisEnum (OSCTXT* pctxt, 
   PremiumQuoteBasisEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PremiumQuoteBasisEnum (OSCTXT* pctxt, 
   PremiumQuoteBasisEnum* pvalue);

EXTERN const OSUTF8CHAR* PremiumQuoteBasisEnum_ToString (OSINT32 value);

EXTERN int PremiumQuoteBasisEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PremiumQuoteBasisEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  PremiumQuote                                              */
/*                                                            */
/**************************************************************/

#define TV_PremiumQuote	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PremiumQuote {
   OSREAL premiumValue;
   PremiumQuoteBasisEnum premiumQuoteBasis;
} PremiumQuote;

EXTERN int asn1E_PremiumQuote (OSCTXT* pctxt,
   PremiumQuote *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PremiumQuote (OSCTXT* pctxt, PremiumQuote *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PremiumQuote (OSCTXT* pctxt, PremiumQuote* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PremiumQuote (OSCTXT* pctxt, PremiumQuote* pvalue);

EXTERN int DOMTest_PremiumQuote (OSCTXT* pctxt, PremiumQuote* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PremiumQuote (PremiumQuote* pvalue);

/**************************************************************/
/*                                                            */
/*  FXOptionPremium                                           */
/*                                                            */
/**************************************************************/

#define TV_FXOptionPremium	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXOptionPremium {
   struct {
      unsigned settlementInformationPresent : 1;
      unsigned premiumQuotePresent : 1;
   } m;
   PayerReceiver_model payerReceiver_model;
   Money_derivations premiumAmount;
   const char* premiumSettlementDate;
   SettlementInformation settlementInformation;
   PremiumQuote premiumQuote;
} FXOptionPremium;

EXTERN int asn1E_FXOptionPremium (OSCTXT* pctxt,
   FXOptionPremium *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXOptionPremium (OSCTXT* pctxt, FXOptionPremium *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXOptionPremium (OSCTXT* pctxt, FXOptionPremium* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXOptionPremium (OSCTXT* pctxt, FXOptionPremium* pvalue);

EXTERN int DOMTest_FXOptionPremium (OSCTXT* pctxt, FXOptionPremium* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXOptionPremium (FXOptionPremium* pvalue);

/**************************************************************/
/*                                                            */
/*  StrikeQuoteBasisEnum                                      */
/*                                                            */
/**************************************************************/

#define TV_StrikeQuoteBasisEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   StrikeQuoteBasisEnum_callCurrencyPerPutCurrency = 0,
   StrikeQuoteBasisEnum_putCurrencyPerCallCurrency = 1
} StrikeQuoteBasisEnum_Root;

typedef OSUINT32 StrikeQuoteBasisEnum;

EXTERN int asn1E_StrikeQuoteBasisEnum (OSCTXT* pctxt,
   StrikeQuoteBasisEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StrikeQuoteBasisEnum (OSCTXT* pctxt, 
   StrikeQuoteBasisEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StrikeQuoteBasisEnum (OSCTXT* pctxt, 
   StrikeQuoteBasisEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StrikeQuoteBasisEnum (OSCTXT* pctxt, 
   StrikeQuoteBasisEnum* pvalue);

EXTERN const OSUTF8CHAR* StrikeQuoteBasisEnum_ToString (OSINT32 value);

EXTERN int StrikeQuoteBasisEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, StrikeQuoteBasisEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  FXStrikePrice                                             */
/*                                                            */
/**************************************************************/

#define TV_FXStrikePrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXStrikePrice {
   OSREAL rate;
   StrikeQuoteBasisEnum strikeQuoteBasis;
} FXStrikePrice;

EXTERN int asn1E_FXStrikePrice (OSCTXT* pctxt,
   FXStrikePrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXStrikePrice (OSCTXT* pctxt, FXStrikePrice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXStrikePrice (OSCTXT* pctxt, FXStrikePrice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXStrikePrice (OSCTXT* pctxt, FXStrikePrice* pvalue);

EXTERN int DOMTest_FXStrikePrice (OSCTXT* pctxt, FXStrikePrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXStrikePrice (FXStrikePrice* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationProvider                                       */
/*                                                            */
/**************************************************************/

#define TV_InformationProvider	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InformationProvider {
   struct {
      unsigned informationProviderSchemePresent : 1;
   } m;
   const OSUTF8CHAR* informationProviderScheme;
   const OSUTF8CHAR* base;
} InformationProvider;

EXTERN int asn1E_InformationProvider (OSCTXT* pctxt,
   InformationProvider *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InformationProvider (OSCTXT* pctxt, 
   InformationProvider *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InformationProvider (OSCTXT* pctxt, 
   InformationProvider* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InformationProvider (OSCTXT* pctxt, 
   InformationProvider* pvalue);

EXTERN int DOMTest_InformationProvider (OSCTXT* pctxt, InformationProvider* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InformationProvider (InformationProvider* pvalue);

/**************************************************************/
/*                                                            */
/*  RateSourcePage                                            */
/*                                                            */
/**************************************************************/

#define TV_RateSourcePage	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RateSourcePage {
   struct {
      unsigned rateSourcePageSchemePresent : 1;
   } m;
   const OSUTF8CHAR* rateSourcePageScheme;
   const OSUTF8CHAR* base;
} RateSourcePage;

EXTERN int asn1E_RateSourcePage (OSCTXT* pctxt,
   RateSourcePage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RateSourcePage (OSCTXT* pctxt, RateSourcePage *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RateSourcePage (OSCTXT* pctxt, RateSourcePage* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RateSourcePage (OSCTXT* pctxt, RateSourcePage* pvalue);

EXTERN int DOMTest_RateSourcePage (OSCTXT* pctxt, RateSourcePage* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RateSourcePage (RateSourcePage* pvalue);

/**************************************************************/
/*                                                            */
/*  InformationSource                                         */
/*                                                            */
/**************************************************************/

#define TV_InformationSource	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InformationSource {
   struct {
      unsigned rateSourcePagePresent : 1;
      unsigned rateSourcePageHeadingPresent : 1;
   } m;
   InformationProvider rateSource;
   RateSourcePage rateSourcePage;
   const OSUTF8CHAR* rateSourcePageHeading;
} InformationSource;

EXTERN int asn1E_InformationSource (OSCTXT* pctxt,
   InformationSource *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InformationSource (OSCTXT* pctxt, InformationSource *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_InformationSource (OSCTXT* pctxt, InformationSource* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InformationSource (OSCTXT* pctxt, InformationSource* pvalue)
   ;

EXTERN int DOMTest_InformationSource (OSCTXT* pctxt, InformationSource* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InformationSource (InformationSource* pvalue);

/**************************************************************/
/*                                                            */
/*  PeriodEnum                                                */
/*                                                            */
/**************************************************************/

#define TV_PeriodEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PeriodEnum_d = 0,
   PeriodEnum_m = 1,
   PeriodEnum_t = 2,
   PeriodEnum_w = 3,
   PeriodEnum_y = 4
} PeriodEnum_Root;

typedef OSUINT32 PeriodEnum;

EXTERN int asn1E_PeriodEnum (OSCTXT* pctxt,
   PeriodEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PeriodEnum (OSCTXT* pctxt, PeriodEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PeriodEnum (OSCTXT* pctxt, PeriodEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PeriodEnum (OSCTXT* pctxt, PeriodEnum* pvalue);

EXTERN const OSUTF8CHAR* PeriodEnum_ToString (OSINT32 value);

EXTERN int PeriodEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PeriodEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  RollConventionEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_RollConventionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   RollConventionEnum_eOM = 0,
   RollConventionEnum_int1 = 1,
   RollConventionEnum_int2 = 2,
   RollConventionEnum_int3 = 3,
   RollConventionEnum_int4 = 4,
   RollConventionEnum_int5 = 5,
   RollConventionEnum_int6 = 6,
   RollConventionEnum_int7 = 7,
   RollConventionEnum_int8 = 8,
   RollConventionEnum_int9 = 9,
   RollConventionEnum_int10 = 10,
   RollConventionEnum_int11 = 11,
   RollConventionEnum_int12 = 12,
   RollConventionEnum_int13 = 13,
   RollConventionEnum_int14 = 14,
   RollConventionEnum_int15 = 15,
   RollConventionEnum_int16 = 16,
   RollConventionEnum_int17 = 17,
   RollConventionEnum_int18 = 18,
   RollConventionEnum_int19 = 19,
   RollConventionEnum_int20 = 20,
   RollConventionEnum_int21 = 21,
   RollConventionEnum_int22 = 22,
   RollConventionEnum_int23 = 23,
   RollConventionEnum_int24 = 24,
   RollConventionEnum_int25 = 25,
   RollConventionEnum_int26 = 26,
   RollConventionEnum_int27 = 27,
   RollConventionEnum_int28 = 28,
   RollConventionEnum_int29 = 29,
   RollConventionEnum_int30 = 30,
   RollConventionEnum_fRI = 31,
   RollConventionEnum_fRN = 32,
   RollConventionEnum_iMM = 33,
   RollConventionEnum_iMMCAD = 34,
   RollConventionEnum_mON = 35,
   RollConventionEnum_nONE = 36,
   RollConventionEnum_sAT = 37,
   RollConventionEnum_sFE = 38,
   RollConventionEnum_sUN = 39,
   RollConventionEnum_tBILL = 40,
   RollConventionEnum_tHU = 41,
   RollConventionEnum_tUE = 42,
   RollConventionEnum_wED = 43
} RollConventionEnum_Root;

typedef OSUINT32 RollConventionEnum;

EXTERN int asn1E_RollConventionEnum (OSCTXT* pctxt,
   RollConventionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RollConventionEnum (OSCTXT* pctxt, 
   RollConventionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RollConventionEnum (OSCTXT* pctxt, RollConventionEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RollConventionEnum (OSCTXT* pctxt, 
   RollConventionEnum* pvalue);

EXTERN const OSUTF8CHAR* RollConventionEnum_ToString (OSINT32 value);

EXTERN int RollConventionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RollConventionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriodFrequency                                */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriodFrequency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CalculationPeriodFrequency {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   RollConventionEnum rollConvention;
} CalculationPeriodFrequency;

EXTERN int asn1E_CalculationPeriodFrequency (OSCTXT* pctxt,
   CalculationPeriodFrequency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriodFrequency (OSCTXT* pctxt, 
   CalculationPeriodFrequency *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriodFrequency (OSCTXT* pctxt, 
   CalculationPeriodFrequency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriodFrequency (OSCTXT* pctxt, 
   CalculationPeriodFrequency* pvalue);

EXTERN int DOMTest_CalculationPeriodFrequency (OSCTXT* pctxt, 
   CalculationPeriodFrequency* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriodFrequency (CalculationPeriodFrequency* pvalue);

/**************************************************************/
/*                                                            */
/*  FXAverageRateObservationSchedule                          */
/*                                                            */
/**************************************************************/

#define TV_FXAverageRateObservationSchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXAverageRateObservationSchedule {
   const char* observationStartDate;
   const char* observationEndDate;
   CalculationPeriodFrequency calculationPeriodFrequency;
} FXAverageRateObservationSchedule;

EXTERN int asn1E_FXAverageRateObservationSchedule (OSCTXT* pctxt,
   FXAverageRateObservationSchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXAverageRateObservationSchedule (OSCTXT* pctxt, 
   FXAverageRateObservationSchedule *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXAverageRateObservationSchedule (OSCTXT* pctxt, 
   FXAverageRateObservationSchedule* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXAverageRateObservationSchedule (OSCTXT* pctxt, 
   FXAverageRateObservationSchedule* pvalue);

EXTERN int DOMTest_FXAverageRateObservationSchedule (OSCTXT* pctxt, 
   FXAverageRateObservationSchedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXAverageRateObservationSchedule (
   FXAverageRateObservationSchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  FXAverageRateObservationDate                              */
/*                                                            */
/**************************************************************/

#define TV_FXAverageRateObservationDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXAverageRateObservationDate {
   const char* observationDate;
   OSREAL averageRateWeightingFactor;
} FXAverageRateObservationDate;

EXTERN int asn1E_FXAverageRateObservationDate (OSCTXT* pctxt,
   FXAverageRateObservationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXAverageRateObservationDate (OSCTXT* pctxt, 
   FXAverageRateObservationDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXAverageRateObservationDate (OSCTXT* pctxt, 
   FXAverageRateObservationDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXAverageRateObservationDate (OSCTXT* pctxt, 
   FXAverageRateObservationDate* pvalue);

EXTERN int DOMTest_FXAverageRateObservationDate (OSCTXT* pctxt, 
   FXAverageRateObservationDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXAverageRateObservationDate (
   FXAverageRateObservationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  FXAverageRateOption_choice                                */
/*                                                            */
/**************************************************************/

#define TV_FXAverageRateOption_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FXAverageRateOption_choice_averageRateObservationSchedule 1
#define T_FXAverageRateOption_choice_averageRateObservationDate_list 2

typedef struct EXTERN FXAverageRateOption_choice {
   int t;
   union {
      /* t = 1 */
      FXAverageRateObservationSchedule *averageRateObservationSchedule;
      /* t = 2 */
      /* List of FXAverageRateObservationDate */
      OSRTDList *averageRateObservationDate_list;
   } u;
} FXAverageRateOption_choice;

EXTERN int asn1E_FXAverageRateOption_choice (OSCTXT* pctxt,
   FXAverageRateOption_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXAverageRateOption_choice (OSCTXT* pctxt, 
   FXAverageRateOption_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXAverageRateOption_choice (OSCTXT* pctxt, 
   FXAverageRateOption_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXAverageRateOption_choice (OSCTXT* pctxt, 
   FXAverageRateOption_choice* pvalue);

EXTERN int DOMTest_FXAverageRateOption_choice (OSCTXT* pctxt, 
   FXAverageRateOption_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXAverageRateOption_choice (FXAverageRateOption_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ObservedRates                                             */
/*                                                            */
/**************************************************************/

#define TV_ObservedRates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ObservedRates {
   const char* observationDate;
   OSREAL observedRate;
} ObservedRates;

EXTERN int asn1E_ObservedRates (OSCTXT* pctxt,
   ObservedRates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ObservedRates (OSCTXT* pctxt, ObservedRates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ObservedRates (OSCTXT* pctxt, ObservedRates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ObservedRates (OSCTXT* pctxt, ObservedRates* pvalue);

EXTERN int DOMTest_ObservedRates (OSCTXT* pctxt, ObservedRates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ObservedRates (ObservedRates* pvalue);

/**************************************************************/
/*                                                            */
/*  FXAverageRateOption                                       */
/*                                                            */
/**************************************************************/

#define TV_FXAverageRateOption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXAverageRateOption {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned spotRatePresent : 1;
      unsigned precisionPresent : 1;
      unsigned payoutFormulaPresent : 1;
      unsigned secondaryRateSourcePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   ExpiryDateTime expiryDateTime;
   ExerciseStyleEnum exerciseStyle;
   /* List of FXOptionPremium */
   OSRTDList fxOptionPremium_list;
   const char* valueDate;
   Money_derivations putCurrencyAmount;
   Money_derivations callCurrencyAmount;
   FXStrikePrice fxStrikePrice;
   OSREAL spotRate;
   Currency payoutCurrency;
   StrikeQuoteBasisEnum averageRateQuoteBasis;
   OSUINT32 precision;
   const OSUTF8CHAR* payoutFormula;
   InformationSource primaryRateSource;
   InformationSource secondaryRateSource;
   BusinessCenterTime fixingTime;
   FXAverageRateOption_choice choice;
   /* List of ObservedRates */
   OSRTDList observedRates_list;
} FXAverageRateOption;

EXTERN int asn1E_FXAverageRateOption (OSCTXT* pctxt,
   FXAverageRateOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXAverageRateOption (OSCTXT* pctxt, 
   FXAverageRateOption *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXAverageRateOption (OSCTXT* pctxt, 
   FXAverageRateOption* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXAverageRateOption (OSCTXT* pctxt, 
   FXAverageRateOption* pvalue);

EXTERN int DOMTest_FXAverageRateOption (OSCTXT* pctxt, FXAverageRateOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXAverageRateOption (FXAverageRateOption* pvalue);

/**************************************************************/
/*                                                            */
/*  FxAverageRateOption                                       */
/*                                                            */
/**************************************************************/

#define TV_FxAverageRateOption	(TM_UNIV|TM_CONS|16)

typedef FXAverageRateOption FxAverageRateOption;

EXTERN int asn1E_FxAverageRateOption (OSCTXT* pctxt,
   FxAverageRateOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxAverageRateOption (OSCTXT* pctxt, 
   FxAverageRateOption *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxAverageRateOption (OSCTXT* pctxt, 
   FxAverageRateOption* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxAverageRateOption (OSCTXT* pctxt, 
   FxAverageRateOption* pvalue);

EXTERN int DOMTest_FxAverageRateOption (OSCTXT* pctxt, FxAverageRateOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxAverageRateOption (FxAverageRateOption* pvalue);

/**************************************************************/
/*                                                            */
/*  FxBarrierTypeEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_FxBarrierTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   FxBarrierTypeEnum_knockin = 0,
   FxBarrierTypeEnum_knockout = 1,
   FxBarrierTypeEnum_reverseKnockin = 2,
   FxBarrierTypeEnum_reverseKnockout = 3
} FxBarrierTypeEnum_Root;

typedef OSUINT32 FxBarrierTypeEnum;

EXTERN int asn1E_FxBarrierTypeEnum (OSCTXT* pctxt,
   FxBarrierTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxBarrierTypeEnum (OSCTXT* pctxt, FxBarrierTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxBarrierTypeEnum (OSCTXT* pctxt, FxBarrierTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxBarrierTypeEnum (OSCTXT* pctxt, FxBarrierTypeEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* FxBarrierTypeEnum_ToString (OSINT32 value);

EXTERN int FxBarrierTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, FxBarrierTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteBasisEnum                                            */
/*                                                            */
/**************************************************************/

#define TV_QuoteBasisEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   QuoteBasisEnum_currency1PerCurrency2 = 0,
   QuoteBasisEnum_currency2PerCurrency1 = 1
} QuoteBasisEnum_Root;

typedef OSUINT32 QuoteBasisEnum;

EXTERN int asn1E_QuoteBasisEnum (OSCTXT* pctxt,
   QuoteBasisEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteBasisEnum (OSCTXT* pctxt, QuoteBasisEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteBasisEnum (OSCTXT* pctxt, QuoteBasisEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteBasisEnum (OSCTXT* pctxt, QuoteBasisEnum* pvalue);

EXTERN const OSUTF8CHAR* QuoteBasisEnum_ToString (OSINT32 value);

EXTERN int QuoteBasisEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QuoteBasisEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotedCurrencyPair                                        */
/*                                                            */
/**************************************************************/

#define TV_QuotedCurrencyPair	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotedCurrencyPair {
   Currency currency1;
   Currency currency2;
   QuoteBasisEnum quoteBasis;
} QuotedCurrencyPair;

EXTERN int asn1E_QuotedCurrencyPair (OSCTXT* pctxt,
   QuotedCurrencyPair *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotedCurrencyPair (OSCTXT* pctxt, 
   QuotedCurrencyPair *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotedCurrencyPair (OSCTXT* pctxt, 
   QuotedCurrencyPair* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotedCurrencyPair (OSCTXT* pctxt, 
   QuotedCurrencyPair* pvalue);

EXTERN int DOMTest_QuotedCurrencyPair (OSCTXT* pctxt, QuotedCurrencyPair* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotedCurrencyPair (QuotedCurrencyPair* pvalue);

/**************************************************************/
/*                                                            */
/*  FXBarrier                                                 */
/*                                                            */
/**************************************************************/

#define TV_FXBarrier	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXBarrier {
   struct {
      unsigned fxBarrierTypePresent : 1;
      unsigned observationStartDatePresent : 1;
      unsigned observationEndDatePresent : 1;
   } m;
   FxBarrierTypeEnum fxBarrierType;
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL triggerRate;
   /* List of InformationSource */
   OSRTDList informationSource_list;
   const char* observationStartDate;
   const char* observationEndDate;
} FXBarrier;

EXTERN int asn1E_FXBarrier (OSCTXT* pctxt,
   FXBarrier *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXBarrier (OSCTXT* pctxt, FXBarrier *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXBarrier (OSCTXT* pctxt, FXBarrier* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXBarrier (OSCTXT* pctxt, FXBarrier* pvalue);

EXTERN int DOMTest_FXBarrier (OSCTXT* pctxt, FXBarrier* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXBarrier (FXBarrier* pvalue);

/**************************************************************/
/*                                                            */
/*  FXBarrierOption                                           */
/*                                                            */
/**************************************************************/

#define TV_FXBarrierOption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXBarrierOption {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned spotRatePresent : 1;
      unsigned triggerPayoutPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   OSREAL spotRate;
   /* List of FXBarrier */
   OSRTDList fxBarrier_list;
   FXOptionPayout triggerPayout;
} FXBarrierOption;

EXTERN int asn1E_FXBarrierOption (OSCTXT* pctxt,
   FXBarrierOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXBarrierOption (OSCTXT* pctxt, FXBarrierOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXBarrierOption (OSCTXT* pctxt, FXBarrierOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXBarrierOption (OSCTXT* pctxt, FXBarrierOption* pvalue);

EXTERN int DOMTest_FXBarrierOption (OSCTXT* pctxt, FXBarrierOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXBarrierOption (FXBarrierOption* pvalue);

/**************************************************************/
/*                                                            */
/*  FxBarrierOption                                           */
/*                                                            */
/**************************************************************/

#define TV_FxBarrierOption	(TM_UNIV|TM_CONS|16)

typedef FXBarrierOption FxBarrierOption;

EXTERN int asn1E_FxBarrierOption (OSCTXT* pctxt,
   FxBarrierOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxBarrierOption (OSCTXT* pctxt, FxBarrierOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxBarrierOption (OSCTXT* pctxt, FxBarrierOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxBarrierOption (OSCTXT* pctxt, FxBarrierOption* pvalue);

EXTERN int DOMTest_FxBarrierOption (OSCTXT* pctxt, FxBarrierOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxBarrierOption (FxBarrierOption* pvalue);

/**************************************************************/
/*                                                            */
/*  TriggerConditionEnum                                      */
/*                                                            */
/**************************************************************/

#define TV_TriggerConditionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   TriggerConditionEnum_above = 0,
   TriggerConditionEnum_below = 1
} TriggerConditionEnum_Root;

typedef OSUINT32 TriggerConditionEnum;

EXTERN int asn1E_TriggerConditionEnum (OSCTXT* pctxt,
   TriggerConditionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TriggerConditionEnum (OSCTXT* pctxt, 
   TriggerConditionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TriggerConditionEnum (OSCTXT* pctxt, 
   TriggerConditionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TriggerConditionEnum (OSCTXT* pctxt, 
   TriggerConditionEnum* pvalue);

EXTERN const OSUTF8CHAR* TriggerConditionEnum_ToString (OSINT32 value);

EXTERN int TriggerConditionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TriggerConditionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  FXEuropeanTrigger                                         */
/*                                                            */
/**************************************************************/

#define TV_FXEuropeanTrigger	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXEuropeanTrigger {
   TriggerConditionEnum triggerCondition;
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL triggerRate;
   /* List of InformationSource */
   OSRTDList informationSource_list;
} FXEuropeanTrigger;

EXTERN int asn1E_FXEuropeanTrigger (OSCTXT* pctxt,
   FXEuropeanTrigger *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXEuropeanTrigger (OSCTXT* pctxt, FXEuropeanTrigger *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXEuropeanTrigger (OSCTXT* pctxt, FXEuropeanTrigger* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXEuropeanTrigger (OSCTXT* pctxt, FXEuropeanTrigger* pvalue)
   ;

EXTERN int DOMTest_FXEuropeanTrigger (OSCTXT* pctxt, FXEuropeanTrigger* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXEuropeanTrigger (FXEuropeanTrigger* pvalue);

/**************************************************************/
/*                                                            */
/*  TouchConditionEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_TouchConditionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   TouchConditionEnum_notouch = 0,
   TouchConditionEnum_touch = 1
} TouchConditionEnum_Root;

typedef OSUINT32 TouchConditionEnum;

EXTERN int asn1E_TouchConditionEnum (OSCTXT* pctxt,
   TouchConditionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TouchConditionEnum (OSCTXT* pctxt, 
   TouchConditionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TouchConditionEnum (OSCTXT* pctxt, TouchConditionEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TouchConditionEnum (OSCTXT* pctxt, 
   TouchConditionEnum* pvalue);

EXTERN const OSUTF8CHAR* TouchConditionEnum_ToString (OSINT32 value);

EXTERN int TouchConditionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TouchConditionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  FXAmericanTrigger                                         */
/*                                                            */
/**************************************************************/

#define TV_FXAmericanTrigger	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXAmericanTrigger {
   struct {
      unsigned observationStartDatePresent : 1;
      unsigned observationEndDatePresent : 1;
   } m;
   TouchConditionEnum touchCondition;
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL triggerRate;
   /* List of InformationSource */
   OSRTDList informationSource_list;
   const char* observationStartDate;
   const char* observationEndDate;
} FXAmericanTrigger;

EXTERN int asn1E_FXAmericanTrigger (OSCTXT* pctxt,
   FXAmericanTrigger *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXAmericanTrigger (OSCTXT* pctxt, FXAmericanTrigger *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXAmericanTrigger (OSCTXT* pctxt, FXAmericanTrigger* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXAmericanTrigger (OSCTXT* pctxt, FXAmericanTrigger* pvalue)
   ;

EXTERN int DOMTest_FXAmericanTrigger (OSCTXT* pctxt, FXAmericanTrigger* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXAmericanTrigger (FXAmericanTrigger* pvalue);

/**************************************************************/
/*                                                            */
/*  FXDigitalOption_choice                                    */
/*                                                            */
/**************************************************************/

#define TV_FXDigitalOption_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FXDigitalOption_choice_fxEuropeanTrigger_list 1
#define T_FXDigitalOption_choice_fxAmericanTrigger_list 2

typedef struct EXTERN FXDigitalOption_choice {
   int t;
   union {
      /* t = 1 */
      /* List of FXEuropeanTrigger */
      OSRTDList *fxEuropeanTrigger_list;
      /* t = 2 */
      /* List of FXAmericanTrigger */
      OSRTDList *fxAmericanTrigger_list;
   } u;
} FXDigitalOption_choice;

EXTERN int asn1E_FXDigitalOption_choice (OSCTXT* pctxt,
   FXDigitalOption_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXDigitalOption_choice (OSCTXT* pctxt, 
   FXDigitalOption_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXDigitalOption_choice (OSCTXT* pctxt, 
   FXDigitalOption_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXDigitalOption_choice (OSCTXT* pctxt, 
   FXDigitalOption_choice* pvalue);

EXTERN int DOMTest_FXDigitalOption_choice (OSCTXT* pctxt, 
   FXDigitalOption_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXDigitalOption_choice (FXDigitalOption_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  FXDigitalOption                                           */
/*                                                            */
/**************************************************************/

#define TV_FXDigitalOption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXDigitalOption {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned spotRatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   ExpiryDateTime expiryDateTime;
   /* List of FXOptionPremium */
   OSRTDList fxOptionPremium_list;
   const char* valueDate;
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL spotRate;
   FXDigitalOption_choice choice;
   FXOptionPayout triggerPayout;
} FXDigitalOption;

EXTERN int asn1E_FXDigitalOption (OSCTXT* pctxt,
   FXDigitalOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXDigitalOption (OSCTXT* pctxt, FXDigitalOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXDigitalOption (OSCTXT* pctxt, FXDigitalOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXDigitalOption (OSCTXT* pctxt, FXDigitalOption* pvalue);

EXTERN int DOMTest_FXDigitalOption (OSCTXT* pctxt, FXDigitalOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXDigitalOption (FXDigitalOption* pvalue);

/**************************************************************/
/*                                                            */
/*  FxDigitalOption                                           */
/*                                                            */
/**************************************************************/

#define TV_FxDigitalOption	(TM_UNIV|TM_CONS|16)

typedef FXDigitalOption FxDigitalOption;

EXTERN int asn1E_FxDigitalOption (OSCTXT* pctxt,
   FxDigitalOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxDigitalOption (OSCTXT* pctxt, FxDigitalOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxDigitalOption (OSCTXT* pctxt, FxDigitalOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxDigitalOption (OSCTXT* pctxt, FxDigitalOption* pvalue);

EXTERN int DOMTest_FxDigitalOption (OSCTXT* pctxt, FxDigitalOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxDigitalOption (FxDigitalOption* pvalue);

/**************************************************************/
/*                                                            */
/*  FXFixing                                                  */
/*                                                            */
/**************************************************************/

#define TV_FXFixing	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXFixing {
   struct {
      unsigned secondaryRateSourcePresent : 1;
   } m;
   InformationSource primaryRateSource;
   InformationSource secondaryRateSource;
   BusinessCenterTime fixingTime;
   QuotedCurrencyPair quotedCurrencyPair;
   const char* fixingDate;
} FXFixing;

EXTERN int asn1E_FXFixing (OSCTXT* pctxt,
   FXFixing *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXFixing (OSCTXT* pctxt, FXFixing *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXFixing (OSCTXT* pctxt, FXFixing* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXFixing (OSCTXT* pctxt, FXFixing* pvalue);

EXTERN int DOMTest_FXFixing (OSCTXT* pctxt, FXFixing* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXFixing (FXFixing* pvalue);

/**************************************************************/
/*                                                            */
/*  FXCashSettlement                                          */
/*                                                            */
/**************************************************************/

#define TV_FXCashSettlement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXCashSettlement {
   Currency settlementCurrency;
   /* List of FXFixing */
   OSRTDList fixing_list;
} FXCashSettlement;

EXTERN int asn1E_FXCashSettlement (OSCTXT* pctxt,
   FXCashSettlement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXCashSettlement (OSCTXT* pctxt, FXCashSettlement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXCashSettlement (OSCTXT* pctxt, FXCashSettlement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXCashSettlement (OSCTXT* pctxt, FXCashSettlement* pvalue);

EXTERN int DOMTest_FXCashSettlement (OSCTXT* pctxt, FXCashSettlement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXCashSettlement (FXCashSettlement* pvalue);

/**************************************************************/
/*                                                            */
/*  Interval                                                  */
/*                                                            */
/**************************************************************/

#define TV_Interval	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Interval {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
} Interval;

EXTERN int asn1E_Interval (OSCTXT* pctxt,
   Interval *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Interval (OSCTXT* pctxt, Interval *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Interval (OSCTXT* pctxt, Interval* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Interval (OSCTXT* pctxt, Interval* pvalue);

EXTERN int DOMTest_Interval (OSCTXT* pctxt, Interval* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Interval (Interval* pvalue);

/**************************************************************/
/*                                                            */
/*  DayTypeEnum                                               */
/*                                                            */
/**************************************************************/

#define TV_DayTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DayTypeEnum_business = 0,
   DayTypeEnum_calendar = 1,
   DayTypeEnum_currencyBusiness = 2,
   DayTypeEnum_exchangeBusiness = 3
} DayTypeEnum_Root;

typedef OSUINT32 DayTypeEnum;

EXTERN int asn1E_DayTypeEnum (OSCTXT* pctxt,
   DayTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DayTypeEnum (OSCTXT* pctxt, DayTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DayTypeEnum (OSCTXT* pctxt, DayTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DayTypeEnum (OSCTXT* pctxt, DayTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* DayTypeEnum_ToString (OSINT32 value);

EXTERN int DayTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DayTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Offset                                                    */
/*                                                            */
/**************************************************************/

#define TV_Offset	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Offset {
   struct {
      unsigned idPresent : 1;
      unsigned dayTypePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   DayTypeEnum dayType;
} Offset;

EXTERN int asn1E_Offset (OSCTXT* pctxt,
   Offset *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Offset (OSCTXT* pctxt, Offset *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Offset (OSCTXT* pctxt, Offset* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Offset (OSCTXT* pctxt, Offset* pvalue);

EXTERN int DOMTest_Offset (OSCTXT* pctxt, Offset* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Offset (Offset* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDayConventionEnum                                 */
/*                                                            */
/**************************************************************/

#define TV_BusinessDayConventionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   BusinessDayConventionEnum_fOLLOWING = 0,
   BusinessDayConventionEnum_fRN = 1,
   BusinessDayConventionEnum_mODFOLLOWING = 2,
   BusinessDayConventionEnum_mODPRECEDING = 3,
   BusinessDayConventionEnum_nONE = 4,
   BusinessDayConventionEnum_notApplicable = 5,
   BusinessDayConventionEnum_pRECEDING = 6
} BusinessDayConventionEnum_Root;

typedef OSUINT32 BusinessDayConventionEnum;

EXTERN int asn1E_BusinessDayConventionEnum (OSCTXT* pctxt,
   BusinessDayConventionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDayConventionEnum (OSCTXT* pctxt, 
   BusinessDayConventionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDayConventionEnum (OSCTXT* pctxt, 
   BusinessDayConventionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDayConventionEnum (OSCTXT* pctxt, 
   BusinessDayConventionEnum* pvalue);

EXTERN const OSUTF8CHAR* BusinessDayConventionEnum_ToString (OSINT32 value);

EXTERN int BusinessDayConventionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, BusinessDayConventionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessCentersReference                                  */
/*                                                            */
/**************************************************************/

#define TV_BusinessCentersReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessCentersReference {
   const OSUTF8CHAR* href;
} BusinessCentersReference;

EXTERN int asn1E_BusinessCentersReference (OSCTXT* pctxt,
   BusinessCentersReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessCentersReference (OSCTXT* pctxt, 
   BusinessCentersReference *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessCentersReference (OSCTXT* pctxt, 
   BusinessCentersReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessCentersReference (OSCTXT* pctxt, 
   BusinessCentersReference* pvalue);

EXTERN int DOMTest_BusinessCentersReference (OSCTXT* pctxt, 
   BusinessCentersReference* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessCentersReference (BusinessCentersReference* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessCenters                                           */
/*                                                            */
/**************************************************************/

#define TV_BusinessCenters	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessCenters {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   /* List of BusinessCenter */
   OSRTDList businessCenter_list;
} BusinessCenters;

EXTERN int asn1E_BusinessCenters (OSCTXT* pctxt,
   BusinessCenters *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessCenters (OSCTXT* pctxt, BusinessCenters *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessCenters (OSCTXT* pctxt, BusinessCenters* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessCenters (OSCTXT* pctxt, BusinessCenters* pvalue);

EXTERN int DOMTest_BusinessCenters (OSCTXT* pctxt, BusinessCenters* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessCenters (BusinessCenters* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessCentersOrReference_model                          */
/*                                                            */
/**************************************************************/

#define TV_BusinessCentersOrReference_model	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_BusinessCentersOrReference_model_businessCentersReference 1
#define T_BusinessCentersOrReference_model_businessCenters 2

typedef struct EXTERN BusinessCentersOrReference_model {
   int t;
   union {
      /* t = 1 */
      BusinessCentersReference *businessCentersReference;
      /* t = 2 */
      BusinessCenters *businessCenters;
   } u;
} BusinessCentersOrReference_model;

EXTERN int asn1E_BusinessCentersOrReference_model (OSCTXT* pctxt,
   BusinessCentersOrReference_model *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessCentersOrReference_model (OSCTXT* pctxt, 
   BusinessCentersOrReference_model *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessCentersOrReference_model (OSCTXT* pctxt, 
   BusinessCentersOrReference_model* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessCentersOrReference_model (OSCTXT* pctxt, 
   BusinessCentersOrReference_model* pvalue);

EXTERN int DOMTest_BusinessCentersOrReference_model (OSCTXT* pctxt, 
   BusinessCentersOrReference_model* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessCentersOrReference_model (
   BusinessCentersOrReference_model* pvalue);

/**************************************************************/
/*                                                            */
/*  DateRelativeTo                                            */
/*                                                            */
/**************************************************************/

#define TV_DateRelativeTo	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DateRelativeTo {
   const OSUTF8CHAR* href;
} DateRelativeTo;

EXTERN int asn1E_DateRelativeTo (OSCTXT* pctxt,
   DateRelativeTo *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateRelativeTo (OSCTXT* pctxt, DateRelativeTo *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateRelativeTo (OSCTXT* pctxt, DateRelativeTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateRelativeTo (OSCTXT* pctxt, DateRelativeTo* pvalue);

EXTERN int DOMTest_DateRelativeTo (OSCTXT* pctxt, DateRelativeTo* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateRelativeTo (DateRelativeTo* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateOffset                                        */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateOffset	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RelativeDateOffset {
   struct {
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   BusinessDayConventionEnum businessDayConvention;
   BusinessCentersOrReference_model choice;
   DateRelativeTo dateRelativeTo;
} RelativeDateOffset;

EXTERN int asn1E_RelativeDateOffset (OSCTXT* pctxt,
   RelativeDateOffset *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateOffset (OSCTXT* pctxt, 
   RelativeDateOffset *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateOffset (OSCTXT* pctxt, 
   RelativeDateOffset* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateOffset (OSCTXT* pctxt, 
   RelativeDateOffset* pvalue);

EXTERN int DOMTest_RelativeDateOffset (OSCTXT* pctxt, RelativeDateOffset* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDateOffset (RelativeDateOffset* pvalue);

/**************************************************************/
/*                                                            */
/*  DateRange                                                 */
/*                                                            */
/**************************************************************/

#define TV_DateRange	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DateRange {
   const char* unadjustedFirstDate;
   const char* unadjustedLastDate;
} DateRange;

EXTERN int asn1E_DateRange (OSCTXT* pctxt,
   DateRange *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateRange (OSCTXT* pctxt, DateRange *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateRange (OSCTXT* pctxt, DateRange* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateRange (OSCTXT* pctxt, DateRange* pvalue);

EXTERN int DOMTest_DateRange (OSCTXT* pctxt, DateRange* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateRange (DateRange* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDateRange_choice                                  */
/*                                                            */
/**************************************************************/

#define TV_BusinessDateRange_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_BusinessDateRange_choice_choice 1

typedef struct EXTERN BusinessDateRange_choice {
   int t;
   union {
      /* t = 1 */
      BusinessCentersOrReference_model *choice;
   } u;
} BusinessDateRange_choice;

EXTERN int asn1E_BusinessDateRange_choice (OSCTXT* pctxt,
   BusinessDateRange_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDateRange_choice (OSCTXT* pctxt, 
   BusinessDateRange_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDateRange_choice (OSCTXT* pctxt, 
   BusinessDateRange_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDateRange_choice (OSCTXT* pctxt, 
   BusinessDateRange_choice* pvalue);

EXTERN int DOMTest_BusinessDateRange_choice (OSCTXT* pctxt, 
   BusinessDateRange_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessDateRange_choice (BusinessDateRange_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDateRange                                         */
/*                                                            */
/**************************************************************/

#define TV_BusinessDateRange	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessDateRange {
   struct {
      unsigned choicePresent : 1;
   } m;
   const char* unadjustedFirstDate;
   const char* unadjustedLastDate;
   BusinessDayConventionEnum businessDayConvention;
   BusinessDateRange_choice choice;
} BusinessDateRange;

EXTERN int asn1E_BusinessDateRange (OSCTXT* pctxt,
   BusinessDateRange *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDateRange (OSCTXT* pctxt, BusinessDateRange *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDateRange (OSCTXT* pctxt, BusinessDateRange* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDateRange (OSCTXT* pctxt, BusinessDateRange* pvalue)
   ;

EXTERN int DOMTest_BusinessDateRange (OSCTXT* pctxt, BusinessDateRange* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessDateRange (BusinessDateRange* pvalue);

/**************************************************************/
/*                                                            */
/*  DateRange_derivations                                     */
/*                                                            */
/**************************************************************/

#define TV_DateRange_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DateRange_derivations_dateRange 1
#define T_DateRange_derivations_businessDateRange 2

typedef struct EXTERN DateRange_derivations {
   int t;
   union {
      /* t = 1 */
      DateRange *dateRange;
      /* t = 2 */
      BusinessDateRange *businessDateRange;
   } u;
} DateRange_derivations;

EXTERN int asn1E_DateRange_derivations (OSCTXT* pctxt,
   DateRange_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateRange_derivations (OSCTXT* pctxt, 
   DateRange_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateRange_derivations (OSCTXT* pctxt, 
   DateRange_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateRange_derivations (OSCTXT* pctxt, 
   DateRange_derivations* pvalue);

EXTERN int DOMTest_DateRange_derivations (OSCTXT* pctxt, 
   DateRange_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateRange_derivations (DateRange_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDates                                             */
/*                                                            */
/**************************************************************/

#define TV_RelativeDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RelativeDates {
   struct {
      unsigned idPresent : 1;
      unsigned periodSkipPresent : 1;
      unsigned scheduleBoundsPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   OSUINT32 periodSkip;
   DateRange_derivations scheduleBounds;
} RelativeDates;

EXTERN int asn1E_RelativeDates (OSCTXT* pctxt,
   RelativeDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDates (OSCTXT* pctxt, RelativeDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDates (OSCTXT* pctxt, RelativeDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDates (OSCTXT* pctxt, RelativeDates* pvalue);

EXTERN int DOMTest_RelativeDates (OSCTXT* pctxt, RelativeDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDates (RelativeDates* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateOffset_derivations                            */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateOffset_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_RelativeDateOffset_derivations_relativeDateOffset 1
#define T_RelativeDateOffset_derivations_relativeDates 2

typedef struct EXTERN RelativeDateOffset_derivations {
   int t;
   union {
      /* t = 1 */
      RelativeDateOffset *relativeDateOffset;
      /* t = 2 */
      RelativeDates *relativeDates;
   } u;
} RelativeDateOffset_derivations;

EXTERN int asn1E_RelativeDateOffset_derivations (OSCTXT* pctxt,
   RelativeDateOffset_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateOffset_derivations (OSCTXT* pctxt, 
   RelativeDateOffset_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateOffset_derivations (OSCTXT* pctxt, 
   RelativeDateOffset_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateOffset_derivations (OSCTXT* pctxt, 
   RelativeDateOffset_derivations* pvalue);

EXTERN int DOMTest_RelativeDateOffset_derivations (OSCTXT* pctxt, 
   RelativeDateOffset_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDateOffset_derivations (
   RelativeDateOffset_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Offset_derivations                                        */
/*                                                            */
/**************************************************************/

#define TV_Offset_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Offset_derivations_offset     1
#define T_Offset_derivations_relativeDateOffset 2

typedef struct EXTERN Offset_derivations {
   int t;
   union {
      /* t = 1 */
      Offset *offset;
      /* t = 2 */
      RelativeDateOffset_derivations *relativeDateOffset;
   } u;
} Offset_derivations;

EXTERN int asn1E_Offset_derivations (OSCTXT* pctxt,
   Offset_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Offset_derivations (OSCTXT* pctxt, 
   Offset_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Offset_derivations (OSCTXT* pctxt, 
   Offset_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Offset_derivations (OSCTXT* pctxt, 
   Offset_derivations* pvalue);

EXTERN int DOMTest_Offset_derivations (OSCTXT* pctxt, Offset_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Offset_derivations (Offset_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  WeeklyRollConventionEnum                                  */
/*                                                            */
/**************************************************************/

#define TV_WeeklyRollConventionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   WeeklyRollConventionEnum_fRI = 0,
   WeeklyRollConventionEnum_mON = 1,
   WeeklyRollConventionEnum_sAT = 2,
   WeeklyRollConventionEnum_sUN = 3,
   WeeklyRollConventionEnum_tHU = 4,
   WeeklyRollConventionEnum_tUE = 5,
   WeeklyRollConventionEnum_wED = 6
} WeeklyRollConventionEnum_Root;

typedef OSUINT32 WeeklyRollConventionEnum;

EXTERN int asn1E_WeeklyRollConventionEnum (OSCTXT* pctxt,
   WeeklyRollConventionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_WeeklyRollConventionEnum (OSCTXT* pctxt, 
   WeeklyRollConventionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_WeeklyRollConventionEnum (OSCTXT* pctxt, 
   WeeklyRollConventionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_WeeklyRollConventionEnum (OSCTXT* pctxt, 
   WeeklyRollConventionEnum* pvalue);

EXTERN const OSUTF8CHAR* WeeklyRollConventionEnum_ToString (OSINT32 value);

EXTERN int WeeklyRollConventionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, WeeklyRollConventionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetFrequency                                            */
/*                                                            */
/**************************************************************/

#define TV_ResetFrequency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ResetFrequency {
   struct {
      unsigned idPresent : 1;
      unsigned weeklyRollConventionPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   WeeklyRollConventionEnum weeklyRollConvention;
} ResetFrequency;

EXTERN int asn1E_ResetFrequency (OSCTXT* pctxt,
   ResetFrequency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResetFrequency (OSCTXT* pctxt, ResetFrequency *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResetFrequency (OSCTXT* pctxt, ResetFrequency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResetFrequency (OSCTXT* pctxt, ResetFrequency* pvalue);

EXTERN int DOMTest_ResetFrequency (OSCTXT* pctxt, ResetFrequency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResetFrequency (ResetFrequency* pvalue);

/**************************************************************/
/*                                                            */
/*  Interval_derivations                                      */
/*                                                            */
/**************************************************************/

#define TV_Interval_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Interval_derivations_interval 1
#define T_Interval_derivations_offset   2
#define T_Interval_derivations_calculationPeriodFrequency 3
#define T_Interval_derivations_resetFrequency 4

typedef struct EXTERN Interval_derivations {
   int t;
   union {
      /* t = 1 */
      Interval *interval;
      /* t = 2 */
      Offset_derivations *offset;
      /* t = 3 */
      CalculationPeriodFrequency *calculationPeriodFrequency;
      /* t = 4 */
      ResetFrequency *resetFrequency;
   } u;
} Interval_derivations;

EXTERN int asn1E_Interval_derivations (OSCTXT* pctxt,
   Interval_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Interval_derivations (OSCTXT* pctxt, 
   Interval_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Interval_derivations (OSCTXT* pctxt, 
   Interval_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Interval_derivations (OSCTXT* pctxt, 
   Interval_derivations* pvalue);

EXTERN int DOMTest_Interval_derivations (OSCTXT* pctxt, Interval_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Interval_derivations (Interval_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotedAs                                                  */
/*                                                            */
/**************************************************************/

#define TV_QuotedAs	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotedAs {
   struct {
      unsigned quotedTenorPresent : 1;
   } m;
   Currency optionOnCurrency;
   Currency faceOnCurrency;
   Interval_derivations quotedTenor;
} QuotedAs;

EXTERN int asn1E_QuotedAs (OSCTXT* pctxt,
   QuotedAs *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotedAs (OSCTXT* pctxt, QuotedAs *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotedAs (OSCTXT* pctxt, QuotedAs* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotedAs (OSCTXT* pctxt, QuotedAs* pvalue);

EXTERN int DOMTest_QuotedAs (OSCTXT* pctxt, QuotedAs* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotedAs (QuotedAs* pvalue);

/**************************************************************/
/*                                                            */
/*  FXOptionLeg                                               */
/*                                                            */
/**************************************************************/

#define TV_FXOptionLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXOptionLeg {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned cashSettlementTermsPresent : 1;
      unsigned quotedAsPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   ExpiryDateTime expiryDateTime;
   ExerciseStyleEnum exerciseStyle;
   /* List of FXOptionPremium */
   OSRTDList fxOptionPremium_list;
   const char* valueDate;
   FXCashSettlement cashSettlementTerms;
   Money_derivations putCurrencyAmount;
   Money_derivations callCurrencyAmount;
   FXStrikePrice fxStrikePrice;
   QuotedAs quotedAs;
} FXOptionLeg;

EXTERN int asn1E_FXOptionLeg (OSCTXT* pctxt,
   FXOptionLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXOptionLeg (OSCTXT* pctxt, FXOptionLeg *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXOptionLeg (OSCTXT* pctxt, FXOptionLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXOptionLeg (OSCTXT* pctxt, FXOptionLeg* pvalue);

EXTERN int DOMTest_FXOptionLeg (OSCTXT* pctxt, FXOptionLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXOptionLeg (FXOptionLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  FXOptionLeg_derivations                                   */
/*                                                            */
/**************************************************************/

#define TV_FXOptionLeg_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FXOptionLeg_derivations_fXOptionLeg 1
#define T_FXOptionLeg_derivations_fXBarrierOption 2

typedef struct EXTERN FXOptionLeg_derivations {
   int t;
   union {
      /* t = 1 */
      FXOptionLeg *fXOptionLeg;
      /* t = 2 */
      FXBarrierOption *fXBarrierOption;
   } u;
} FXOptionLeg_derivations;

EXTERN int asn1E_FXOptionLeg_derivations (OSCTXT* pctxt,
   FXOptionLeg_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXOptionLeg_derivations (OSCTXT* pctxt, 
   FXOptionLeg_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXOptionLeg_derivations (OSCTXT* pctxt, 
   FXOptionLeg_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXOptionLeg_derivations (OSCTXT* pctxt, 
   FXOptionLeg_derivations* pvalue);

EXTERN int DOMTest_FXOptionLeg_derivations (OSCTXT* pctxt, 
   FXOptionLeg_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXOptionLeg_derivations (FXOptionLeg_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  FxSimpleOption                                            */
/*                                                            */
/**************************************************************/

#define TV_FxSimpleOption	(TM_UNIV|TM_CONS|0)

typedef FXOptionLeg_derivations FxSimpleOption;

EXTERN int asn1E_FxSimpleOption (OSCTXT* pctxt,
   FxSimpleOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxSimpleOption (OSCTXT* pctxt, FxSimpleOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxSimpleOption (OSCTXT* pctxt, FxSimpleOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxSimpleOption (OSCTXT* pctxt, FxSimpleOption* pvalue);

EXTERN int DOMTest_FxSimpleOption (OSCTXT* pctxt, FxSimpleOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxSimpleOption (FxSimpleOption* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDate_unadjustedDate                             */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDate_unadjustedDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDate_unadjustedDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* base;
} AdjustableDate_unadjustedDate;

EXTERN int asn1E_AdjustableDate_unadjustedDate (OSCTXT* pctxt,
   AdjustableDate_unadjustedDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDate_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate_unadjustedDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDate_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate_unadjustedDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDate_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate_unadjustedDate* pvalue);

EXTERN int DOMTest_AdjustableDate_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate_unadjustedDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDate_unadjustedDate (
   AdjustableDate_unadjustedDate* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDayAdjustments_choice                             */
/*                                                            */
/**************************************************************/

#define TV_BusinessDayAdjustments_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_BusinessDayAdjustments_choice_choice 1

typedef struct EXTERN BusinessDayAdjustments_choice {
   int t;
   union {
      /* t = 1 */
      BusinessCentersOrReference_model *choice;
   } u;
} BusinessDayAdjustments_choice;

EXTERN int asn1E_BusinessDayAdjustments_choice (OSCTXT* pctxt,
   BusinessDayAdjustments_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDayAdjustments_choice (OSCTXT* pctxt, 
   BusinessDayAdjustments_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDayAdjustments_choice (OSCTXT* pctxt, 
   BusinessDayAdjustments_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDayAdjustments_choice (OSCTXT* pctxt, 
   BusinessDayAdjustments_choice* pvalue);

EXTERN int DOMTest_BusinessDayAdjustments_choice (OSCTXT* pctxt, 
   BusinessDayAdjustments_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessDayAdjustments_choice (
   BusinessDayAdjustments_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDayAdjustments                                    */
/*                                                            */
/**************************************************************/

#define TV_BusinessDayAdjustments	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessDayAdjustments {
   struct {
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   BusinessDayConventionEnum businessDayConvention;
   BusinessDayAdjustments_choice choice;
} BusinessDayAdjustments;

EXTERN int asn1E_BusinessDayAdjustments (OSCTXT* pctxt,
   BusinessDayAdjustments *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDayAdjustments (OSCTXT* pctxt, 
   BusinessDayAdjustments *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDayAdjustments (OSCTXT* pctxt, 
   BusinessDayAdjustments* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDayAdjustments (OSCTXT* pctxt, 
   BusinessDayAdjustments* pvalue);

EXTERN int DOMTest_BusinessDayAdjustments (OSCTXT* pctxt, 
   BusinessDayAdjustments* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessDayAdjustments (BusinessDayAdjustments* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDate                                            */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableDate_unadjustedDate unadjustedDate;
   BusinessDayAdjustments dateAdjustments;
} AdjustableDate;

EXTERN int asn1E_AdjustableDate (OSCTXT* pctxt,
   AdjustableDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDate (OSCTXT* pctxt, AdjustableDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDate (OSCTXT* pctxt, AdjustableDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDate (OSCTXT* pctxt, AdjustableDate* pvalue);

EXTERN int DOMTest_AdjustableDate (OSCTXT* pctxt, AdjustableDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDate (AdjustableDate* pvalue);

/**************************************************************/
/*                                                            */
/*  PaymentType                                               */
/*                                                            */
/**************************************************************/

#define TV_PaymentType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PaymentType {
   struct {
      unsigned paymentTypeSchemePresent : 1;
   } m;
   const OSUTF8CHAR* paymentTypeScheme;
   const OSUTF8CHAR* base;
} PaymentType;

EXTERN int asn1E_PaymentType (OSCTXT* pctxt,
   PaymentType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PaymentType (OSCTXT* pctxt, PaymentType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PaymentType (OSCTXT* pctxt, PaymentType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PaymentType (OSCTXT* pctxt, PaymentType* pvalue);

EXTERN int DOMTest_PaymentType (OSCTXT* pctxt, PaymentType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PaymentType (PaymentType* pvalue);

/**************************************************************/
/*                                                            */
/*  Payment                                                   */
/*                                                            */
/**************************************************************/

#define TV_Payment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Payment {
   struct {
      unsigned paymentDatePresent : 1;
      unsigned adjustedPaymentDatePresent : 1;
      unsigned paymentTypePresent : 1;
      unsigned settlementInformationPresent : 1;
   } m;
   PayerReceiver_model payerReceiver_model;
   Money_derivations paymentAmount;
   AdjustableDate paymentDate;
   const char* adjustedPaymentDate;
   PaymentType paymentType;
   SettlementInformation settlementInformation;
} Payment;

EXTERN int asn1E_Payment (OSCTXT* pctxt,
   Payment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Payment (OSCTXT* pctxt, Payment *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Payment (OSCTXT* pctxt, Payment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Payment (OSCTXT* pctxt, Payment* pvalue);

EXTERN int DOMTest_Payment (OSCTXT* pctxt, Payment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Payment (Payment* pvalue);

/**************************************************************/
/*                                                            */
/*  FXLeg_sequence                                            */
/*                                                            */
/**************************************************************/

#define TV_FXLeg_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXLeg_sequence {
   const char* currency1ValueDate;
   const char* currency2ValueDate;
} FXLeg_sequence;

EXTERN int asn1E_FXLeg_sequence (OSCTXT* pctxt,
   FXLeg_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXLeg_sequence (OSCTXT* pctxt, FXLeg_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXLeg_sequence (OSCTXT* pctxt, FXLeg_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXLeg_sequence (OSCTXT* pctxt, FXLeg_sequence* pvalue);

EXTERN int DOMTest_FXLeg_sequence (OSCTXT* pctxt, FXLeg_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXLeg_sequence (FXLeg_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  FXLeg_choice                                              */
/*                                                            */
/**************************************************************/

#define TV_FXLeg_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FXLeg_choice_valueDate        1
#define T_FXLeg_choice_sequence         2

typedef struct EXTERN FXLeg_choice {
   int t;
   union {
      /* t = 1 */
      const char* valueDate;
      /* t = 2 */
      FXLeg_sequence *sequence;
   } u;
} FXLeg_choice;

EXTERN int asn1E_FXLeg_choice (OSCTXT* pctxt,
   FXLeg_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXLeg_choice (OSCTXT* pctxt, FXLeg_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXLeg_choice (OSCTXT* pctxt, FXLeg_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXLeg_choice (OSCTXT* pctxt, FXLeg_choice* pvalue);

EXTERN int DOMTest_FXLeg_choice (OSCTXT* pctxt, FXLeg_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXLeg_choice (FXLeg_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  SideRateBasisEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_SideRateBasisEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   SideRateBasisEnum_baseCurrencyPerCurrency1 = 0,
   SideRateBasisEnum_baseCurrencyPerCurrency2 = 1,
   SideRateBasisEnum_currency1PerBaseCurrency = 2,
   SideRateBasisEnum_currency2PerBaseCurrency = 3
} SideRateBasisEnum_Root;

typedef OSUINT32 SideRateBasisEnum;

EXTERN int asn1E_SideRateBasisEnum (OSCTXT* pctxt,
   SideRateBasisEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SideRateBasisEnum (OSCTXT* pctxt, SideRateBasisEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SideRateBasisEnum (OSCTXT* pctxt, SideRateBasisEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SideRateBasisEnum (OSCTXT* pctxt, SideRateBasisEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* SideRateBasisEnum_ToString (OSINT32 value);

EXTERN int SideRateBasisEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, SideRateBasisEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  SideRate                                                  */
/*                                                            */
/**************************************************************/

#define TV_SideRate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SideRate {
   struct {
      unsigned spotRatePresent : 1;
      unsigned forwardPointsPresent : 1;
   } m;
   Currency currency;
   SideRateBasisEnum sideRateBasis;
   OSREAL rate;
   OSREAL spotRate;
   OSREAL forwardPoints;
} SideRate;

EXTERN int asn1E_SideRate (OSCTXT* pctxt,
   SideRate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SideRate (OSCTXT* pctxt, SideRate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SideRate (OSCTXT* pctxt, SideRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SideRate (OSCTXT* pctxt, SideRate* pvalue);

EXTERN int DOMTest_SideRate (OSCTXT* pctxt, SideRate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SideRate (SideRate* pvalue);

/**************************************************************/
/*                                                            */
/*  SideRates                                                 */
/*                                                            */
/**************************************************************/

#define TV_SideRates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SideRates {
   struct {
      unsigned currency1SideRatePresent : 1;
      unsigned currency2SideRatePresent : 1;
   } m;
   Currency baseCurrency;
   SideRate currency1SideRate;
   SideRate currency2SideRate;
} SideRates;

EXTERN int asn1E_SideRates (OSCTXT* pctxt,
   SideRates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SideRates (OSCTXT* pctxt, SideRates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SideRates (OSCTXT* pctxt, SideRates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SideRates (OSCTXT* pctxt, SideRates* pvalue);

EXTERN int DOMTest_SideRates (OSCTXT* pctxt, SideRates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SideRates (SideRates* pvalue);

/**************************************************************/
/*                                                            */
/*  ExchangeRate                                              */
/*                                                            */
/**************************************************************/

#define TV_ExchangeRate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExchangeRate {
   struct {
      unsigned spotRatePresent : 1;
      unsigned forwardPointsPresent : 1;
      unsigned sideRatesPresent : 1;
   } m;
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL rate;
   OSREAL spotRate;
   OSREAL forwardPoints;
   SideRates sideRates;
} ExchangeRate;

EXTERN int asn1E_ExchangeRate (OSCTXT* pctxt,
   ExchangeRate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExchangeRate (OSCTXT* pctxt, ExchangeRate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExchangeRate (OSCTXT* pctxt, ExchangeRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExchangeRate (OSCTXT* pctxt, ExchangeRate* pvalue);

EXTERN int DOMTest_ExchangeRate (OSCTXT* pctxt, ExchangeRate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExchangeRate (ExchangeRate* pvalue);

/**************************************************************/
/*                                                            */
/*  FXLeg                                                     */
/*                                                            */
/**************************************************************/

#define TV_FXLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXLeg {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned nonDeliverableForwardPresent : 1;
      unsigned confirmationSenderPartyReferencePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   Payment exchangedCurrency1;
   Payment exchangedCurrency2;
   FXLeg_choice choice;
   ExchangeRate exchangeRate;
   FXCashSettlement nonDeliverableForward;
   PartyReference confirmationSenderPartyReference;
} FXLeg;

EXTERN int asn1E_FXLeg (OSCTXT* pctxt,
   FXLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXLeg (OSCTXT* pctxt, FXLeg *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FXLeg (OSCTXT* pctxt, FXLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXLeg (OSCTXT* pctxt, FXLeg* pvalue);

EXTERN int DOMTest_FXLeg (OSCTXT* pctxt, FXLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXLeg (FXLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  FxSingleLeg                                               */
/*                                                            */
/**************************************************************/

#define TV_FxSingleLeg	(TM_UNIV|TM_CONS|16)

typedef FXLeg FxSingleLeg;

EXTERN int asn1E_FxSingleLeg (OSCTXT* pctxt,
   FxSingleLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxSingleLeg (OSCTXT* pctxt, FxSingleLeg *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxSingleLeg (OSCTXT* pctxt, FxSingleLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxSingleLeg (OSCTXT* pctxt, FxSingleLeg* pvalue);

EXTERN int DOMTest_FxSingleLeg (OSCTXT* pctxt, FxSingleLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxSingleLeg (FxSingleLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  FXSwap                                                    */
/*                                                            */
/**************************************************************/

#define TV_FXSwap	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXSwap {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   /* List of FxSingleLeg */
   OSRTDList fxSingleLeg_list;
} FXSwap;

EXTERN int asn1E_FXSwap (OSCTXT* pctxt,
   FXSwap *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXSwap (OSCTXT* pctxt, FXSwap *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FXSwap (OSCTXT* pctxt, FXSwap* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXSwap (OSCTXT* pctxt, FXSwap* pvalue);

EXTERN int DOMTest_FXSwap (OSCTXT* pctxt, FXSwap* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXSwap (FXSwap* pvalue);

/**************************************************************/
/*                                                            */
/*  FxSwap                                                    */
/*                                                            */
/**************************************************************/

#define TV_FxSwap	(TM_UNIV|TM_CONS|16)

typedef FXSwap FxSwap;

EXTERN int asn1E_FxSwap (OSCTXT* pctxt,
   FxSwap *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxSwap (OSCTXT* pctxt, FxSwap *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FxSwap (OSCTXT* pctxt, FxSwap* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxSwap (OSCTXT* pctxt, FxSwap* pvalue);

EXTERN int DOMTest_FxSwap (OSCTXT* pctxt, FxSwap* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxSwap (FxSwap* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotablePayment_payerPartyReference                       */
/*                                                            */
/**************************************************************/

#define TV_QuotablePayment_payerPartyReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotablePayment_payerPartyReference {
   const OSUTF8CHAR* href;
} QuotablePayment_payerPartyReference;

EXTERN int asn1E_QuotablePayment_payerPartyReference (OSCTXT* pctxt,
   QuotablePayment_payerPartyReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotablePayment_payerPartyReference (OSCTXT* pctxt, 
   QuotablePayment_payerPartyReference *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_QuotablePayment_payerPartyReference (OSCTXT* pctxt, 
   QuotablePayment_payerPartyReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotablePayment_payerPartyReference (OSCTXT* pctxt, 
   QuotablePayment_payerPartyReference* pvalue);

EXTERN int DOMTest_QuotablePayment_payerPartyReference (OSCTXT* pctxt, 
   QuotablePayment_payerPartyReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotablePayment_payerPartyReference (
   QuotablePayment_payerPartyReference* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotablePayment_receiverPartyReference                    */
/*                                                            */
/**************************************************************/

#define TV_QuotablePayment_receiverPartyReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotablePayment_receiverPartyReference {
   const OSUTF8CHAR* href;
} QuotablePayment_receiverPartyReference;

EXTERN int asn1E_QuotablePayment_receiverPartyReference (OSCTXT* pctxt,
   QuotablePayment_receiverPartyReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotablePayment_receiverPartyReference (OSCTXT* pctxt, 
   QuotablePayment_receiverPartyReference *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_QuotablePayment_receiverPartyReference (OSCTXT* pctxt, 
   QuotablePayment_receiverPartyReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotablePayment_receiverPartyReference (OSCTXT* pctxt, 
   QuotablePayment_receiverPartyReference* pvalue);

EXTERN int DOMTest_QuotablePayment_receiverPartyReference (OSCTXT* pctxt, 
   QuotablePayment_receiverPartyReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotablePayment_receiverPartyReference (
   QuotablePayment_receiverPartyReference* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotablePayment                                           */
/*                                                            */
/**************************************************************/

#define TV_QuotablePayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotablePayment {
   struct {
      unsigned payerPartyReferencePresent : 1;
      unsigned receiverPartyReferencePresent : 1;
      unsigned paymentAmountPresent : 1;
      unsigned paymentDatePresent : 1;
   } m;
   QuotablePayment_payerPartyReference payerPartyReference;
   QuotablePayment_receiverPartyReference receiverPartyReference;
   Money_derivations paymentAmount;
   AdjustableDate paymentDate;
} QuotablePayment;

EXTERN int asn1E_QuotablePayment (OSCTXT* pctxt,
   QuotablePayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotablePayment (OSCTXT* pctxt, QuotablePayment *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotablePayment (OSCTXT* pctxt, QuotablePayment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotablePayment (OSCTXT* pctxt, QuotablePayment* pvalue);

EXTERN int DOMTest_QuotablePayment (OSCTXT* pctxt, QuotablePayment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotablePayment (QuotablePayment* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableFXRate                                            */
/*                                                            */
/**************************************************************/

#define TV_QuotableFXRate	(TM_UNIV|TM_CONS|16)

typedef QuotedCurrencyPair QuotableFXRate;

EXTERN int asn1E_QuotableFXRate (OSCTXT* pctxt,
   QuotableFXRate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableFXRate (OSCTXT* pctxt, QuotableFXRate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableFXRate (OSCTXT* pctxt, QuotableFXRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableFXRate (OSCTXT* pctxt, QuotableFXRate* pvalue);

EXTERN int DOMTest_QuotableFXRate (OSCTXT* pctxt, QuotableFXRate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableFXRate (QuotableFXRate* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableFXLeg                                             */
/*                                                            */
/**************************************************************/

#define TV_QuotableFXLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotableFXLeg {
   struct {
      unsigned productTypePresent : 1;
      unsigned exchangedCurrencyPresent : 1;
      unsigned nonDeliverableForwardPresent : 1;
   } m;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   QuotablePayment exchangedCurrency;
   QuotableFXRate exchangeRate;
   FXCashSettlement nonDeliverableForward;
} QuotableFXLeg;

EXTERN int asn1E_QuotableFXLeg (OSCTXT* pctxt,
   QuotableFXLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableFXLeg (OSCTXT* pctxt, QuotableFXLeg *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableFXLeg (OSCTXT* pctxt, QuotableFXLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableFXLeg (OSCTXT* pctxt, QuotableFXLeg* pvalue);

EXTERN int DOMTest_QuotableFXLeg (OSCTXT* pctxt, QuotableFXLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableFXLeg (QuotableFXLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableFxSingleLeg                                       */
/*                                                            */
/**************************************************************/

#define TV_QuotableFxSingleLeg	(TM_UNIV|TM_CONS|16)

typedef QuotableFXLeg QuotableFxSingleLeg;

EXTERN int asn1E_QuotableFxSingleLeg (OSCTXT* pctxt,
   QuotableFxSingleLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableFxSingleLeg (OSCTXT* pctxt, 
   QuotableFxSingleLeg *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableFxSingleLeg (OSCTXT* pctxt, 
   QuotableFxSingleLeg* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableFxSingleLeg (OSCTXT* pctxt, 
   QuotableFxSingleLeg* pvalue);

EXTERN int DOMTest_QuotableFxSingleLeg (OSCTXT* pctxt, QuotableFxSingleLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableFxSingleLeg (QuotableFxSingleLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  DataDocument_version                                      */
/*                                                            */
/**************************************************************/

#define TV_DataDocument_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_1 = 0
} DataDocument_version_Root;

typedef OSUINT32 DataDocument_version;

EXTERN int asn1E_DataDocument_version (OSCTXT* pctxt,
   DataDocument_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DataDocument_version (OSCTXT* pctxt, 
   DataDocument_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DataDocument_version (OSCTXT* pctxt, 
   DataDocument_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DataDocument_version (OSCTXT* pctxt, 
   DataDocument_version* pvalue);

EXTERN const OSUTF8CHAR* DataDocument_version_ToString (OSINT32 value);

EXTERN int DataDocument_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DataDocument_version* pvalue);

/**************************************************************/
/*                                                            */
/*  Validation                                                */
/*                                                            */
/**************************************************************/

#define TV_Validation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Validation {
   const OSUTF8CHAR* validationScheme;
} Validation;

EXTERN int asn1E_Validation (OSCTXT* pctxt,
   Validation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Validation (OSCTXT* pctxt, Validation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Validation (OSCTXT* pctxt, Validation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Validation (OSCTXT* pctxt, Validation* pvalue);

EXTERN int DOMTest_Validation (OSCTXT* pctxt, Validation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Validation (Validation* pvalue);

/**************************************************************/
/*                                                            */
/*  Validation_model                                          */
/*                                                            */
/**************************************************************/

#define TV_Validation_model	(TM_UNIV|TM_CONS|16)

/* List of Validation */
typedef OSRTDList Validation_model;

EXTERN int asn1E_Validation_model (OSCTXT* pctxt,
   Validation_model *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Validation_model (OSCTXT* pctxt, Validation_model *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Validation_model (OSCTXT* pctxt, Validation_model* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Validation_model (OSCTXT* pctxt, Validation_model* pvalue);

EXTERN int DOMTest_Validation_model (OSCTXT* pctxt, Validation_model* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Validation_model (Validation_model* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeId                                                   */
/*                                                            */
/**************************************************************/

#define TV_TradeId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeId {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* tradeIdScheme;
   const OSUTF8CHAR* base;
} TradeId;

EXTERN int asn1E_TradeId (OSCTXT* pctxt,
   TradeId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeId (OSCTXT* pctxt, TradeId *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_TradeId (OSCTXT* pctxt, TradeId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeId (OSCTXT* pctxt, TradeId* pvalue);

EXTERN int DOMTest_TradeId (OSCTXT* pctxt, TradeId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeId (TradeId* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyTradeIdentifier_linkId                               */
/*                                                            */
/**************************************************************/

#define TV_PartyTradeIdentifier_linkId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyTradeIdentifier_linkId {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* linkIdScheme;
   const OSUTF8CHAR* base;
} PartyTradeIdentifier_linkId;

EXTERN int asn1E_PartyTradeIdentifier_linkId (OSCTXT* pctxt,
   PartyTradeIdentifier_linkId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyTradeIdentifier_linkId (OSCTXT* pctxt, 
   PartyTradeIdentifier_linkId *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartyTradeIdentifier_linkId (OSCTXT* pctxt, 
   PartyTradeIdentifier_linkId* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyTradeIdentifier_linkId (OSCTXT* pctxt, 
   PartyTradeIdentifier_linkId* pvalue);

EXTERN int DOMTest_PartyTradeIdentifier_linkId (OSCTXT* pctxt, 
   PartyTradeIdentifier_linkId* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyTradeIdentifier_linkId (PartyTradeIdentifier_linkId* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyTradeIdentifier                                      */
/*                                                            */
/**************************************************************/

#define TV_PartyTradeIdentifier	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyTradeIdentifier {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PartyReference partyReference;
   /* List of TradeId */
   OSRTDList tradeId_list;
   /* List of PartyTradeIdentifier_linkId */
   OSRTDList linkId_list;
} PartyTradeIdentifier;

EXTERN int asn1E_PartyTradeIdentifier (OSCTXT* pctxt,
   PartyTradeIdentifier *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyTradeIdentifier (OSCTXT* pctxt, 
   PartyTradeIdentifier *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartyTradeIdentifier (OSCTXT* pctxt, 
   PartyTradeIdentifier* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyTradeIdentifier (OSCTXT* pctxt, 
   PartyTradeIdentifier* pvalue);

EXTERN int DOMTest_PartyTradeIdentifier (OSCTXT* pctxt, PartyTradeIdentifier* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyTradeIdentifier (PartyTradeIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyTradeInformation                                     */
/*                                                            */
/**************************************************************/

#define TV_PartyTradeInformation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyTradeInformation {
   PartyReference partyReference;
   /* List of const OSUTF8CHAR* */
   OSRTDList trader_list;
} PartyTradeInformation;

EXTERN int asn1E_PartyTradeInformation (OSCTXT* pctxt,
   PartyTradeInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyTradeInformation (OSCTXT* pctxt, 
   PartyTradeInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartyTradeInformation (OSCTXT* pctxt, 
   PartyTradeInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyTradeInformation (OSCTXT* pctxt, 
   PartyTradeInformation* pvalue);

EXTERN int DOMTest_PartyTradeInformation (OSCTXT* pctxt, 
   PartyTradeInformation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyTradeInformation (PartyTradeInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeDate                                                 */
/*                                                            */
/**************************************************************/

#define TV_TradeDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* base;
} TradeDate;

EXTERN int asn1E_TradeDate (OSCTXT* pctxt,
   TradeDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeDate (OSCTXT* pctxt, TradeDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeDate (OSCTXT* pctxt, TradeDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeDate (OSCTXT* pctxt, TradeDate* pvalue);

EXTERN int DOMTest_TradeDate (OSCTXT* pctxt, TradeDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeDate (TradeDate* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeHeader                                               */
/*                                                            */
/**************************************************************/

#define TV_TradeHeader	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeHeader {
   /* List of PartyTradeIdentifier */
   OSRTDList partyTradeIdentifier_list;
   /* List of PartyTradeInformation */
   OSRTDList partyTradeInformation_list;
   TradeDate tradeDate;
} TradeHeader;

EXTERN int asn1E_TradeHeader (OSCTXT* pctxt,
   TradeHeader *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeHeader (OSCTXT* pctxt, TradeHeader *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeHeader (OSCTXT* pctxt, TradeHeader* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeHeader (OSCTXT* pctxt, TradeHeader* pvalue);

EXTERN int DOMTest_TradeHeader (OSCTXT* pctxt, TradeHeader* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeHeader (TradeHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  ProductReference                                          */
/*                                                            */
/**************************************************************/

#define TV_ProductReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ProductReference {
   const OSUTF8CHAR* href;
} ProductReference;

EXTERN int asn1E_ProductReference (OSCTXT* pctxt,
   ProductReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ProductReference (OSCTXT* pctxt, ProductReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ProductReference (OSCTXT* pctxt, ProductReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProductReference (OSCTXT* pctxt, ProductReference* pvalue);

EXTERN int DOMTest_ProductReference (OSCTXT* pctxt, ProductReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ProductReference (ProductReference* pvalue);

/**************************************************************/
/*                                                            */
/*  Strategy                                                  */
/*                                                            */
/**************************************************************/

#define TV_Strategy	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Strategy {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned premiumProductReferencePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   ProductReference premiumProductReference;
   /* List of Product_group */
   OSRTDList product_list;
} Strategy;

EXTERN int asn1E_Strategy (OSCTXT* pctxt,
   Strategy *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Strategy (OSCTXT* pctxt, Strategy *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Strategy (OSCTXT* pctxt, Strategy* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Strategy (OSCTXT* pctxt, Strategy* pvalue);

EXTERN int DOMTest_Strategy (OSCTXT* pctxt, Strategy* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Strategy (Strategy* pvalue);

/**************************************************************/
/*                                                            */
/*  DayCountFractionEnum                                      */
/*                                                            */
/**************************************************************/

#define TV_DayCountFractionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DayCountFractionEnum_x11 = 0,
   DayCountFractionEnum_x30360 = 1,
   DayCountFractionEnum_x30E360 = 2,
   DayCountFractionEnum_aCT360 = 3,
   DayCountFractionEnum_aCT365_FIXED = 4,
   DayCountFractionEnum_aCTACT_AFB = 5,
   DayCountFractionEnum_aCTACT_ISDA = 6,
   DayCountFractionEnum_aCTACT_ISMA = 7
} DayCountFractionEnum_Root;

typedef OSUINT32 DayCountFractionEnum;

EXTERN int asn1E_DayCountFractionEnum (OSCTXT* pctxt,
   DayCountFractionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DayCountFractionEnum (OSCTXT* pctxt, 
   DayCountFractionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DayCountFractionEnum (OSCTXT* pctxt, 
   DayCountFractionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DayCountFractionEnum (OSCTXT* pctxt, 
   DayCountFractionEnum* pvalue);

EXTERN const OSUTF8CHAR* DayCountFractionEnum_ToString (OSINT32 value);

EXTERN int DayCountFractionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DayCountFractionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  TermDeposit                                               */
/*                                                            */
/**************************************************************/

#define TV_TermDeposit	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TermDeposit {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned interestPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   PartyReference initialPayerReference;
   PartyReference initialReceiverReference;
   const char* startDate;
   const char* maturityDate;
   DayCountFractionEnum dayCountFraction;
   Money_derivations principal;
   OSREAL fixedRate;
   Money_derivations interest;
   /* List of Payment */
   OSRTDList payment_list;
} TermDeposit;

EXTERN int asn1E_TermDeposit (OSCTXT* pctxt,
   TermDeposit *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TermDeposit (OSCTXT* pctxt, TermDeposit *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TermDeposit (OSCTXT* pctxt, TermDeposit* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TermDeposit (OSCTXT* pctxt, TermDeposit* pvalue);

EXTERN int DOMTest_TermDeposit (OSCTXT* pctxt, TermDeposit* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TermDeposit (TermDeposit* pvalue);

/**************************************************************/
/*                                                            */
/*  BulletPayment                                             */
/*                                                            */
/**************************************************************/

#define TV_BulletPayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BulletPayment {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   Payment payment;
} BulletPayment;

EXTERN int asn1E_BulletPayment (OSCTXT* pctxt,
   BulletPayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BulletPayment (OSCTXT* pctxt, BulletPayment *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BulletPayment (OSCTXT* pctxt, BulletPayment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BulletPayment (OSCTXT* pctxt, BulletPayment* pvalue);

EXTERN int DOMTest_BulletPayment (OSCTXT* pctxt, BulletPayment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BulletPayment (BulletPayment* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriodDates                                    */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriodDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CalculationPeriodDates {
   struct {
      unsigned firstPeriodStartDatePresent : 1;
      unsigned firstRegularPeriodStartDatePresent : 1;
      unsigned lastRegularPeriodEndDatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableDate effectiveDate;
   AdjustableDate terminationDate;
   BusinessDayAdjustments calculationPeriodDatesAdjustments;
   AdjustableDate firstPeriodStartDate;
   const char* firstRegularPeriodStartDate;
   const char* lastRegularPeriodEndDate;
   CalculationPeriodFrequency calculationPeriodFrequency;
} CalculationPeriodDates;

EXTERN int asn1E_CalculationPeriodDates (OSCTXT* pctxt,
   CalculationPeriodDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriodDates (OSCTXT* pctxt, 
   CalculationPeriodDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriodDates (OSCTXT* pctxt, 
   CalculationPeriodDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriodDates (OSCTXT* pctxt, 
   CalculationPeriodDates* pvalue);

EXTERN int DOMTest_CalculationPeriodDates (OSCTXT* pctxt, 
   CalculationPeriodDates* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriodDates (CalculationPeriodDates* pvalue);

/**************************************************************/
/*                                                            */
/*  DateReference                                             */
/*                                                            */
/**************************************************************/

#define TV_DateReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DateReference {
   const OSUTF8CHAR* href;
} DateReference;

EXTERN int asn1E_DateReference (OSCTXT* pctxt,
   DateReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateReference (OSCTXT* pctxt, DateReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateReference (OSCTXT* pctxt, DateReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateReference (OSCTXT* pctxt, DateReference* pvalue);

EXTERN int DOMTest_DateReference (OSCTXT* pctxt, DateReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateReference (DateReference* pvalue);

/**************************************************************/
/*                                                            */
/*  PaymentDates_choice                                       */
/*                                                            */
/**************************************************************/

#define TV_PaymentDates_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PaymentDates_choice_calculationPeriodDatesReference 1
#define T_PaymentDates_choice_resetDatesReference 2

typedef struct EXTERN PaymentDates_choice {
   int t;
   union {
      /* t = 1 */
      DateReference *calculationPeriodDatesReference;
      /* t = 2 */
      DateReference *resetDatesReference;
   } u;
} PaymentDates_choice;

EXTERN int asn1E_PaymentDates_choice (OSCTXT* pctxt,
   PaymentDates_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PaymentDates_choice (OSCTXT* pctxt, 
   PaymentDates_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PaymentDates_choice (OSCTXT* pctxt, 
   PaymentDates_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PaymentDates_choice (OSCTXT* pctxt, 
   PaymentDates_choice* pvalue);

EXTERN int DOMTest_PaymentDates_choice (OSCTXT* pctxt, PaymentDates_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PaymentDates_choice (PaymentDates_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  PayRelativeToEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_PayRelativeToEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PayRelativeToEnum_calculationPeriodEndDate = 0,
   PayRelativeToEnum_calculationPeriodStartDate = 1,
   PayRelativeToEnum_resetDate = 2
} PayRelativeToEnum_Root;

typedef OSUINT32 PayRelativeToEnum;

EXTERN int asn1E_PayRelativeToEnum (OSCTXT* pctxt,
   PayRelativeToEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PayRelativeToEnum (OSCTXT* pctxt, PayRelativeToEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PayRelativeToEnum (OSCTXT* pctxt, PayRelativeToEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PayRelativeToEnum (OSCTXT* pctxt, PayRelativeToEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* PayRelativeToEnum_ToString (OSINT32 value);

EXTERN int PayRelativeToEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PayRelativeToEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  PaymentDates                                              */
/*                                                            */
/**************************************************************/

#define TV_PaymentDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PaymentDates {
   struct {
      unsigned idPresent : 1;
      unsigned firstPaymentDatePresent : 1;
      unsigned lastRegularPaymentDatePresent : 1;
      unsigned paymentDaysOffsetPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PaymentDates_choice choice;
   Interval_derivations paymentFrequency;
   const char* firstPaymentDate;
   const char* lastRegularPaymentDate;
   PayRelativeToEnum payRelativeTo;
   Offset_derivations paymentDaysOffset;
   BusinessDayAdjustments paymentDatesAdjustments;
} PaymentDates;

EXTERN int asn1E_PaymentDates (OSCTXT* pctxt,
   PaymentDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PaymentDates (OSCTXT* pctxt, PaymentDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PaymentDates (OSCTXT* pctxt, PaymentDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PaymentDates (OSCTXT* pctxt, PaymentDates* pvalue);

EXTERN int DOMTest_PaymentDates (OSCTXT* pctxt, PaymentDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PaymentDates (PaymentDates* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetRelativeToEnum                                       */
/*                                                            */
/**************************************************************/

#define TV_ResetRelativeToEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ResetRelativeToEnum_calculationPeriodEndDate = 0,
   ResetRelativeToEnum_calculationPeriodStartDate = 1
} ResetRelativeToEnum_Root;

typedef OSUINT32 ResetRelativeToEnum;

EXTERN int asn1E_ResetRelativeToEnum (OSCTXT* pctxt,
   ResetRelativeToEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResetRelativeToEnum (OSCTXT* pctxt, 
   ResetRelativeToEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResetRelativeToEnum (OSCTXT* pctxt, 
   ResetRelativeToEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResetRelativeToEnum (OSCTXT* pctxt, 
   ResetRelativeToEnum* pvalue);

EXTERN const OSUTF8CHAR* ResetRelativeToEnum_ToString (OSINT32 value);

EXTERN int ResetRelativeToEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ResetRelativeToEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  ResetDates                                                */
/*                                                            */
/**************************************************************/

#define TV_ResetDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ResetDates {
   struct {
      unsigned resetRelativeToPresent : 1;
      unsigned initialFixingDatePresent : 1;
      unsigned rateCutOffDaysOffsetPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   DateReference calculationPeriodDatesReference;
   ResetRelativeToEnum resetRelativeTo;
   RelativeDateOffset_derivations initialFixingDate;
   RelativeDateOffset_derivations fixingDates;
   Offset_derivations rateCutOffDaysOffset;
   ResetFrequency resetFrequency;
   BusinessDayAdjustments resetDatesAdjustments;
} ResetDates;

EXTERN int asn1E_ResetDates (OSCTXT* pctxt,
   ResetDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResetDates (OSCTXT* pctxt, ResetDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResetDates (OSCTXT* pctxt, ResetDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResetDates (OSCTXT* pctxt, ResetDates* pvalue);

EXTERN int DOMTest_ResetDates (OSCTXT* pctxt, ResetDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResetDates (ResetDates* pvalue);

/**************************************************************/
/*                                                            */
/*  Step                                                      */
/*                                                            */
/**************************************************************/

#define TV_Step	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Step {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* stepDate;
   OSREAL stepValue;
} Step;

EXTERN int asn1E_Step (OSCTXT* pctxt,
   Step *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Step (OSCTXT* pctxt, Step *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Step (OSCTXT* pctxt, Step* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Step (OSCTXT* pctxt, Step* pvalue);

EXTERN int DOMTest_Step (OSCTXT* pctxt, Step* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Step (Step* pvalue);

/**************************************************************/
/*                                                            */
/*  AmountSchedule                                            */
/*                                                            */
/**************************************************************/

#define TV_AmountSchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AmountSchedule {
   OSREAL initialValue;
   /* List of Step */
   OSRTDList step_list;
   Currency currency;
} AmountSchedule;

EXTERN int asn1E_AmountSchedule (OSCTXT* pctxt,
   AmountSchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AmountSchedule (OSCTXT* pctxt, AmountSchedule *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AmountSchedule (OSCTXT* pctxt, AmountSchedule* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AmountSchedule (OSCTXT* pctxt, AmountSchedule* pvalue);

EXTERN int DOMTest_AmountSchedule (OSCTXT* pctxt, AmountSchedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AmountSchedule (AmountSchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  StepRelativeToEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_StepRelativeToEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   StepRelativeToEnum_initial = 0,
   StepRelativeToEnum_previous = 1
} StepRelativeToEnum_Root;

typedef OSUINT32 StepRelativeToEnum;

EXTERN int asn1E_StepRelativeToEnum (OSCTXT* pctxt,
   StepRelativeToEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StepRelativeToEnum (OSCTXT* pctxt, 
   StepRelativeToEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StepRelativeToEnum (OSCTXT* pctxt, StepRelativeToEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StepRelativeToEnum (OSCTXT* pctxt, 
   StepRelativeToEnum* pvalue);

EXTERN const OSUTF8CHAR* StepRelativeToEnum_ToString (OSINT32 value);

EXTERN int StepRelativeToEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, StepRelativeToEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  NotionalStepRule_sequence                                 */
/*                                                            */
/**************************************************************/

#define TV_NotionalStepRule_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotionalStepRule_sequence {
   OSREAL notionalStepRate;
   StepRelativeToEnum stepRelativeTo;
} NotionalStepRule_sequence;

EXTERN int asn1E_NotionalStepRule_sequence (OSCTXT* pctxt,
   NotionalStepRule_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotionalStepRule_sequence (OSCTXT* pctxt, 
   NotionalStepRule_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotionalStepRule_sequence (OSCTXT* pctxt, 
   NotionalStepRule_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotionalStepRule_sequence (OSCTXT* pctxt, 
   NotionalStepRule_sequence* pvalue);

EXTERN int DOMTest_NotionalStepRule_sequence (OSCTXT* pctxt, 
   NotionalStepRule_sequence* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotionalStepRule_sequence (NotionalStepRule_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  NotionalStepRule_choice                                   */
/*                                                            */
/**************************************************************/

#define TV_NotionalStepRule_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_NotionalStepRule_choice_notionalStepAmount 1
#define T_NotionalStepRule_choice_sequence 2

typedef struct EXTERN NotionalStepRule_choice {
   int t;
   union {
      /* t = 1 */
      OSREAL notionalStepAmount;
      /* t = 2 */
      NotionalStepRule_sequence *sequence;
   } u;
} NotionalStepRule_choice;

EXTERN int asn1E_NotionalStepRule_choice (OSCTXT* pctxt,
   NotionalStepRule_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotionalStepRule_choice (OSCTXT* pctxt, 
   NotionalStepRule_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotionalStepRule_choice (OSCTXT* pctxt, 
   NotionalStepRule_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotionalStepRule_choice (OSCTXT* pctxt, 
   NotionalStepRule_choice* pvalue);

EXTERN int DOMTest_NotionalStepRule_choice (OSCTXT* pctxt, 
   NotionalStepRule_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotionalStepRule_choice (NotionalStepRule_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  NotionalStepRule                                          */
/*                                                            */
/**************************************************************/

#define TV_NotionalStepRule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotionalStepRule {
   DateReference calculationPeriodDatesReference;
   Interval_derivations stepFrequency;
   const char* firstNotionalStepDate;
   const char* lastNotionalStepDate;
   NotionalStepRule_choice choice;
} NotionalStepRule;

EXTERN int asn1E_NotionalStepRule (OSCTXT* pctxt,
   NotionalStepRule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotionalStepRule (OSCTXT* pctxt, NotionalStepRule *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotionalStepRule (OSCTXT* pctxt, NotionalStepRule* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotionalStepRule (OSCTXT* pctxt, NotionalStepRule* pvalue);

EXTERN int DOMTest_NotionalStepRule (OSCTXT* pctxt, NotionalStepRule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotionalStepRule (NotionalStepRule* pvalue);

/**************************************************************/
/*                                                            */
/*  Notional                                                  */
/*                                                            */
/**************************************************************/

#define TV_Notional	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Notional {
   struct {
      unsigned idPresent : 1;
      unsigned notionalStepParametersPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AmountSchedule notionalStepSchedule;
   NotionalStepRule notionalStepParameters;
} Notional;

EXTERN int asn1E_Notional (OSCTXT* pctxt,
   Notional *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Notional (OSCTXT* pctxt, Notional *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Notional (OSCTXT* pctxt, Notional* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Notional (OSCTXT* pctxt, Notional* pvalue);

EXTERN int DOMTest_Notional (OSCTXT* pctxt, Notional* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Notional (Notional* pvalue);

/**************************************************************/
/*                                                            */
/*  NotionalReference                                         */
/*                                                            */
/**************************************************************/

#define TV_NotionalReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotionalReference {
   const OSUTF8CHAR* href;
} NotionalReference;

EXTERN int asn1E_NotionalReference (OSCTXT* pctxt,
   NotionalReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotionalReference (OSCTXT* pctxt, NotionalReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotionalReference (OSCTXT* pctxt, NotionalReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotionalReference (OSCTXT* pctxt, NotionalReference* pvalue)
   ;

EXTERN int DOMTest_NotionalReference (OSCTXT* pctxt, NotionalReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotionalReference (NotionalReference* pvalue);

/**************************************************************/
/*                                                            */
/*  FxSpotRateSource                                          */
/*                                                            */
/**************************************************************/

#define TV_FxSpotRateSource	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FxSpotRateSource {
   struct {
      unsigned secondaryRateSourcePresent : 1;
   } m;
   InformationSource primaryRateSource;
   InformationSource secondaryRateSource;
   BusinessCenterTime fixingTime;
} FxSpotRateSource;

EXTERN int asn1E_FxSpotRateSource (OSCTXT* pctxt,
   FxSpotRateSource *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxSpotRateSource (OSCTXT* pctxt, FxSpotRateSource *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxSpotRateSource (OSCTXT* pctxt, FxSpotRateSource* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxSpotRateSource (OSCTXT* pctxt, FxSpotRateSource* pvalue);

EXTERN int DOMTest_FxSpotRateSource (OSCTXT* pctxt, FxSpotRateSource* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxSpotRateSource (FxSpotRateSource* pvalue);

/**************************************************************/
/*                                                            */
/*  FxSpotRateSource_derivations                              */
/*                                                            */
/**************************************************************/

#define TV_FxSpotRateSource_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FxSpotRateSource_derivations_fxSpotRateSource 1
#define T_FxSpotRateSource_derivations_fXFixing 2

typedef struct EXTERN FxSpotRateSource_derivations {
   int t;
   union {
      /* t = 1 */
      FxSpotRateSource *fxSpotRateSource;
      /* t = 2 */
      FXFixing *fXFixing;
   } u;
} FxSpotRateSource_derivations;

EXTERN int asn1E_FxSpotRateSource_derivations (OSCTXT* pctxt,
   FxSpotRateSource_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxSpotRateSource_derivations (OSCTXT* pctxt, 
   FxSpotRateSource_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxSpotRateSource_derivations (OSCTXT* pctxt, 
   FxSpotRateSource_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxSpotRateSource_derivations (OSCTXT* pctxt, 
   FxSpotRateSource_derivations* pvalue);

EXTERN int DOMTest_FxSpotRateSource_derivations (OSCTXT* pctxt, 
   FxSpotRateSource_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxSpotRateSource_derivations (
   FxSpotRateSource_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  FxLinkedNotionalSchedule                                  */
/*                                                            */
/**************************************************************/

#define TV_FxLinkedNotionalSchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FxLinkedNotionalSchedule {
   struct {
      unsigned initialValuePresent : 1;
   } m;
   NotionalReference constantNotionalScheduleReference;
   OSREAL initialValue;
   const OSUTF8CHAR* varyingNotionalCurrency;
   RelativeDateOffset_derivations varyingNotionalFixingDates;
   FxSpotRateSource_derivations fxSpotRateSource;
   RelativeDateOffset_derivations varyingNotionalInterimExchangePaymentDates;
} FxLinkedNotionalSchedule;

EXTERN int asn1E_FxLinkedNotionalSchedule (OSCTXT* pctxt,
   FxLinkedNotionalSchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxLinkedNotionalSchedule (OSCTXT* pctxt, 
   FxLinkedNotionalSchedule *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxLinkedNotionalSchedule (OSCTXT* pctxt, 
   FxLinkedNotionalSchedule* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxLinkedNotionalSchedule (OSCTXT* pctxt, 
   FxLinkedNotionalSchedule* pvalue);

EXTERN int DOMTest_FxLinkedNotionalSchedule (OSCTXT* pctxt, 
   FxLinkedNotionalSchedule* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxLinkedNotionalSchedule (FxLinkedNotionalSchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  Calculation_choice                                        */
/*                                                            */
/**************************************************************/

#define TV_Calculation_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Calculation_choice_notionalSchedule 1
#define T_Calculation_choice_fxLinkedNotionalSchedule 2

typedef struct EXTERN Calculation_choice {
   int t;
   union {
      /* t = 1 */
      Notional *notionalSchedule;
      /* t = 2 */
      FxLinkedNotionalSchedule *fxLinkedNotionalSchedule;
   } u;
} Calculation_choice;

EXTERN int asn1E_Calculation_choice (OSCTXT* pctxt,
   Calculation_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Calculation_choice (OSCTXT* pctxt, 
   Calculation_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Calculation_choice (OSCTXT* pctxt, 
   Calculation_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Calculation_choice (OSCTXT* pctxt, 
   Calculation_choice* pvalue);

EXTERN int DOMTest_Calculation_choice (OSCTXT* pctxt, Calculation_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Calculation_choice (Calculation_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Schedule                                                  */
/*                                                            */
/**************************************************************/

#define TV_Schedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Schedule {
   OSREAL initialValue;
   /* List of Step */
   OSRTDList step_list;
} Schedule;

EXTERN int asn1E_Schedule (OSCTXT* pctxt,
   Schedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Schedule (OSCTXT* pctxt, Schedule *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Schedule (OSCTXT* pctxt, Schedule* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Schedule (OSCTXT* pctxt, Schedule* pvalue);

EXTERN int DOMTest_Schedule (OSCTXT* pctxt, Schedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Schedule (Schedule* pvalue);

/**************************************************************/
/*                                                            */
/*  PayerReceiverEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_PayerReceiverEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PayerReceiverEnum_payer = 0,
   PayerReceiverEnum_receiver = 1
} PayerReceiverEnum_Root;

typedef OSUINT32 PayerReceiverEnum;

EXTERN int asn1E_PayerReceiverEnum (OSCTXT* pctxt,
   PayerReceiverEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PayerReceiverEnum (OSCTXT* pctxt, PayerReceiverEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PayerReceiverEnum (OSCTXT* pctxt, PayerReceiverEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PayerReceiverEnum (OSCTXT* pctxt, PayerReceiverEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* PayerReceiverEnum_ToString (OSINT32 value);

EXTERN int PayerReceiverEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PayerReceiverEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  StrikeSchedule_buyer                                      */
/*                                                            */
/**************************************************************/

#define TV_StrikeSchedule_buyer	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN StrikeSchedule_buyer {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PayerReceiverEnum base;
} StrikeSchedule_buyer;

EXTERN int asn1E_StrikeSchedule_buyer (OSCTXT* pctxt,
   StrikeSchedule_buyer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StrikeSchedule_buyer (OSCTXT* pctxt, 
   StrikeSchedule_buyer *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StrikeSchedule_buyer (OSCTXT* pctxt, 
   StrikeSchedule_buyer* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StrikeSchedule_buyer (OSCTXT* pctxt, 
   StrikeSchedule_buyer* pvalue);

EXTERN int DOMTest_StrikeSchedule_buyer (OSCTXT* pctxt, StrikeSchedule_buyer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StrikeSchedule_buyer (StrikeSchedule_buyer* pvalue);

/**************************************************************/
/*                                                            */
/*  StrikeSchedule_seller                                     */
/*                                                            */
/**************************************************************/

#define TV_StrikeSchedule_seller	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN StrikeSchedule_seller {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PayerReceiverEnum base;
} StrikeSchedule_seller;

EXTERN int asn1E_StrikeSchedule_seller (OSCTXT* pctxt,
   StrikeSchedule_seller *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StrikeSchedule_seller (OSCTXT* pctxt, 
   StrikeSchedule_seller *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StrikeSchedule_seller (OSCTXT* pctxt, 
   StrikeSchedule_seller* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StrikeSchedule_seller (OSCTXT* pctxt, 
   StrikeSchedule_seller* pvalue);

EXTERN int DOMTest_StrikeSchedule_seller (OSCTXT* pctxt, 
   StrikeSchedule_seller* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StrikeSchedule_seller (StrikeSchedule_seller* pvalue);

/**************************************************************/
/*                                                            */
/*  StrikeSchedule                                            */
/*                                                            */
/**************************************************************/

#define TV_StrikeSchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN StrikeSchedule {
   struct {
      unsigned idPresent : 1;
      unsigned buyerPresent : 1;
      unsigned sellerPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSREAL initialValue;
   /* List of Step */
   OSRTDList step_list;
   StrikeSchedule_buyer buyer;
   StrikeSchedule_seller seller;
} StrikeSchedule;

EXTERN int asn1E_StrikeSchedule (OSCTXT* pctxt,
   StrikeSchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StrikeSchedule (OSCTXT* pctxt, StrikeSchedule *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_StrikeSchedule (OSCTXT* pctxt, StrikeSchedule* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StrikeSchedule (OSCTXT* pctxt, StrikeSchedule* pvalue);

EXTERN int DOMTest_StrikeSchedule (OSCTXT* pctxt, StrikeSchedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StrikeSchedule (StrikeSchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  Schedule_derivations                                      */
/*                                                            */
/**************************************************************/

#define TV_Schedule_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Schedule_derivations_schedule 1
#define T_Schedule_derivations_amountSchedule 2
#define T_Schedule_derivations_strikeSchedule 3

typedef struct EXTERN Schedule_derivations {
   int t;
   union {
      /* t = 1 */
      Schedule *schedule;
      /* t = 2 */
      AmountSchedule *amountSchedule;
      /* t = 3 */
      StrikeSchedule *strikeSchedule;
   } u;
} Schedule_derivations;

EXTERN int asn1E_Schedule_derivations (OSCTXT* pctxt,
   Schedule_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Schedule_derivations (OSCTXT* pctxt, 
   Schedule_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Schedule_derivations (OSCTXT* pctxt, 
   Schedule_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Schedule_derivations (OSCTXT* pctxt, 
   Schedule_derivations* pvalue);

EXTERN int DOMTest_Schedule_derivations (OSCTXT* pctxt, Schedule_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Schedule_derivations (Schedule_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  FloatingRateIndex                                         */
/*                                                            */
/**************************************************************/

#define TV_FloatingRateIndex	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FloatingRateIndex {
   struct {
      unsigned floatingRateIndexSchemePresent : 1;
   } m;
   const OSUTF8CHAR* floatingRateIndexScheme;
   const OSUTF8CHAR* base;
} FloatingRateIndex;

EXTERN int asn1E_FloatingRateIndex (OSCTXT* pctxt,
   FloatingRateIndex *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FloatingRateIndex (OSCTXT* pctxt, FloatingRateIndex *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FloatingRateIndex (OSCTXT* pctxt, FloatingRateIndex* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FloatingRateIndex (OSCTXT* pctxt, FloatingRateIndex* pvalue)
   ;

EXTERN int DOMTest_FloatingRateIndex (OSCTXT* pctxt, FloatingRateIndex* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FloatingRateIndex (FloatingRateIndex* pvalue);

/**************************************************************/
/*                                                            */
/*  RateTreatmentEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_RateTreatmentEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   RateTreatmentEnum_bondEquivalentYield = 0,
   RateTreatmentEnum_moneyMarketYield = 1
} RateTreatmentEnum_Root;

typedef OSUINT32 RateTreatmentEnum;

EXTERN int asn1E_RateTreatmentEnum (OSCTXT* pctxt,
   RateTreatmentEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RateTreatmentEnum (OSCTXT* pctxt, RateTreatmentEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RateTreatmentEnum (OSCTXT* pctxt, RateTreatmentEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RateTreatmentEnum (OSCTXT* pctxt, RateTreatmentEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* RateTreatmentEnum_ToString (OSINT32 value);

EXTERN int RateTreatmentEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RateTreatmentEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  RoundingDirectionEnum                                     */
/*                                                            */
/**************************************************************/

#define TV_RoundingDirectionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   RoundingDirectionEnum_down = 0,
   RoundingDirectionEnum_nearest = 1,
   RoundingDirectionEnum_up = 2
} RoundingDirectionEnum_Root;

typedef OSUINT32 RoundingDirectionEnum;

EXTERN int asn1E_RoundingDirectionEnum (OSCTXT* pctxt,
   RoundingDirectionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RoundingDirectionEnum (OSCTXT* pctxt, 
   RoundingDirectionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RoundingDirectionEnum (OSCTXT* pctxt, 
   RoundingDirectionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RoundingDirectionEnum (OSCTXT* pctxt, 
   RoundingDirectionEnum* pvalue);

EXTERN const OSUTF8CHAR* RoundingDirectionEnum_ToString (OSINT32 value);

EXTERN int RoundingDirectionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RoundingDirectionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Rounding                                                  */
/*                                                            */
/**************************************************************/

#define TV_Rounding	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Rounding {
   RoundingDirectionEnum roundingDirection;
   OSUINT32 precision;
} Rounding;

EXTERN int asn1E_Rounding (OSCTXT* pctxt,
   Rounding *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Rounding (OSCTXT* pctxt, Rounding *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Rounding (OSCTXT* pctxt, Rounding* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Rounding (OSCTXT* pctxt, Rounding* pvalue);

EXTERN int DOMTest_Rounding (OSCTXT* pctxt, Rounding* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Rounding (Rounding* pvalue);

/**************************************************************/
/*                                                            */
/*  AveragingMethodEnum                                       */
/*                                                            */
/**************************************************************/

#define TV_AveragingMethodEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   AveragingMethodEnum_unweighted = 0,
   AveragingMethodEnum_weighted = 1
} AveragingMethodEnum_Root;

typedef OSUINT32 AveragingMethodEnum;

EXTERN int asn1E_AveragingMethodEnum (OSCTXT* pctxt,
   AveragingMethodEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AveragingMethodEnum (OSCTXT* pctxt, 
   AveragingMethodEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AveragingMethodEnum (OSCTXT* pctxt, 
   AveragingMethodEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AveragingMethodEnum (OSCTXT* pctxt, 
   AveragingMethodEnum* pvalue);

EXTERN const OSUTF8CHAR* AveragingMethodEnum_ToString (OSINT32 value);

EXTERN int AveragingMethodEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AveragingMethodEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  NegativeInterestRateTreatmentEnum                         */
/*                                                            */
/**************************************************************/

#define TV_NegativeInterestRateTreatmentEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   NegativeInterestRateTreatmentEnum_negativeInterestRateMethod = 0,
   NegativeInterestRateTreatmentEnum_zeroInterestRateMethod = 1
} NegativeInterestRateTreatmentEnum_Root;

typedef OSUINT32 NegativeInterestRateTreatmentEnum;

EXTERN int asn1E_NegativeInterestRateTreatmentEnum (OSCTXT* pctxt,
   NegativeInterestRateTreatmentEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NegativeInterestRateTreatmentEnum (OSCTXT* pctxt, 
   NegativeInterestRateTreatmentEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NegativeInterestRateTreatmentEnum (OSCTXT* pctxt, 
   NegativeInterestRateTreatmentEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NegativeInterestRateTreatmentEnum (OSCTXT* pctxt, 
   NegativeInterestRateTreatmentEnum* pvalue);

EXTERN const OSUTF8CHAR* NegativeInterestRateTreatmentEnum_ToString (OSINT32 value);

EXTERN int NegativeInterestRateTreatmentEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NegativeInterestRateTreatmentEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  FloatingRateCalculation                                   */
/*                                                            */
/**************************************************************/

#define TV_FloatingRateCalculation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FloatingRateCalculation {
   struct {
      unsigned idPresent : 1;
      unsigned indexTenorPresent : 1;
      unsigned floatingRateMultiplierSchedulePresent : 1;
      unsigned spreadSchedulePresent : 1;
      unsigned rateTreatmentPresent : 1;
      unsigned initialRatePresent : 1;
      unsigned finalRateRoundingPresent : 1;
      unsigned averagingMethodPresent : 1;
      unsigned negativeInterestRateTreatmentPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   FloatingRateIndex floatingRateIndex;
   Interval_derivations indexTenor;
   Schedule_derivations floatingRateMultiplierSchedule;
   Schedule_derivations spreadSchedule;
   RateTreatmentEnum rateTreatment;
   /* List of StrikeSchedule */
   OSRTDList capRateSchedule_list;
   /* List of StrikeSchedule */
   OSRTDList floorRateSchedule_list;
   OSREAL initialRate;
   Rounding finalRateRounding;
   AveragingMethodEnum averagingMethod;
   NegativeInterestRateTreatmentEnum negativeInterestRateTreatment;
} FloatingRateCalculation;

EXTERN int asn1E_FloatingRateCalculation (OSCTXT* pctxt,
   FloatingRateCalculation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FloatingRateCalculation (OSCTXT* pctxt, 
   FloatingRateCalculation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FloatingRateCalculation (OSCTXT* pctxt, 
   FloatingRateCalculation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FloatingRateCalculation (OSCTXT* pctxt, 
   FloatingRateCalculation* pvalue);

EXTERN int DOMTest_FloatingRateCalculation (OSCTXT* pctxt, 
   FloatingRateCalculation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FloatingRateCalculation (FloatingRateCalculation* pvalue);

/**************************************************************/
/*                                                            */
/*  Calculation_choice_1                                      */
/*                                                            */
/**************************************************************/

#define TV_Calculation_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Calculation_choice_1_fixedRateSchedule 1
#define T_Calculation_choice_1_floatingRateCalculation 2

typedef struct EXTERN Calculation_choice_1 {
   int t;
   union {
      /* t = 1 */
      Schedule_derivations *fixedRateSchedule;
      /* t = 2 */
      FloatingRateCalculation *floatingRateCalculation;
   } u;
} Calculation_choice_1;

EXTERN int asn1E_Calculation_choice_1 (OSCTXT* pctxt,
   Calculation_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Calculation_choice_1 (OSCTXT* pctxt, 
   Calculation_choice_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Calculation_choice_1 (OSCTXT* pctxt, 
   Calculation_choice_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Calculation_choice_1 (OSCTXT* pctxt, 
   Calculation_choice_1* pvalue);

EXTERN int DOMTest_Calculation_choice_1 (OSCTXT* pctxt, Calculation_choice_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Calculation_choice_1 (Calculation_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  DiscountingTypeEnum                                       */
/*                                                            */
/**************************************************************/

#define TV_DiscountingTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DiscountingTypeEnum_fRA = 0,
   DiscountingTypeEnum_standard = 1
} DiscountingTypeEnum_Root;

typedef OSUINT32 DiscountingTypeEnum;

EXTERN int asn1E_DiscountingTypeEnum (OSCTXT* pctxt,
   DiscountingTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DiscountingTypeEnum (OSCTXT* pctxt, 
   DiscountingTypeEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DiscountingTypeEnum (OSCTXT* pctxt, 
   DiscountingTypeEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DiscountingTypeEnum (OSCTXT* pctxt, 
   DiscountingTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* DiscountingTypeEnum_ToString (OSINT32 value);

EXTERN int DiscountingTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DiscountingTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Discounting                                               */
/*                                                            */
/**************************************************************/

#define TV_Discounting	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Discounting {
   struct {
      unsigned discountRatePresent : 1;
      unsigned discountRateDayCountFractionPresent : 1;
   } m;
   DiscountingTypeEnum discountingType;
   OSREAL discountRate;
   DayCountFractionEnum discountRateDayCountFraction;
} Discounting;

EXTERN int asn1E_Discounting (OSCTXT* pctxt,
   Discounting *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Discounting (OSCTXT* pctxt, Discounting *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Discounting (OSCTXT* pctxt, Discounting* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Discounting (OSCTXT* pctxt, Discounting* pvalue);

EXTERN int DOMTest_Discounting (OSCTXT* pctxt, Discounting* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Discounting (Discounting* pvalue);

/**************************************************************/
/*                                                            */
/*  CompoundingMethodEnum                                     */
/*                                                            */
/**************************************************************/

#define TV_CompoundingMethodEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   CompoundingMethodEnum_flat = 0,
   CompoundingMethodEnum_none = 1,
   CompoundingMethodEnum_straight = 2
} CompoundingMethodEnum_Root;

typedef OSUINT32 CompoundingMethodEnum;

EXTERN int asn1E_CompoundingMethodEnum (OSCTXT* pctxt,
   CompoundingMethodEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CompoundingMethodEnum (OSCTXT* pctxt, 
   CompoundingMethodEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CompoundingMethodEnum (OSCTXT* pctxt, 
   CompoundingMethodEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CompoundingMethodEnum (OSCTXT* pctxt, 
   CompoundingMethodEnum* pvalue);

EXTERN const OSUTF8CHAR* CompoundingMethodEnum_ToString (OSINT32 value);

EXTERN int CompoundingMethodEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CompoundingMethodEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Calculation                                               */
/*                                                            */
/**************************************************************/

#define TV_Calculation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Calculation {
   struct {
      unsigned discountingPresent : 1;
      unsigned compoundingMethodPresent : 1;
   } m;
   Calculation_choice choice;
   Calculation_choice_1 choice_1;
   DayCountFractionEnum dayCountFraction;
   Discounting discounting;
   CompoundingMethodEnum compoundingMethod;
} Calculation;

EXTERN int asn1E_Calculation (OSCTXT* pctxt,
   Calculation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Calculation (OSCTXT* pctxt, Calculation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Calculation (OSCTXT* pctxt, Calculation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Calculation (OSCTXT* pctxt, Calculation* pvalue);

EXTERN int DOMTest_Calculation (OSCTXT* pctxt, Calculation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Calculation (Calculation* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriodAmount                                   */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriodAmount	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CalculationPeriodAmount_calculation 1
#define T_CalculationPeriodAmount_knownAmountSchedule 2

typedef struct EXTERN CalculationPeriodAmount {
   int t;
   union {
      /* t = 1 */
      Calculation *calculation;
      /* t = 2 */
      AmountSchedule *knownAmountSchedule;
   } u;
} CalculationPeriodAmount;

EXTERN int asn1E_CalculationPeriodAmount (OSCTXT* pctxt,
   CalculationPeriodAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriodAmount (OSCTXT* pctxt, 
   CalculationPeriodAmount *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriodAmount (OSCTXT* pctxt, 
   CalculationPeriodAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriodAmount (OSCTXT* pctxt, 
   CalculationPeriodAmount* pvalue);

EXTERN int DOMTest_CalculationPeriodAmount (OSCTXT* pctxt, 
   CalculationPeriodAmount* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriodAmount (CalculationPeriodAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  FloatingRate                                              */
/*                                                            */
/**************************************************************/

#define TV_FloatingRate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FloatingRate {
   struct {
      unsigned idPresent : 1;
      unsigned indexTenorPresent : 1;
      unsigned floatingRateMultiplierSchedulePresent : 1;
      unsigned spreadSchedulePresent : 1;
      unsigned rateTreatmentPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   FloatingRateIndex floatingRateIndex;
   Interval_derivations indexTenor;
   Schedule_derivations floatingRateMultiplierSchedule;
   Schedule_derivations spreadSchedule;
   RateTreatmentEnum rateTreatment;
   /* List of StrikeSchedule */
   OSRTDList capRateSchedule_list;
   /* List of StrikeSchedule */
   OSRTDList floorRateSchedule_list;
} FloatingRate;

EXTERN int asn1E_FloatingRate (OSCTXT* pctxt,
   FloatingRate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FloatingRate (OSCTXT* pctxt, FloatingRate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FloatingRate (OSCTXT* pctxt, FloatingRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FloatingRate (OSCTXT* pctxt, FloatingRate* pvalue);

EXTERN int DOMTest_FloatingRate (OSCTXT* pctxt, FloatingRate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FloatingRate (FloatingRate* pvalue);

/**************************************************************/
/*                                                            */
/*  FloatingRate_derivations                                  */
/*                                                            */
/**************************************************************/

#define TV_FloatingRate_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FloatingRate_derivations_floatingRate 1
#define T_FloatingRate_derivations_floatingRateCalculation 2

typedef struct EXTERN FloatingRate_derivations {
   int t;
   union {
      /* t = 1 */
      FloatingRate *floatingRate;
      /* t = 2 */
      FloatingRateCalculation *floatingRateCalculation;
   } u;
} FloatingRate_derivations;

EXTERN int asn1E_FloatingRate_derivations (OSCTXT* pctxt,
   FloatingRate_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FloatingRate_derivations (OSCTXT* pctxt, 
   FloatingRate_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FloatingRate_derivations (OSCTXT* pctxt, 
   FloatingRate_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FloatingRate_derivations (OSCTXT* pctxt, 
   FloatingRate_derivations* pvalue);

EXTERN int DOMTest_FloatingRate_derivations (OSCTXT* pctxt, 
   FloatingRate_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FloatingRate_derivations (FloatingRate_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Stub                                                      */
/*                                                            */
/**************************************************************/

#define TV_Stub	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Stub_floatingRate_list        1
#define T_Stub_stubRate                 2
#define T_Stub_stubAmount               3

typedef struct EXTERN Stub {
   int t;
   union {
      /* t = 1 */
      /* List of FloatingRate_derivations */
      OSRTDList *floatingRate_list;
      /* t = 2 */
      OSREAL stubRate;
      /* t = 3 */
      Money_derivations *stubAmount;
   } u;
} Stub;

EXTERN int asn1E_Stub (OSCTXT* pctxt,
   Stub *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Stub (OSCTXT* pctxt, Stub *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Stub (OSCTXT* pctxt, Stub* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Stub (OSCTXT* pctxt, Stub* pvalue);

EXTERN int DOMTest_Stub (OSCTXT* pctxt, Stub* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Stub (Stub* pvalue);

/**************************************************************/
/*                                                            */
/*  StubCalculationPeriodAmount                               */
/*                                                            */
/**************************************************************/

#define TV_StubCalculationPeriodAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN StubCalculationPeriodAmount {
   struct {
      unsigned initialStubPresent : 1;
      unsigned finalStubPresent : 1;
   } m;
   DateReference calculationPeriodDatesReference;
   Stub initialStub;
   Stub finalStub;
} StubCalculationPeriodAmount;

EXTERN int asn1E_StubCalculationPeriodAmount (OSCTXT* pctxt,
   StubCalculationPeriodAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_StubCalculationPeriodAmount (OSCTXT* pctxt, 
   StubCalculationPeriodAmount *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_StubCalculationPeriodAmount (OSCTXT* pctxt, 
   StubCalculationPeriodAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_StubCalculationPeriodAmount (OSCTXT* pctxt, 
   StubCalculationPeriodAmount* pvalue);

EXTERN int DOMTest_StubCalculationPeriodAmount (OSCTXT* pctxt, 
   StubCalculationPeriodAmount* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_StubCalculationPeriodAmount (StubCalculationPeriodAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  PrincipalExchanges                                        */
/*                                                            */
/**************************************************************/

#define TV_PrincipalExchanges	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PrincipalExchanges {
   OSBOOL initialExchange;
   OSBOOL finalExchange;
   OSBOOL intermediateExchange;
} PrincipalExchanges;

EXTERN int asn1E_PrincipalExchanges (OSCTXT* pctxt,
   PrincipalExchanges *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrincipalExchanges (OSCTXT* pctxt, 
   PrincipalExchanges *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PrincipalExchanges (OSCTXT* pctxt, 
   PrincipalExchanges* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrincipalExchanges (OSCTXT* pctxt, 
   PrincipalExchanges* pvalue);

EXTERN int DOMTest_PrincipalExchanges (OSCTXT* pctxt, PrincipalExchanges* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PrincipalExchanges (PrincipalExchanges* pvalue);

/**************************************************************/
/*                                                            */
/*  PrincipalExchange                                         */
/*                                                            */
/**************************************************************/

#define TV_PrincipalExchange	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PrincipalExchange {
   struct {
      unsigned idPresent : 1;
      unsigned unadjustedPrincipalExchangeDatePresent : 1;
      unsigned adjustedPrincipalExchangeDatePresent : 1;
      unsigned principalExchangeAmountPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* unadjustedPrincipalExchangeDate;
   const char* adjustedPrincipalExchangeDate;
   OSREAL principalExchangeAmount;
} PrincipalExchange;

EXTERN int asn1E_PrincipalExchange (OSCTXT* pctxt,
   PrincipalExchange *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrincipalExchange (OSCTXT* pctxt, PrincipalExchange *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PrincipalExchange (OSCTXT* pctxt, PrincipalExchange* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrincipalExchange (OSCTXT* pctxt, PrincipalExchange* pvalue)
   ;

EXTERN int DOMTest_PrincipalExchange (OSCTXT* pctxt, PrincipalExchange* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PrincipalExchange (PrincipalExchange* pvalue);

/**************************************************************/
/*                                                            */
/*  FxLinkedNotionalAmount                                    */
/*                                                            */
/**************************************************************/

#define TV_FxLinkedNotionalAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FxLinkedNotionalAmount {
   struct {
      unsigned resetDatePresent : 1;
      unsigned adjustedFxSpotFixingDatePresent : 1;
      unsigned observedFxSpotRatePresent : 1;
      unsigned notionalAmountPresent : 1;
   } m;
   const char* resetDate;
   const char* adjustedFxSpotFixingDate;
   OSREAL observedFxSpotRate;
   OSREAL notionalAmount;
} FxLinkedNotionalAmount;

EXTERN int asn1E_FxLinkedNotionalAmount (OSCTXT* pctxt,
   FxLinkedNotionalAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxLinkedNotionalAmount (OSCTXT* pctxt, 
   FxLinkedNotionalAmount *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxLinkedNotionalAmount (OSCTXT* pctxt, 
   FxLinkedNotionalAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxLinkedNotionalAmount (OSCTXT* pctxt, 
   FxLinkedNotionalAmount* pvalue);

EXTERN int DOMTest_FxLinkedNotionalAmount (OSCTXT* pctxt, 
   FxLinkedNotionalAmount* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxLinkedNotionalAmount (FxLinkedNotionalAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriod_choice                                  */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriod_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CalculationPeriod_choice_notionalAmount 1
#define T_CalculationPeriod_choice_fxLinkedNotionalAmount 2

typedef struct EXTERN CalculationPeriod_choice {
   int t;
   union {
      /* t = 1 */
      OSREAL notionalAmount;
      /* t = 2 */
      FxLinkedNotionalAmount *fxLinkedNotionalAmount;
   } u;
} CalculationPeriod_choice;

EXTERN int asn1E_CalculationPeriod_choice (OSCTXT* pctxt,
   CalculationPeriod_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriod_choice (OSCTXT* pctxt, 
   CalculationPeriod_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriod_choice (OSCTXT* pctxt, 
   CalculationPeriod_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriod_choice (OSCTXT* pctxt, 
   CalculationPeriod_choice* pvalue);

EXTERN int DOMTest_CalculationPeriod_choice (OSCTXT* pctxt, 
   CalculationPeriod_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriod_choice (CalculationPeriod_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  IntradocumentReference                                    */
/*                                                            */
/**************************************************************/

#define TV_IntradocumentReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN IntradocumentReference {
   const OSUTF8CHAR* href;
} IntradocumentReference;

EXTERN int asn1E_IntradocumentReference (OSCTXT* pctxt,
   IntradocumentReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_IntradocumentReference (OSCTXT* pctxt, 
   IntradocumentReference *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_IntradocumentReference (OSCTXT* pctxt, 
   IntradocumentReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_IntradocumentReference (OSCTXT* pctxt, 
   IntradocumentReference* pvalue);

EXTERN int DOMTest_IntradocumentReference (OSCTXT* pctxt, 
   IntradocumentReference* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_IntradocumentReference (IntradocumentReference* pvalue);

/**************************************************************/
/*                                                            */
/*  RateObservation                                           */
/*                                                            */
/**************************************************************/

#define TV_RateObservation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RateObservation {
   struct {
      unsigned idPresent : 1;
      unsigned resetDatePresent : 1;
      unsigned adjustedFixingDatePresent : 1;
      unsigned observedRatePresent : 1;
      unsigned treatedRatePresent : 1;
      unsigned rateReferencePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* resetDate;
   const char* adjustedFixingDate;
   OSREAL observedRate;
   OSREAL treatedRate;
   OSUINT32 observationWeight;
   IntradocumentReference rateReference;
} RateObservation;

EXTERN int asn1E_RateObservation (OSCTXT* pctxt,
   RateObservation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RateObservation (OSCTXT* pctxt, RateObservation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RateObservation (OSCTXT* pctxt, RateObservation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RateObservation (OSCTXT* pctxt, RateObservation* pvalue);

EXTERN int DOMTest_RateObservation (OSCTXT* pctxt, RateObservation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RateObservation (RateObservation* pvalue);

/**************************************************************/
/*                                                            */
/*  Strike_buyer                                              */
/*                                                            */
/**************************************************************/

#define TV_Strike_buyer	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Strike_buyer {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PayerReceiverEnum base;
} Strike_buyer;

EXTERN int asn1E_Strike_buyer (OSCTXT* pctxt,
   Strike_buyer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Strike_buyer (OSCTXT* pctxt, Strike_buyer *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Strike_buyer (OSCTXT* pctxt, Strike_buyer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Strike_buyer (OSCTXT* pctxt, Strike_buyer* pvalue);

EXTERN int DOMTest_Strike_buyer (OSCTXT* pctxt, Strike_buyer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Strike_buyer (Strike_buyer* pvalue);

/**************************************************************/
/*                                                            */
/*  Strike_seller                                             */
/*                                                            */
/**************************************************************/

#define TV_Strike_seller	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Strike_seller {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PayerReceiverEnum base;
} Strike_seller;

EXTERN int asn1E_Strike_seller (OSCTXT* pctxt,
   Strike_seller *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Strike_seller (OSCTXT* pctxt, Strike_seller *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Strike_seller (OSCTXT* pctxt, Strike_seller* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Strike_seller (OSCTXT* pctxt, Strike_seller* pvalue);

EXTERN int DOMTest_Strike_seller (OSCTXT* pctxt, Strike_seller* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Strike_seller (Strike_seller* pvalue);

/**************************************************************/
/*                                                            */
/*  Strike                                                    */
/*                                                            */
/**************************************************************/

#define TV_Strike	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Strike {
   struct {
      unsigned idPresent : 1;
      unsigned buyerPresent : 1;
      unsigned sellerPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   OSREAL strikeRate;
   Strike_buyer buyer;
   Strike_seller seller;
} Strike;

EXTERN int asn1E_Strike (OSCTXT* pctxt,
   Strike *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Strike (OSCTXT* pctxt, Strike *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Strike (OSCTXT* pctxt, Strike* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Strike (OSCTXT* pctxt, Strike* pvalue);

EXTERN int DOMTest_Strike (OSCTXT* pctxt, Strike* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Strike (Strike* pvalue);

/**************************************************************/
/*                                                            */
/*  FloatingRateDefinition                                    */
/*                                                            */
/**************************************************************/

#define TV_FloatingRateDefinition	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FloatingRateDefinition {
   struct {
      unsigned calculatedRatePresent : 1;
      unsigned floatingRateMultiplierPresent : 1;
      unsigned spreadPresent : 1;
   } m;
   OSREAL calculatedRate;
   /* List of RateObservation */
   OSRTDList rateObservation_list;
   OSREAL floatingRateMultiplier;
   OSREAL spread;
   /* List of Strike */
   OSRTDList capRate_list;
   /* List of Strike */
   OSRTDList floorRate_list;
} FloatingRateDefinition;

EXTERN int asn1E_FloatingRateDefinition (OSCTXT* pctxt,
   FloatingRateDefinition *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FloatingRateDefinition (OSCTXT* pctxt, 
   FloatingRateDefinition *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FloatingRateDefinition (OSCTXT* pctxt, 
   FloatingRateDefinition* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FloatingRateDefinition (OSCTXT* pctxt, 
   FloatingRateDefinition* pvalue);

EXTERN int DOMTest_FloatingRateDefinition (OSCTXT* pctxt, 
   FloatingRateDefinition* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FloatingRateDefinition (FloatingRateDefinition* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriod_choice_1                                */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriod_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CalculationPeriod_choice_1_floatingRateDefinition 1
#define T_CalculationPeriod_choice_1_fixedRate 2

typedef struct EXTERN CalculationPeriod_choice_1 {
   int t;
   union {
      /* t = 1 */
      FloatingRateDefinition *floatingRateDefinition;
      /* t = 2 */
      OSREAL fixedRate;
   } u;
} CalculationPeriod_choice_1;

EXTERN int asn1E_CalculationPeriod_choice_1 (OSCTXT* pctxt,
   CalculationPeriod_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriod_choice_1 (OSCTXT* pctxt, 
   CalculationPeriod_choice_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriod_choice_1 (OSCTXT* pctxt, 
   CalculationPeriod_choice_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriod_choice_1 (OSCTXT* pctxt, 
   CalculationPeriod_choice_1* pvalue);

EXTERN int DOMTest_CalculationPeriod_choice_1 (OSCTXT* pctxt, 
   CalculationPeriod_choice_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriod_choice_1 (CalculationPeriod_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationPeriod                                         */
/*                                                            */
/**************************************************************/

#define TV_CalculationPeriod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CalculationPeriod {
   struct {
      unsigned idPresent : 1;
      unsigned unadjustedStartDatePresent : 1;
      unsigned unadjustedEndDatePresent : 1;
      unsigned adjustedStartDatePresent : 1;
      unsigned adjustedEndDatePresent : 1;
      unsigned calculationPeriodNumberOfDaysPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* unadjustedStartDate;
   const char* unadjustedEndDate;
   const char* adjustedStartDate;
   const char* adjustedEndDate;
   OSUINT32 calculationPeriodNumberOfDays;
   CalculationPeriod_choice choice;
   CalculationPeriod_choice_1 choice_1;
} CalculationPeriod;

EXTERN int asn1E_CalculationPeriod (OSCTXT* pctxt,
   CalculationPeriod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationPeriod (OSCTXT* pctxt, CalculationPeriod *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationPeriod (OSCTXT* pctxt, CalculationPeriod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationPeriod (OSCTXT* pctxt, CalculationPeriod* pvalue)
   ;

EXTERN int DOMTest_CalculationPeriod (OSCTXT* pctxt, CalculationPeriod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationPeriod (CalculationPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  PaymentCalculationPeriod_choice                           */
/*                                                            */
/**************************************************************/

#define TV_PaymentCalculationPeriod_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PaymentCalculationPeriod_choice_calculationPeriod_list 1
#define T_PaymentCalculationPeriod_choice_fixedPaymentAmount 2

typedef struct EXTERN PaymentCalculationPeriod_choice {
   int t;
   union {
      /* t = 1 */
      /* List of CalculationPeriod */
      OSRTDList *calculationPeriod_list;
      /* t = 2 */
      OSREAL fixedPaymentAmount;
   } u;
} PaymentCalculationPeriod_choice;

EXTERN int asn1E_PaymentCalculationPeriod_choice (OSCTXT* pctxt,
   PaymentCalculationPeriod_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PaymentCalculationPeriod_choice (OSCTXT* pctxt, 
   PaymentCalculationPeriod_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PaymentCalculationPeriod_choice (OSCTXT* pctxt, 
   PaymentCalculationPeriod_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PaymentCalculationPeriod_choice (OSCTXT* pctxt, 
   PaymentCalculationPeriod_choice* pvalue);

EXTERN int DOMTest_PaymentCalculationPeriod_choice (OSCTXT* pctxt, 
   PaymentCalculationPeriod_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PaymentCalculationPeriod_choice (
   PaymentCalculationPeriod_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  PaymentCalculationPeriod                                  */
/*                                                            */
/**************************************************************/

#define TV_PaymentCalculationPeriod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PaymentCalculationPeriod {
   struct {
      unsigned idPresent : 1;
      unsigned unadjustedPaymentDatePresent : 1;
      unsigned adjustedPaymentDatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* unadjustedPaymentDate;
   const char* adjustedPaymentDate;
   PaymentCalculationPeriod_choice choice;
} PaymentCalculationPeriod;

EXTERN int asn1E_PaymentCalculationPeriod (OSCTXT* pctxt,
   PaymentCalculationPeriod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PaymentCalculationPeriod (OSCTXT* pctxt, 
   PaymentCalculationPeriod *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PaymentCalculationPeriod (OSCTXT* pctxt, 
   PaymentCalculationPeriod* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PaymentCalculationPeriod (OSCTXT* pctxt, 
   PaymentCalculationPeriod* pvalue);

EXTERN int DOMTest_PaymentCalculationPeriod (OSCTXT* pctxt, 
   PaymentCalculationPeriod* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PaymentCalculationPeriod (PaymentCalculationPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  Cashflows                                                 */
/*                                                            */
/**************************************************************/

#define TV_Cashflows	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Cashflows {
   OSBOOL cashflowsMatchParameters;
   /* List of PrincipalExchange */
   OSRTDList principalExchange_list;
   /* List of PaymentCalculationPeriod */
   OSRTDList paymentCalculationPeriod_list;
} Cashflows;

EXTERN int asn1E_Cashflows (OSCTXT* pctxt,
   Cashflows *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Cashflows (OSCTXT* pctxt, Cashflows *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Cashflows (OSCTXT* pctxt, Cashflows* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Cashflows (OSCTXT* pctxt, Cashflows* pvalue);

EXTERN int DOMTest_Cashflows (OSCTXT* pctxt, Cashflows* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Cashflows (Cashflows* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestRateStream                                        */
/*                                                            */
/**************************************************************/

#define TV_InterestRateStream	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestRateStream {
   struct {
      unsigned idPresent : 1;
      unsigned resetDatesPresent : 1;
      unsigned stubCalculationPeriodAmountPresent : 1;
      unsigned principalExchangesPresent : 1;
      unsigned cashflowsPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PayerReceiver_model payerReceiver_model;
   CalculationPeriodDates calculationPeriodDates;
   PaymentDates paymentDates;
   ResetDates resetDates;
   CalculationPeriodAmount calculationPeriodAmount;
   StubCalculationPeriodAmount stubCalculationPeriodAmount;
   PrincipalExchanges principalExchanges;
   Cashflows cashflows;
} InterestRateStream;

EXTERN int asn1E_InterestRateStream (OSCTXT* pctxt,
   InterestRateStream *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestRateStream (OSCTXT* pctxt, 
   InterestRateStream *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestRateStream (OSCTXT* pctxt, 
   InterestRateStream* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestRateStream (OSCTXT* pctxt, 
   InterestRateStream* pvalue);

EXTERN int DOMTest_InterestRateStream (OSCTXT* pctxt, InterestRateStream* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestRateStream (InterestRateStream* pvalue);

/**************************************************************/
/*                                                            */
/*  CapFloor                                                  */
/*                                                            */
/**************************************************************/

#define TV_CapFloor	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CapFloor {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   InterestRateStream capFloorStream;
   /* List of Payment */
   OSRTDList premium_list;
   /* List of Payment */
   OSRTDList additionalPayment_list;
} CapFloor;

EXTERN int asn1E_CapFloor (OSCTXT* pctxt,
   CapFloor *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CapFloor (OSCTXT* pctxt, CapFloor *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CapFloor (OSCTXT* pctxt, CapFloor* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CapFloor (OSCTXT* pctxt, CapFloor* pvalue);

EXTERN int DOMTest_CapFloor (OSCTXT* pctxt, CapFloor* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CapFloor (CapFloor* pvalue);

/**************************************************************/
/*                                                            */
/*  Fra_adjustedEffectiveDate                                 */
/*                                                            */
/**************************************************************/

#define TV_Fra_adjustedEffectiveDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Fra_adjustedEffectiveDate {
   const OSUTF8CHAR* id;
   const char* base;
} Fra_adjustedEffectiveDate;

EXTERN int asn1E_Fra_adjustedEffectiveDate (OSCTXT* pctxt,
   Fra_adjustedEffectiveDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Fra_adjustedEffectiveDate (OSCTXT* pctxt, 
   Fra_adjustedEffectiveDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Fra_adjustedEffectiveDate (OSCTXT* pctxt, 
   Fra_adjustedEffectiveDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Fra_adjustedEffectiveDate (OSCTXT* pctxt, 
   Fra_adjustedEffectiveDate* pvalue);

EXTERN int DOMTest_Fra_adjustedEffectiveDate (OSCTXT* pctxt, 
   Fra_adjustedEffectiveDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Fra_adjustedEffectiveDate (Fra_adjustedEffectiveDate* pvalue);

/**************************************************************/
/*                                                            */
/*  FraDiscountingEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_FraDiscountingEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   FraDiscountingEnum_aFMA = 0,
   FraDiscountingEnum_iSDA = 1,
   FraDiscountingEnum_nONE = 2
} FraDiscountingEnum_Root;

typedef OSUINT32 FraDiscountingEnum;

EXTERN int asn1E_FraDiscountingEnum (OSCTXT* pctxt,
   FraDiscountingEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FraDiscountingEnum (OSCTXT* pctxt, 
   FraDiscountingEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FraDiscountingEnum (OSCTXT* pctxt, FraDiscountingEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FraDiscountingEnum (OSCTXT* pctxt, 
   FraDiscountingEnum* pvalue);

EXTERN const OSUTF8CHAR* FraDiscountingEnum_ToString (OSINT32 value);

EXTERN int FraDiscountingEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, FraDiscountingEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Fra                                                       */
/*                                                            */
/**************************************************************/

#define TV_Fra	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Fra {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned indexTenorPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   Fra_adjustedEffectiveDate adjustedEffectiveDate;
   const char* adjustedTerminationDate;
   AdjustableDate paymentDate;
   RelativeDateOffset_derivations fixingDateOffset;
   DayCountFractionEnum dayCountFraction;
   OSUINT32 calculationPeriodNumberOfDays;
   Money_derivations notional;
   OSREAL fixedRate;
   FloatingRateIndex floatingRateIndex;
   Interval_derivations indexTenor;
   FraDiscountingEnum fraDiscounting;
} Fra;

EXTERN int asn1E_Fra (OSCTXT* pctxt,
   Fra *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Fra (OSCTXT* pctxt, Fra *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Fra (OSCTXT* pctxt, Fra* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Fra (OSCTXT* pctxt, Fra* pvalue);

EXTERN int DOMTest_Fra (OSCTXT* pctxt, Fra* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Fra (Fra* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationAgentPartyEnum                                 */
/*                                                            */
/**************************************************************/

#define TV_CalculationAgentPartyEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   CalculationAgentPartyEnum_asSpecifiedInMasterAgreement = 0,
   CalculationAgentPartyEnum_exercisingParty = 1,
   CalculationAgentPartyEnum_nonExercisingParty = 2
} CalculationAgentPartyEnum_Root;

typedef OSUINT32 CalculationAgentPartyEnum;

EXTERN int asn1E_CalculationAgentPartyEnum (OSCTXT* pctxt,
   CalculationAgentPartyEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationAgentPartyEnum (OSCTXT* pctxt, 
   CalculationAgentPartyEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationAgentPartyEnum (OSCTXT* pctxt, 
   CalculationAgentPartyEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationAgentPartyEnum (OSCTXT* pctxt, 
   CalculationAgentPartyEnum* pvalue);

EXTERN const OSUTF8CHAR* CalculationAgentPartyEnum_ToString (OSINT32 value);

EXTERN int CalculationAgentPartyEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CalculationAgentPartyEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  CalculationAgent                                          */
/*                                                            */
/**************************************************************/

#define TV_CalculationAgent	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CalculationAgent_calculationAgentPartyReference_list 1
#define T_CalculationAgent_calculationAgentParty 2

typedef struct EXTERN CalculationAgent {
   int t;
   union {
      /* t = 1 */
      /* List of PartyReference */
      OSRTDList *calculationAgentPartyReference_list;
      /* t = 2 */
      CalculationAgentPartyEnum calculationAgentParty;
   } u;
} CalculationAgent;

EXTERN int asn1E_CalculationAgent (OSCTXT* pctxt,
   CalculationAgent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CalculationAgent (OSCTXT* pctxt, CalculationAgent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CalculationAgent (OSCTXT* pctxt, CalculationAgent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CalculationAgent (OSCTXT* pctxt, CalculationAgent* pvalue);

EXTERN int DOMTest_CalculationAgent (OSCTXT* pctxt, CalculationAgent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CalculationAgent (CalculationAgent* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDates_unadjustedDate                            */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDates_unadjustedDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDates_unadjustedDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* base;
} AdjustableDates_unadjustedDate;

EXTERN int asn1E_AdjustableDates_unadjustedDate (OSCTXT* pctxt,
   AdjustableDates_unadjustedDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDates_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDates_unadjustedDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDates_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDates_unadjustedDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDates_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDates_unadjustedDate* pvalue);

EXTERN int DOMTest_AdjustableDates_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDates_unadjustedDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDates_unadjustedDate (
   AdjustableDates_unadjustedDate* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDates                                           */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDates {
   /* List of AdjustableDates_unadjustedDate */
   OSRTDList unadjustedDate_list;
   BusinessDayAdjustments dateAdjustments;
} AdjustableDates;

EXTERN int asn1E_AdjustableDates (OSCTXT* pctxt,
   AdjustableDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDates (OSCTXT* pctxt, AdjustableDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDates (OSCTXT* pctxt, AdjustableDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDates (OSCTXT* pctxt, AdjustableDates* pvalue);

EXTERN int DOMTest_AdjustableDates (OSCTXT* pctxt, AdjustableDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDates (AdjustableDates* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlementPaymentDate_choice                          */
/*                                                            */
/**************************************************************/

#define TV_CashSettlementPaymentDate_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CashSettlementPaymentDate_choice_adjustableDates 1
#define T_CashSettlementPaymentDate_choice_relativeDate 2
#define T_CashSettlementPaymentDate_choice_businessDateRange 3

typedef struct EXTERN CashSettlementPaymentDate_choice {
   int t;
   union {
      /* t = 1 */
      AdjustableDates *adjustableDates;
      /* t = 2 */
      RelativeDateOffset_derivations *relativeDate;
      /* t = 3 */
      BusinessDateRange *businessDateRange;
   } u;
} CashSettlementPaymentDate_choice;

EXTERN int asn1E_CashSettlementPaymentDate_choice (OSCTXT* pctxt,
   CashSettlementPaymentDate_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlementPaymentDate_choice (OSCTXT* pctxt, 
   CashSettlementPaymentDate_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlementPaymentDate_choice (OSCTXT* pctxt, 
   CashSettlementPaymentDate_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlementPaymentDate_choice (OSCTXT* pctxt, 
   CashSettlementPaymentDate_choice* pvalue);

EXTERN int DOMTest_CashSettlementPaymentDate_choice (OSCTXT* pctxt, 
   CashSettlementPaymentDate_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlementPaymentDate_choice (
   CashSettlementPaymentDate_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlementPaymentDate                                 */
/*                                                            */
/**************************************************************/

#define TV_CashSettlementPaymentDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CashSettlementPaymentDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   CashSettlementPaymentDate_choice choice;
} CashSettlementPaymentDate;

EXTERN int asn1E_CashSettlementPaymentDate (OSCTXT* pctxt,
   CashSettlementPaymentDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlementPaymentDate (OSCTXT* pctxt, 
   CashSettlementPaymentDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlementPaymentDate (OSCTXT* pctxt, 
   CashSettlementPaymentDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlementPaymentDate (OSCTXT* pctxt, 
   CashSettlementPaymentDate* pvalue);

EXTERN int DOMTest_CashSettlementPaymentDate (OSCTXT* pctxt, 
   CashSettlementPaymentDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlementPaymentDate (CashSettlementPaymentDate* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceBankId                                           */
/*                                                            */
/**************************************************************/

#define TV_ReferenceBankId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ReferenceBankId {
   struct {
      unsigned referenceBankIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* referenceBankIdScheme;
   const OSUTF8CHAR* base;
} ReferenceBankId;

EXTERN int asn1E_ReferenceBankId (OSCTXT* pctxt,
   ReferenceBankId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceBankId (OSCTXT* pctxt, ReferenceBankId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceBankId (OSCTXT* pctxt, ReferenceBankId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceBankId (OSCTXT* pctxt, ReferenceBankId* pvalue);

EXTERN int DOMTest_ReferenceBankId (OSCTXT* pctxt, ReferenceBankId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceBankId (ReferenceBankId* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceBank                                             */
/*                                                            */
/**************************************************************/

#define TV_ReferenceBank	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ReferenceBank {
   struct {
      unsigned referenceBankNamePresent : 1;
   } m;
   ReferenceBankId referenceBankId;
   const OSUTF8CHAR* referenceBankName;
} ReferenceBank;

EXTERN int asn1E_ReferenceBank (OSCTXT* pctxt,
   ReferenceBank *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceBank (OSCTXT* pctxt, ReferenceBank *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceBank (OSCTXT* pctxt, ReferenceBank* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceBank (OSCTXT* pctxt, ReferenceBank* pvalue);

EXTERN int DOMTest_ReferenceBank (OSCTXT* pctxt, ReferenceBank* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceBank (ReferenceBank* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlementReferenceBanks                              */
/*                                                            */
/**************************************************************/

#define TV_CashSettlementReferenceBanks	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CashSettlementReferenceBanks {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   /* List of ReferenceBank */
   OSRTDList referenceBank_list;
} CashSettlementReferenceBanks;

EXTERN int asn1E_CashSettlementReferenceBanks (OSCTXT* pctxt,
   CashSettlementReferenceBanks *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlementReferenceBanks (OSCTXT* pctxt, 
   CashSettlementReferenceBanks *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlementReferenceBanks (OSCTXT* pctxt, 
   CashSettlementReferenceBanks* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlementReferenceBanks (OSCTXT* pctxt, 
   CashSettlementReferenceBanks* pvalue);

EXTERN int DOMTest_CashSettlementReferenceBanks (OSCTXT* pctxt, 
   CashSettlementReferenceBanks* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlementReferenceBanks (
   CashSettlementReferenceBanks* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotationRateTypeEnum                                     */
/*                                                            */
/**************************************************************/

#define TV_QuotationRateTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   QuotationRateTypeEnum_ask = 0,
   QuotationRateTypeEnum_bid = 1,
   QuotationRateTypeEnum_exercisingPartyPays = 2,
   QuotationRateTypeEnum_mid = 3
} QuotationRateTypeEnum_Root;

typedef OSUINT32 QuotationRateTypeEnum;

EXTERN int asn1E_QuotationRateTypeEnum (OSCTXT* pctxt,
   QuotationRateTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotationRateTypeEnum (OSCTXT* pctxt, 
   QuotationRateTypeEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotationRateTypeEnum (OSCTXT* pctxt, 
   QuotationRateTypeEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotationRateTypeEnum (OSCTXT* pctxt, 
   QuotationRateTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* QuotationRateTypeEnum_ToString (OSINT32 value);

EXTERN int QuotationRateTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QuotationRateTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  CashPriceMethod                                           */
/*                                                            */
/**************************************************************/

#define TV_CashPriceMethod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CashPriceMethod {
   struct {
      unsigned cashSettlementReferenceBanksPresent : 1;
   } m;
   CashSettlementReferenceBanks cashSettlementReferenceBanks;
   Currency cashSettlementCurrency;
   QuotationRateTypeEnum quotationRateType;
} CashPriceMethod;

EXTERN int asn1E_CashPriceMethod (OSCTXT* pctxt,
   CashPriceMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashPriceMethod (OSCTXT* pctxt, CashPriceMethod *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashPriceMethod (OSCTXT* pctxt, CashPriceMethod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashPriceMethod (OSCTXT* pctxt, CashPriceMethod* pvalue);

EXTERN int DOMTest_CashPriceMethod (OSCTXT* pctxt, CashPriceMethod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashPriceMethod (CashPriceMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementRateSource                                      */
/*                                                            */
/**************************************************************/

#define TV_SettlementRateSource	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SettlementRateSource_informationSource 1
#define T_SettlementRateSource_cashSettlementReferenceBanks 2

typedef struct EXTERN SettlementRateSource {
   int t;
   union {
      /* t = 1 */
      InformationSource *informationSource;
      /* t = 2 */
      CashSettlementReferenceBanks *cashSettlementReferenceBanks;
   } u;
} SettlementRateSource;

EXTERN int asn1E_SettlementRateSource (OSCTXT* pctxt,
   SettlementRateSource *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementRateSource (OSCTXT* pctxt, 
   SettlementRateSource *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementRateSource (OSCTXT* pctxt, 
   SettlementRateSource* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementRateSource (OSCTXT* pctxt, 
   SettlementRateSource* pvalue);

EXTERN int DOMTest_SettlementRateSource (OSCTXT* pctxt, SettlementRateSource* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementRateSource (SettlementRateSource* pvalue);

/**************************************************************/
/*                                                            */
/*  YieldCurveMethod                                          */
/*                                                            */
/**************************************************************/

#define TV_YieldCurveMethod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN YieldCurveMethod {
   struct {
      unsigned settlementRateSourcePresent : 1;
   } m;
   SettlementRateSource settlementRateSource;
   QuotationRateTypeEnum quotationRateType;
} YieldCurveMethod;

EXTERN int asn1E_YieldCurveMethod (OSCTXT* pctxt,
   YieldCurveMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_YieldCurveMethod (OSCTXT* pctxt, YieldCurveMethod *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_YieldCurveMethod (OSCTXT* pctxt, YieldCurveMethod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_YieldCurveMethod (OSCTXT* pctxt, YieldCurveMethod* pvalue);

EXTERN int DOMTest_YieldCurveMethod (OSCTXT* pctxt, YieldCurveMethod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_YieldCurveMethod (YieldCurveMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlement_choice                                     */
/*                                                            */
/**************************************************************/

#define TV_CashSettlement_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CashSettlement_choice_cashPriceMethod 1
#define T_CashSettlement_choice_cashPriceAlternateMethod 2
#define T_CashSettlement_choice_parYieldCurveAdjustedMethod 3
#define T_CashSettlement_choice_zeroCouponYieldAdjustedMethod 4
#define T_CashSettlement_choice_parYieldCurveUnadjustedMethod 5

typedef struct EXTERN CashSettlement_choice {
   int t;
   union {
      /* t = 1 */
      CashPriceMethod *cashPriceMethod;
      /* t = 2 */
      CashPriceMethod *cashPriceAlternateMethod;
      /* t = 3 */
      YieldCurveMethod *parYieldCurveAdjustedMethod;
      /* t = 4 */
      YieldCurveMethod *zeroCouponYieldAdjustedMethod;
      /* t = 5 */
      YieldCurveMethod *parYieldCurveUnadjustedMethod;
   } u;
} CashSettlement_choice;

EXTERN int asn1E_CashSettlement_choice (OSCTXT* pctxt,
   CashSettlement_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlement_choice (OSCTXT* pctxt, 
   CashSettlement_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlement_choice (OSCTXT* pctxt, 
   CashSettlement_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlement_choice (OSCTXT* pctxt, 
   CashSettlement_choice* pvalue);

EXTERN int DOMTest_CashSettlement_choice (OSCTXT* pctxt, 
   CashSettlement_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlement_choice (CashSettlement_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlement                                            */
/*                                                            */
/**************************************************************/

#define TV_CashSettlement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CashSettlement {
   struct {
      unsigned idPresent : 1;
      unsigned cashSettlementPaymentDatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   BusinessCenterTime cashSettlementValuationTime;
   RelativeDateOffset_derivations cashSettlementValuationDate;
   CashSettlementPaymentDate cashSettlementPaymentDate;
   CashSettlement_choice choice;
} CashSettlement;

EXTERN int asn1E_CashSettlement (OSCTXT* pctxt,
   CashSettlement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlement (OSCTXT* pctxt, CashSettlement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlement (OSCTXT* pctxt, CashSettlement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlement (OSCTXT* pctxt, CashSettlement* pvalue);

EXTERN int DOMTest_CashSettlement (OSCTXT* pctxt, CashSettlement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlement (CashSettlement* pvalue);

/**************************************************************/
/*                                                            */
/*  MandatoryEarlyTerminationAdjustedDates                    */
/*                                                            */
/**************************************************************/

#define TV_MandatoryEarlyTerminationAdjustedDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MandatoryEarlyTerminationAdjustedDates {
   const char* adjustedEarlyTerminationDate;
   const char* adjustedCashSettlementValuationDate;
   const char* adjustedCashSettlementPaymentDate;
} MandatoryEarlyTerminationAdjustedDates;

EXTERN int asn1E_MandatoryEarlyTerminationAdjustedDates (OSCTXT* pctxt,
   MandatoryEarlyTerminationAdjustedDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MandatoryEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   MandatoryEarlyTerminationAdjustedDates *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_MandatoryEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   MandatoryEarlyTerminationAdjustedDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MandatoryEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   MandatoryEarlyTerminationAdjustedDates* pvalue);

EXTERN int DOMTest_MandatoryEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   MandatoryEarlyTerminationAdjustedDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MandatoryEarlyTerminationAdjustedDates (
   MandatoryEarlyTerminationAdjustedDates* pvalue);

/**************************************************************/
/*                                                            */
/*  MandatoryEarlyTermination                                 */
/*                                                            */
/**************************************************************/

#define TV_MandatoryEarlyTermination	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MandatoryEarlyTermination {
   struct {
      unsigned idPresent : 1;
      unsigned mandatoryEarlyTerminationAdjustedDatesPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableDate mandatoryEarlyTerminationDate;
   CalculationAgent calculationAgent;
   CashSettlement cashSettlement;
   MandatoryEarlyTerminationAdjustedDates mandatoryEarlyTerminationAdjustedDates;
} MandatoryEarlyTermination;

EXTERN int asn1E_MandatoryEarlyTermination (OSCTXT* pctxt,
   MandatoryEarlyTermination *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MandatoryEarlyTermination (OSCTXT* pctxt, 
   MandatoryEarlyTermination *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MandatoryEarlyTermination (OSCTXT* pctxt, 
   MandatoryEarlyTermination* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MandatoryEarlyTermination (OSCTXT* pctxt, 
   MandatoryEarlyTermination* pvalue);

EXTERN int DOMTest_MandatoryEarlyTermination (OSCTXT* pctxt, 
   MandatoryEarlyTermination* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MandatoryEarlyTermination (MandatoryEarlyTermination* pvalue);

/**************************************************************/
/*                                                            */
/*  SinglePartyOption                                         */
/*                                                            */
/**************************************************************/

#define TV_SinglePartyOption	(TM_UNIV|TM_CONS|16)

typedef BuyerSeller_model SinglePartyOption;

EXTERN int asn1E_SinglePartyOption (OSCTXT* pctxt,
   SinglePartyOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SinglePartyOption (OSCTXT* pctxt, SinglePartyOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SinglePartyOption (OSCTXT* pctxt, SinglePartyOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SinglePartyOption (OSCTXT* pctxt, SinglePartyOption* pvalue)
   ;

EXTERN int DOMTest_SinglePartyOption (OSCTXT* pctxt, SinglePartyOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SinglePartyOption (SinglePartyOption* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableOrRelativeDate_choice                           */
/*                                                            */
/**************************************************************/

#define TV_AdjustableOrRelativeDate_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AdjustableOrRelativeDate_choice_adjustableDate 1
#define T_AdjustableOrRelativeDate_choice_relativeDate 2

typedef struct EXTERN AdjustableOrRelativeDate_choice {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateOffset_derivations *relativeDate;
   } u;
} AdjustableOrRelativeDate_choice;

EXTERN int asn1E_AdjustableOrRelativeDate_choice (OSCTXT* pctxt,
   AdjustableOrRelativeDate_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableOrRelativeDate_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDate_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableOrRelativeDate_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDate_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableOrRelativeDate_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDate_choice* pvalue);

EXTERN int DOMTest_AdjustableOrRelativeDate_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDate_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableOrRelativeDate_choice (
   AdjustableOrRelativeDate_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableOrRelativeDate                                  */
/*                                                            */
/**************************************************************/

#define TV_AdjustableOrRelativeDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableOrRelativeDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate_choice choice;
} AdjustableOrRelativeDate;

EXTERN int asn1E_AdjustableOrRelativeDate (OSCTXT* pctxt,
   AdjustableOrRelativeDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableOrRelativeDate (OSCTXT* pctxt, 
   AdjustableOrRelativeDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableOrRelativeDate (OSCTXT* pctxt, 
   AdjustableOrRelativeDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableOrRelativeDate (OSCTXT* pctxt, 
   AdjustableOrRelativeDate* pvalue);

EXTERN int DOMTest_AdjustableOrRelativeDate (OSCTXT* pctxt, 
   AdjustableOrRelativeDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableOrRelativeDate (AdjustableOrRelativeDate* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableOrRelativeDates_choice                          */
/*                                                            */
/**************************************************************/

#define TV_AdjustableOrRelativeDates_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AdjustableOrRelativeDates_choice_adjustableDates 1
#define T_AdjustableOrRelativeDates_choice_relativeDates 2

typedef struct EXTERN AdjustableOrRelativeDates_choice {
   int t;
   union {
      /* t = 1 */
      AdjustableDates *adjustableDates;
      /* t = 2 */
      RelativeDates *relativeDates;
   } u;
} AdjustableOrRelativeDates_choice;

EXTERN int asn1E_AdjustableOrRelativeDates_choice (OSCTXT* pctxt,
   AdjustableOrRelativeDates_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableOrRelativeDates_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDates_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableOrRelativeDates_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDates_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableOrRelativeDates_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDates_choice* pvalue);

EXTERN int DOMTest_AdjustableOrRelativeDates_choice (OSCTXT* pctxt, 
   AdjustableOrRelativeDates_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableOrRelativeDates_choice (
   AdjustableOrRelativeDates_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableOrRelativeDates                                 */
/*                                                            */
/**************************************************************/

#define TV_AdjustableOrRelativeDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableOrRelativeDates {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDates_choice choice;
} AdjustableOrRelativeDates;

EXTERN int asn1E_AdjustableOrRelativeDates (OSCTXT* pctxt,
   AdjustableOrRelativeDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableOrRelativeDates (OSCTXT* pctxt, 
   AdjustableOrRelativeDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableOrRelativeDates (OSCTXT* pctxt, 
   AdjustableOrRelativeDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableOrRelativeDates (OSCTXT* pctxt, 
   AdjustableOrRelativeDates* pvalue);

EXTERN int DOMTest_AdjustableOrRelativeDates (OSCTXT* pctxt, 
   AdjustableOrRelativeDates* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableOrRelativeDates (AdjustableOrRelativeDates* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleExercise                                          */
/*                                                            */
/**************************************************************/

#define TV_MultipleExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MultipleExercise {
   struct {
      unsigned integralMultipleAmountPresent : 1;
      unsigned maximumNotionalAmountPresent : 1;
   } m;
   /* List of NotionalReference */
   OSRTDList notionalReference_list;
   OSREAL integralMultipleAmount;
   OSREAL minimumNotionalAmount;
   OSREAL maximumNotionalAmount;
} MultipleExercise;

EXTERN int asn1E_MultipleExercise (OSCTXT* pctxt,
   MultipleExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MultipleExercise (OSCTXT* pctxt, MultipleExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MultipleExercise (OSCTXT* pctxt, MultipleExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MultipleExercise (OSCTXT* pctxt, MultipleExercise* pvalue);

EXTERN int DOMTest_MultipleExercise (OSCTXT* pctxt, MultipleExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MultipleExercise (MultipleExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseFeeSchedule_choice                                */
/*                                                            */
/**************************************************************/

#define TV_ExerciseFeeSchedule_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ExerciseFeeSchedule_choice_feeAmountSchedule 1
#define T_ExerciseFeeSchedule_choice_feeRateSchedule 2

typedef struct EXTERN ExerciseFeeSchedule_choice {
   int t;
   union {
      /* t = 1 */
      AmountSchedule *feeAmountSchedule;
      /* t = 2 */
      Schedule_derivations *feeRateSchedule;
   } u;
} ExerciseFeeSchedule_choice;

EXTERN int asn1E_ExerciseFeeSchedule_choice (OSCTXT* pctxt,
   ExerciseFeeSchedule_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseFeeSchedule_choice (OSCTXT* pctxt, 
   ExerciseFeeSchedule_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseFeeSchedule_choice (OSCTXT* pctxt, 
   ExerciseFeeSchedule_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseFeeSchedule_choice (OSCTXT* pctxt, 
   ExerciseFeeSchedule_choice* pvalue);

EXTERN int DOMTest_ExerciseFeeSchedule_choice (OSCTXT* pctxt, 
   ExerciseFeeSchedule_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseFeeSchedule_choice (ExerciseFeeSchedule_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseFeeSchedule                                       */
/*                                                            */
/**************************************************************/

#define TV_ExerciseFeeSchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExerciseFeeSchedule {
   PayerReceiver_model payerReceiver_model;
   NotionalReference notionalReference;
   ExerciseFeeSchedule_choice choice;
   RelativeDateOffset_derivations feePaymentDate;
} ExerciseFeeSchedule;

EXTERN int asn1E_ExerciseFeeSchedule (OSCTXT* pctxt,
   ExerciseFeeSchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseFeeSchedule (OSCTXT* pctxt, 
   ExerciseFeeSchedule *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseFeeSchedule (OSCTXT* pctxt, 
   ExerciseFeeSchedule* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseFeeSchedule (OSCTXT* pctxt, 
   ExerciseFeeSchedule* pvalue);

EXTERN int DOMTest_ExerciseFeeSchedule (OSCTXT* pctxt, ExerciseFeeSchedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseFeeSchedule (ExerciseFeeSchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  AmericanExercise                                          */
/*                                                            */
/**************************************************************/

#define TV_AmericanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AmericanExercise {
   struct {
      unsigned idPresent : 1;
      unsigned relevantUnderlyingDatePresent : 1;
      unsigned latestExerciseTimePresent : 1;
      unsigned multipleExercisePresent : 1;
      unsigned exerciseFeeSchedulePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate commencementDate;
   AdjustableOrRelativeDate expirationDate;
   AdjustableOrRelativeDates relevantUnderlyingDate;
   BusinessCenterTime earliestExerciseTime;
   BusinessCenterTime latestExerciseTime;
   BusinessCenterTime expirationTime;
   MultipleExercise multipleExercise;
   ExerciseFeeSchedule exerciseFeeSchedule;
} AmericanExercise;

EXTERN int asn1E_AmericanExercise (OSCTXT* pctxt,
   AmericanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AmericanExercise (OSCTXT* pctxt, AmericanExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AmericanExercise (OSCTXT* pctxt, AmericanExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AmericanExercise (OSCTXT* pctxt, AmericanExercise* pvalue);

EXTERN int DOMTest_AmericanExercise (OSCTXT* pctxt, AmericanExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AmericanExercise (AmericanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  BermudaExercise                                           */
/*                                                            */
/**************************************************************/

#define TV_BermudaExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BermudaExercise {
   struct {
      unsigned idPresent : 1;
      unsigned relevantUnderlyingDatePresent : 1;
      unsigned latestExerciseTimePresent : 1;
      unsigned multipleExercisePresent : 1;
      unsigned exerciseFeeSchedulePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDates bermudaExerciseDates;
   AdjustableOrRelativeDates relevantUnderlyingDate;
   BusinessCenterTime earliestExerciseTime;
   BusinessCenterTime latestExerciseTime;
   BusinessCenterTime expirationTime;
   MultipleExercise multipleExercise;
   ExerciseFeeSchedule exerciseFeeSchedule;
} BermudaExercise;

EXTERN int asn1E_BermudaExercise (OSCTXT* pctxt,
   BermudaExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BermudaExercise (OSCTXT* pctxt, BermudaExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BermudaExercise (OSCTXT* pctxt, BermudaExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BermudaExercise (OSCTXT* pctxt, BermudaExercise* pvalue);

EXTERN int DOMTest_BermudaExercise (OSCTXT* pctxt, BermudaExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BermudaExercise (BermudaExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialExercise                                           */
/*                                                            */
/**************************************************************/

#define TV_PartialExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartialExercise {
   struct {
      unsigned integralMultipleAmountPresent : 1;
   } m;
   /* List of NotionalReference */
   OSRTDList notionalReference_list;
   OSREAL integralMultipleAmount;
   OSREAL minimumNotionalAmount;
} PartialExercise;

EXTERN int asn1E_PartialExercise (OSCTXT* pctxt,
   PartialExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartialExercise (OSCTXT* pctxt, PartialExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartialExercise (OSCTXT* pctxt, PartialExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartialExercise (OSCTXT* pctxt, PartialExercise* pvalue);

EXTERN int DOMTest_PartialExercise (OSCTXT* pctxt, PartialExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartialExercise (PartialExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  PartialExercise_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_PartialExercise_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PartialExercise_derivations_partialExercise 1
#define T_PartialExercise_derivations_multipleExercise 2

typedef struct EXTERN PartialExercise_derivations {
   int t;
   union {
      /* t = 1 */
      PartialExercise *partialExercise;
      /* t = 2 */
      MultipleExercise *multipleExercise;
   } u;
} PartialExercise_derivations;

EXTERN int asn1E_PartialExercise_derivations (OSCTXT* pctxt,
   PartialExercise_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartialExercise_derivations (OSCTXT* pctxt, 
   PartialExercise_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartialExercise_derivations (OSCTXT* pctxt, 
   PartialExercise_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartialExercise_derivations (OSCTXT* pctxt, 
   PartialExercise_derivations* pvalue);

EXTERN int DOMTest_PartialExercise_derivations (OSCTXT* pctxt, 
   PartialExercise_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartialExercise_derivations (PartialExercise_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseFee_choice                                        */
/*                                                            */
/**************************************************************/

#define TV_ExerciseFee_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ExerciseFee_choice_feeAmount  1
#define T_ExerciseFee_choice_feeRate    2

typedef struct EXTERN ExerciseFee_choice {
   int t;
   union {
      /* t = 1 */
      OSREAL feeAmount;
      /* t = 2 */
      OSREAL feeRate;
   } u;
} ExerciseFee_choice;

EXTERN int asn1E_ExerciseFee_choice (OSCTXT* pctxt,
   ExerciseFee_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseFee_choice (OSCTXT* pctxt, 
   ExerciseFee_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseFee_choice (OSCTXT* pctxt, 
   ExerciseFee_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseFee_choice (OSCTXT* pctxt, 
   ExerciseFee_choice* pvalue);

EXTERN int DOMTest_ExerciseFee_choice (OSCTXT* pctxt, ExerciseFee_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseFee_choice (ExerciseFee_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseFee                                               */
/*                                                            */
/**************************************************************/

#define TV_ExerciseFee	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExerciseFee {
   PayerReceiver_model payerReceiver_model;
   NotionalReference notionalReference;
   ExerciseFee_choice choice;
   RelativeDateOffset_derivations feePaymentDate;
} ExerciseFee;

EXTERN int asn1E_ExerciseFee (OSCTXT* pctxt,
   ExerciseFee *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseFee (OSCTXT* pctxt, ExerciseFee *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseFee (OSCTXT* pctxt, ExerciseFee* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseFee (OSCTXT* pctxt, ExerciseFee* pvalue);

EXTERN int DOMTest_ExerciseFee (OSCTXT* pctxt, ExerciseFee* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseFee (ExerciseFee* pvalue);

/**************************************************************/
/*                                                            */
/*  EuropeanExercise                                          */
/*                                                            */
/**************************************************************/

#define TV_EuropeanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EuropeanExercise {
   struct {
      unsigned idPresent : 1;
      unsigned relevantUnderlyingDatePresent : 1;
      unsigned partialExercisePresent : 1;
      unsigned exerciseFeePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate expirationDate;
   AdjustableOrRelativeDates relevantUnderlyingDate;
   BusinessCenterTime earliestExerciseTime;
   BusinessCenterTime expirationTime;
   PartialExercise_derivations partialExercise;
   ExerciseFee exerciseFee;
} EuropeanExercise;

EXTERN int asn1E_EuropeanExercise (OSCTXT* pctxt,
   EuropeanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EuropeanExercise (OSCTXT* pctxt, EuropeanExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EuropeanExercise (OSCTXT* pctxt, EuropeanExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EuropeanExercise (OSCTXT* pctxt, EuropeanExercise* pvalue);

EXTERN int DOMTest_EuropeanExercise (OSCTXT* pctxt, EuropeanExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EuropeanExercise (EuropeanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  Exercise_group                                            */
/*                                                            */
/**************************************************************/

#define TV_Exercise_group	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Exercise_group_americanExercise 1
#define T_Exercise_group_bermudaExercise 2
#define T_Exercise_group_europeanExercise 3

typedef struct EXTERN Exercise_group {
   int t;
   union {
      /* t = 1 */
      AmericanExercise *americanExercise;
      /* t = 2 */
      BermudaExercise *bermudaExercise;
      /* t = 3 */
      EuropeanExercise *europeanExercise;
   } u;
} Exercise_group;

EXTERN int asn1E_Exercise_group (OSCTXT* pctxt,
   Exercise_group *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Exercise_group (OSCTXT* pctxt, Exercise_group *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Exercise_group (OSCTXT* pctxt, Exercise_group* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Exercise_group (OSCTXT* pctxt, Exercise_group* pvalue);

EXTERN int DOMTest_Exercise_group (OSCTXT* pctxt, Exercise_group* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Exercise_group (Exercise_group* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseNotice                                            */
/*                                                            */
/**************************************************************/

#define TV_ExerciseNotice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExerciseNotice {
   struct {
      unsigned exerciseNoticePartyReferencePresent : 1;
   } m;
   PartyReference partyReference;
   PartyReference exerciseNoticePartyReference;
   BusinessCenter businessCenter;
} ExerciseNotice;

EXTERN int asn1E_ExerciseNotice (OSCTXT* pctxt,
   ExerciseNotice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseNotice (OSCTXT* pctxt, ExerciseNotice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseNotice (OSCTXT* pctxt, ExerciseNotice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseNotice (OSCTXT* pctxt, ExerciseNotice* pvalue);

EXTERN int DOMTest_ExerciseNotice (OSCTXT* pctxt, ExerciseNotice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseNotice (ExerciseNotice* pvalue);

/**************************************************************/
/*                                                            */
/*  EarlyTerminationEvent                                     */
/*                                                            */
/**************************************************************/

#define TV_EarlyTerminationEvent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EarlyTerminationEvent {
   struct {
      unsigned idPresent : 1;
      unsigned adjustedExerciseFeePaymentDatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* adjustedExerciseDate;
   const char* adjustedEarlyTerminationDate;
   const char* adjustedCashSettlementValuationDate;
   const char* adjustedCashSettlementPaymentDate;
   const char* adjustedExerciseFeePaymentDate;
} EarlyTerminationEvent;

EXTERN int asn1E_EarlyTerminationEvent (OSCTXT* pctxt,
   EarlyTerminationEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EarlyTerminationEvent (OSCTXT* pctxt, 
   EarlyTerminationEvent *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EarlyTerminationEvent (OSCTXT* pctxt, 
   EarlyTerminationEvent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EarlyTerminationEvent (OSCTXT* pctxt, 
   EarlyTerminationEvent* pvalue);

EXTERN int DOMTest_EarlyTerminationEvent (OSCTXT* pctxt, 
   EarlyTerminationEvent* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EarlyTerminationEvent (EarlyTerminationEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  OptionalEarlyTerminationAdjustedDates                     */
/*                                                            */
/**************************************************************/

#define TV_OptionalEarlyTerminationAdjustedDates	(TM_UNIV|TM_CONS|16)

/* List of EarlyTerminationEvent */
typedef OSRTDList OptionalEarlyTerminationAdjustedDates;

EXTERN int asn1E_OptionalEarlyTerminationAdjustedDates (OSCTXT* pctxt,
   OptionalEarlyTerminationAdjustedDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_OptionalEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   OptionalEarlyTerminationAdjustedDates *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_OptionalEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   OptionalEarlyTerminationAdjustedDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_OptionalEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   OptionalEarlyTerminationAdjustedDates* pvalue);

EXTERN int DOMTest_OptionalEarlyTerminationAdjustedDates (OSCTXT* pctxt, 
   OptionalEarlyTerminationAdjustedDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_OptionalEarlyTerminationAdjustedDates (
   OptionalEarlyTerminationAdjustedDates* pvalue);

/**************************************************************/
/*                                                            */
/*  OptionalEarlyTermination                                  */
/*                                                            */
/**************************************************************/

#define TV_OptionalEarlyTermination	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN OptionalEarlyTermination {
   struct {
      unsigned singlePartyOptionPresent : 1;
      unsigned followUpConfirmationPresent : 1;
      unsigned optionalEarlyTerminationAdjustedDatesPresent : 1;
   } m;
   SinglePartyOption singlePartyOption;
   Exercise_group exercise;
   /* List of ExerciseNotice */
   OSRTDList exerciseNotice_list;
   OSBOOL followUpConfirmation;
   CalculationAgent calculationAgent;
   CashSettlement cashSettlement;
   OptionalEarlyTerminationAdjustedDates optionalEarlyTerminationAdjustedDates;
} OptionalEarlyTermination;

EXTERN int asn1E_OptionalEarlyTermination (OSCTXT* pctxt,
   OptionalEarlyTermination *pvalue, ASN1TagType tagging);

EXTERN int asn1D_OptionalEarlyTermination (OSCTXT* pctxt, 
   OptionalEarlyTermination *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_OptionalEarlyTermination (OSCTXT* pctxt, 
   OptionalEarlyTermination* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_OptionalEarlyTermination (OSCTXT* pctxt, 
   OptionalEarlyTermination* pvalue);

EXTERN int DOMTest_OptionalEarlyTermination (OSCTXT* pctxt, 
   OptionalEarlyTermination* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_OptionalEarlyTermination (OptionalEarlyTermination* pvalue);

/**************************************************************/
/*                                                            */
/*  EarlyTerminationProvision_choice                          */
/*                                                            */
/**************************************************************/

#define TV_EarlyTerminationProvision_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EarlyTerminationProvision_choice_mandatoryEarlyTermination 1
#define T_EarlyTerminationProvision_choice_optionalEarlyTermination 2

typedef struct EXTERN EarlyTerminationProvision_choice {
   int t;
   union {
      /* t = 1 */
      MandatoryEarlyTermination *mandatoryEarlyTermination;
      /* t = 2 */
      OptionalEarlyTermination *optionalEarlyTermination;
   } u;
} EarlyTerminationProvision_choice;

EXTERN int asn1E_EarlyTerminationProvision_choice (OSCTXT* pctxt,
   EarlyTerminationProvision_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EarlyTerminationProvision_choice (OSCTXT* pctxt, 
   EarlyTerminationProvision_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EarlyTerminationProvision_choice (OSCTXT* pctxt, 
   EarlyTerminationProvision_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EarlyTerminationProvision_choice (OSCTXT* pctxt, 
   EarlyTerminationProvision_choice* pvalue);

EXTERN int DOMTest_EarlyTerminationProvision_choice (OSCTXT* pctxt, 
   EarlyTerminationProvision_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EarlyTerminationProvision_choice (
   EarlyTerminationProvision_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EarlyTerminationProvision                                 */
/*                                                            */
/**************************************************************/

#define TV_EarlyTerminationProvision	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EarlyTerminationProvision {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   EarlyTerminationProvision_choice choice;
} EarlyTerminationProvision;

EXTERN int asn1E_EarlyTerminationProvision (OSCTXT* pctxt,
   EarlyTerminationProvision *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EarlyTerminationProvision (OSCTXT* pctxt, 
   EarlyTerminationProvision *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EarlyTerminationProvision (OSCTXT* pctxt, 
   EarlyTerminationProvision* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EarlyTerminationProvision (OSCTXT* pctxt, 
   EarlyTerminationProvision* pvalue);

EXTERN int DOMTest_EarlyTerminationProvision (OSCTXT* pctxt, 
   EarlyTerminationProvision* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EarlyTerminationProvision (EarlyTerminationProvision* pvalue);

/**************************************************************/
/*                                                            */
/*  CancellationEvent                                         */
/*                                                            */
/**************************************************************/

#define TV_CancellationEvent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CancellationEvent {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* adjustedExerciseDate;
   const char* adjustedEarlyTerminationDate;
} CancellationEvent;

EXTERN int asn1E_CancellationEvent (OSCTXT* pctxt,
   CancellationEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancellationEvent (OSCTXT* pctxt, CancellationEvent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancellationEvent (OSCTXT* pctxt, CancellationEvent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancellationEvent (OSCTXT* pctxt, CancellationEvent* pvalue)
   ;

EXTERN int DOMTest_CancellationEvent (OSCTXT* pctxt, CancellationEvent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CancellationEvent (CancellationEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelableProvisionAdjustedDates                          */
/*                                                            */
/**************************************************************/

#define TV_CancelableProvisionAdjustedDates	(TM_UNIV|TM_CONS|16)

/* List of CancellationEvent */
typedef OSRTDList CancelableProvisionAdjustedDates;

EXTERN int asn1E_CancelableProvisionAdjustedDates (OSCTXT* pctxt,
   CancelableProvisionAdjustedDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelableProvisionAdjustedDates (OSCTXT* pctxt, 
   CancelableProvisionAdjustedDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelableProvisionAdjustedDates (OSCTXT* pctxt, 
   CancelableProvisionAdjustedDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelableProvisionAdjustedDates (OSCTXT* pctxt, 
   CancelableProvisionAdjustedDates* pvalue);

EXTERN int DOMTest_CancelableProvisionAdjustedDates (OSCTXT* pctxt, 
   CancelableProvisionAdjustedDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CancelableProvisionAdjustedDates (
   CancelableProvisionAdjustedDates* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelableProvision                                       */
/*                                                            */
/**************************************************************/

#define TV_CancelableProvision	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CancelableProvision {
   struct {
      unsigned exerciseNoticePresent : 1;
      unsigned cancelableProvisionAdjustedDatesPresent : 1;
   } m;
   BuyerSeller_model buyerSeller_model;
   Exercise_group exercise;
   ExerciseNotice exerciseNotice;
   OSBOOL followUpConfirmation;
   CancelableProvisionAdjustedDates cancelableProvisionAdjustedDates;
} CancelableProvision;

EXTERN int asn1E_CancelableProvision (OSCTXT* pctxt,
   CancelableProvision *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelableProvision (OSCTXT* pctxt, 
   CancelableProvision *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelableProvision (OSCTXT* pctxt, 
   CancelableProvision* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelableProvision (OSCTXT* pctxt, 
   CancelableProvision* pvalue);

EXTERN int DOMTest_CancelableProvision (OSCTXT* pctxt, CancelableProvision* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CancelableProvision (CancelableProvision* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtensionEvent                                            */
/*                                                            */
/**************************************************************/

#define TV_ExtensionEvent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExtensionEvent {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* adjustedExerciseDate;
   const char* adjustedExtendedTerminationDate;
} ExtensionEvent;

EXTERN int asn1E_ExtensionEvent (OSCTXT* pctxt,
   ExtensionEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExtensionEvent (OSCTXT* pctxt, ExtensionEvent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExtensionEvent (OSCTXT* pctxt, ExtensionEvent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExtensionEvent (OSCTXT* pctxt, ExtensionEvent* pvalue);

EXTERN int DOMTest_ExtensionEvent (OSCTXT* pctxt, ExtensionEvent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExtensionEvent (ExtensionEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtendibleProvisionAdjustedDates                          */
/*                                                            */
/**************************************************************/

#define TV_ExtendibleProvisionAdjustedDates	(TM_UNIV|TM_CONS|16)

/* List of ExtensionEvent */
typedef OSRTDList ExtendibleProvisionAdjustedDates;

EXTERN int asn1E_ExtendibleProvisionAdjustedDates (OSCTXT* pctxt,
   ExtendibleProvisionAdjustedDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExtendibleProvisionAdjustedDates (OSCTXT* pctxt, 
   ExtendibleProvisionAdjustedDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExtendibleProvisionAdjustedDates (OSCTXT* pctxt, 
   ExtendibleProvisionAdjustedDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExtendibleProvisionAdjustedDates (OSCTXT* pctxt, 
   ExtendibleProvisionAdjustedDates* pvalue);

EXTERN int DOMTest_ExtendibleProvisionAdjustedDates (OSCTXT* pctxt, 
   ExtendibleProvisionAdjustedDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExtendibleProvisionAdjustedDates (
   ExtendibleProvisionAdjustedDates* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtendibleProvision                                       */
/*                                                            */
/**************************************************************/

#define TV_ExtendibleProvision	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExtendibleProvision {
   struct {
      unsigned exerciseNoticePresent : 1;
      unsigned extendibleProvisionAdjustedDatesPresent : 1;
   } m;
   BuyerSeller_model buyerSeller_model;
   Exercise_group exercise;
   ExerciseNotice exerciseNotice;
   OSBOOL followUpConfirmation;
   ExtendibleProvisionAdjustedDates extendibleProvisionAdjustedDates;
} ExtendibleProvision;

EXTERN int asn1E_ExtendibleProvision (OSCTXT* pctxt,
   ExtendibleProvision *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExtendibleProvision (OSCTXT* pctxt, 
   ExtendibleProvision *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExtendibleProvision (OSCTXT* pctxt, 
   ExtendibleProvision* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExtendibleProvision (OSCTXT* pctxt, 
   ExtendibleProvision* pvalue);

EXTERN int DOMTest_ExtendibleProvision (OSCTXT* pctxt, ExtendibleProvision* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExtendibleProvision (ExtendibleProvision* pvalue);

/**************************************************************/
/*                                                            */
/*  Swap                                                      */
/*                                                            */
/**************************************************************/

#define TV_Swap	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Swap {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned earlyTerminationProvisionPresent : 1;
      unsigned cancelableProvisionPresent : 1;
      unsigned extendibleProvisionPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   /* List of InterestRateStream */
   OSRTDList swapStream_list;
   EarlyTerminationProvision earlyTerminationProvision;
   CancelableProvision cancelableProvision;
   ExtendibleProvision extendibleProvision;
   /* List of Payment */
   OSRTDList additionalPayment_list;
} Swap;

EXTERN int asn1E_Swap (OSCTXT* pctxt,
   Swap *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Swap (OSCTXT* pctxt, Swap *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Swap (OSCTXT* pctxt, Swap* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Swap (OSCTXT* pctxt, Swap* pvalue);

EXTERN int DOMTest_Swap (OSCTXT* pctxt, Swap* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Swap (Swap* pvalue);

/**************************************************************/
/*                                                            */
/*  ManualExercise                                            */
/*                                                            */
/**************************************************************/

#define TV_ManualExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ManualExercise {
   struct {
      unsigned exerciseNoticePresent : 1;
      unsigned fallbackExercisePresent : 1;
   } m;
   ExerciseNotice exerciseNotice;
   OSBOOL fallbackExercise;
} ManualExercise;

EXTERN int asn1E_ManualExercise (OSCTXT* pctxt,
   ManualExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ManualExercise (OSCTXT* pctxt, ManualExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ManualExercise (OSCTXT* pctxt, ManualExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ManualExercise (OSCTXT* pctxt, ManualExercise* pvalue);

EXTERN int DOMTest_ManualExercise (OSCTXT* pctxt, ManualExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ManualExercise (ManualExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  AutomaticExercise                                         */
/*                                                            */
/**************************************************************/

#define TV_AutomaticExercise	(TM_UNIV|TM_CONS|9)

typedef OSREAL AutomaticExercise;

EXTERN int asn1E_AutomaticExercise (OSCTXT* pctxt,
   AutomaticExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AutomaticExercise (OSCTXT* pctxt, AutomaticExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AutomaticExercise (OSCTXT* pctxt, AutomaticExercise value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AutomaticExercise (OSCTXT* pctxt, AutomaticExercise* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  ExerciseProcedure_choice                                  */
/*                                                            */
/**************************************************************/

#define TV_ExerciseProcedure_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ExerciseProcedure_choice_manualExercise 1
#define T_ExerciseProcedure_choice_automaticExercise 2

typedef struct EXTERN ExerciseProcedure_choice {
   int t;
   union {
      /* t = 1 */
      ManualExercise *manualExercise;
      /* t = 2 */
      AutomaticExercise automaticExercise;
   } u;
} ExerciseProcedure_choice;

EXTERN int asn1E_ExerciseProcedure_choice (OSCTXT* pctxt,
   ExerciseProcedure_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseProcedure_choice (OSCTXT* pctxt, 
   ExerciseProcedure_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseProcedure_choice (OSCTXT* pctxt, 
   ExerciseProcedure_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseProcedure_choice (OSCTXT* pctxt, 
   ExerciseProcedure_choice* pvalue);

EXTERN int DOMTest_ExerciseProcedure_choice (OSCTXT* pctxt, 
   ExerciseProcedure_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseProcedure_choice (ExerciseProcedure_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseProcedure                                         */
/*                                                            */
/**************************************************************/

#define TV_ExerciseProcedure	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExerciseProcedure {
   ExerciseProcedure_choice choice;
   OSBOOL followUpConfirmation;
} ExerciseProcedure;

EXTERN int asn1E_ExerciseProcedure (OSCTXT* pctxt,
   ExerciseProcedure *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseProcedure (OSCTXT* pctxt, ExerciseProcedure *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseProcedure (OSCTXT* pctxt, ExerciseProcedure* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseProcedure (OSCTXT* pctxt, ExerciseProcedure* pvalue)
   ;

EXTERN int DOMTest_ExerciseProcedure (OSCTXT* pctxt, ExerciseProcedure* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseProcedure (ExerciseProcedure* pvalue);

/**************************************************************/
/*                                                            */
/*  ExerciseEvent                                             */
/*                                                            */
/**************************************************************/

#define TV_ExerciseEvent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExerciseEvent {
   struct {
      unsigned idPresent : 1;
      unsigned adjustedCashSettlementValuationDatePresent : 1;
      unsigned adjustedCashSettlementPaymentDatePresent : 1;
      unsigned adjustedExerciseFeePaymentDatePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* adjustedExerciseDate;
   const char* adjustedRelevantSwapEffectiveDate;
   const char* adjustedCashSettlementValuationDate;
   const char* adjustedCashSettlementPaymentDate;
   const char* adjustedExerciseFeePaymentDate;
} ExerciseEvent;

EXTERN int asn1E_ExerciseEvent (OSCTXT* pctxt,
   ExerciseEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExerciseEvent (OSCTXT* pctxt, ExerciseEvent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExerciseEvent (OSCTXT* pctxt, ExerciseEvent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExerciseEvent (OSCTXT* pctxt, ExerciseEvent* pvalue);

EXTERN int DOMTest_ExerciseEvent (OSCTXT* pctxt, ExerciseEvent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExerciseEvent (ExerciseEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  SwaptionAdjustedDates                                     */
/*                                                            */
/**************************************************************/

#define TV_SwaptionAdjustedDates	(TM_UNIV|TM_CONS|16)

/* List of ExerciseEvent */
typedef OSRTDList SwaptionAdjustedDates;

EXTERN int asn1E_SwaptionAdjustedDates (OSCTXT* pctxt,
   SwaptionAdjustedDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SwaptionAdjustedDates (OSCTXT* pctxt, 
   SwaptionAdjustedDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SwaptionAdjustedDates (OSCTXT* pctxt, 
   SwaptionAdjustedDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SwaptionAdjustedDates (OSCTXT* pctxt, 
   SwaptionAdjustedDates* pvalue);

EXTERN int DOMTest_SwaptionAdjustedDates (OSCTXT* pctxt, 
   SwaptionAdjustedDates* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SwaptionAdjustedDates (SwaptionAdjustedDates* pvalue);

/**************************************************************/
/*                                                            */
/*  Swaption                                                  */
/*                                                            */
/**************************************************************/

#define TV_Swaption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Swaption {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned cashSettlementPresent : 1;
      unsigned swaptionAdjustedDatesPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   /* List of Payment */
   OSRTDList premium_list;
   Exercise_group exercise;
   ExerciseProcedure exerciseProcedure;
   /* List of PartyReference */
   OSRTDList calculationAgentPartyReference_list;
   CashSettlement cashSettlement;
   OSBOOL swaptionStraddle;
   SwaptionAdjustedDates swaptionAdjustedDates;
   Swap swap;
} Swaption;

EXTERN int asn1E_Swaption (OSCTXT* pctxt,
   Swaption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Swaption (OSCTXT* pctxt, Swaption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Swaption (OSCTXT* pctxt, Swaption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Swaption (OSCTXT* pctxt, Swaption* pvalue);

EXTERN int DOMTest_Swaption (OSCTXT* pctxt, Swaption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Swaption (Swaption* pvalue);

/**************************************************************/
/*                                                            */
/*  OptionTypeEnum                                            */
/*                                                            */
/**************************************************************/

#define TV_OptionTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   OptionTypeEnum_call = 0,
   OptionTypeEnum_put = 1
} OptionTypeEnum_Root;

typedef OSUINT32 OptionTypeEnum;

EXTERN int asn1E_OptionTypeEnum (OSCTXT* pctxt,
   OptionTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_OptionTypeEnum (OSCTXT* pctxt, OptionTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_OptionTypeEnum (OSCTXT* pctxt, OptionTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_OptionTypeEnum (OSCTXT* pctxt, OptionTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* OptionTypeEnum_ToString (OSINT32 value);

EXTERN int OptionTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, OptionTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  InstrumentId                                              */
/*                                                            */
/**************************************************************/

#define TV_InstrumentId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InstrumentId {
   const OSUTF8CHAR* instrumentIdScheme;
   const OSUTF8CHAR* base;
} InstrumentId;

EXTERN int asn1E_InstrumentId (OSCTXT* pctxt,
   InstrumentId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InstrumentId (OSCTXT* pctxt, InstrumentId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_InstrumentId (OSCTXT* pctxt, InstrumentId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InstrumentId (OSCTXT* pctxt, InstrumentId* pvalue);

EXTERN int DOMTest_InstrumentId (OSCTXT* pctxt, InstrumentId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InstrumentId (InstrumentId* pvalue);

/**************************************************************/
/*                                                            */
/*  ExchangeId                                                */
/*                                                            */
/**************************************************************/

#define TV_ExchangeId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExchangeId {
   struct {
      unsigned exchangeIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* exchangeIdScheme;
   const OSUTF8CHAR* base;
} ExchangeId;

EXTERN int asn1E_ExchangeId (OSCTXT* pctxt,
   ExchangeId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExchangeId (OSCTXT* pctxt, ExchangeId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExchangeId (OSCTXT* pctxt, ExchangeId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExchangeId (OSCTXT* pctxt, ExchangeId* pvalue);

EXTERN int DOMTest_ExchangeId (OSCTXT* pctxt, ExchangeId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExchangeId (ExchangeId* pvalue);

/**************************************************************/
/*                                                            */
/*  ClearanceSystem                                           */
/*                                                            */
/**************************************************************/

#define TV_ClearanceSystem	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ClearanceSystem {
   struct {
      unsigned clearanceSystemIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* clearanceSystemIdScheme;
   const OSUTF8CHAR* base;
} ClearanceSystem;

EXTERN int asn1E_ClearanceSystem (OSCTXT* pctxt,
   ClearanceSystem *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ClearanceSystem (OSCTXT* pctxt, ClearanceSystem *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ClearanceSystem (OSCTXT* pctxt, ClearanceSystem* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ClearanceSystem (OSCTXT* pctxt, ClearanceSystem* pvalue);

EXTERN int DOMTest_ClearanceSystem (OSCTXT* pctxt, ClearanceSystem* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ClearanceSystem (ClearanceSystem* pvalue);

/**************************************************************/
/*                                                            */
/*  Bond                                                      */
/*                                                            */
/**************************************************************/

#define TV_Bond	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Bond {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned issuerNamePresent : 1;
      unsigned couponRatePresent : 1;
      unsigned maturityPresent : 1;
      unsigned parValuePresent : 1;
      unsigned faceAmountPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   const OSUTF8CHAR* issuerName;
   OSREAL couponRate;
   const char* maturity;
   OSREAL parValue;
   OSREAL faceAmount;
} Bond;

EXTERN int asn1E_Bond (OSCTXT* pctxt,
   Bond *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Bond (OSCTXT* pctxt, Bond *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Bond (OSCTXT* pctxt, Bond* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Bond (OSCTXT* pctxt, Bond* pvalue);

EXTERN int DOMTest_Bond (OSCTXT* pctxt, Bond* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Bond (Bond* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_1                                         */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_1 {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
} UnderlyingAsset_1;

EXTERN int asn1E_UnderlyingAsset_1 (OSCTXT* pctxt,
   UnderlyingAsset_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_1 (OSCTXT* pctxt, UnderlyingAsset_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_1 (OSCTXT* pctxt, UnderlyingAsset_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_1 (OSCTXT* pctxt, UnderlyingAsset_1* pvalue)
   ;

EXTERN int DOMTest_UnderlyingAsset_1 (OSCTXT* pctxt, UnderlyingAsset_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_1 (UnderlyingAsset_1* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_bond                          */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_bond	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_bond {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned issuerNamePresent : 1;
      unsigned couponRatePresent : 1;
      unsigned maturityPresent : 1;
      unsigned parValuePresent : 1;
      unsigned faceAmountPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   const OSUTF8CHAR* issuerName;
   OSREAL couponRate;
   const char* maturity;
   OSREAL parValue;
   OSREAL faceAmount;
} UnderlyingAsset_derivations_bond;

EXTERN int asn1E_UnderlyingAsset_derivations_bond (OSCTXT* pctxt,
   UnderlyingAsset_derivations_bond *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_bond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_bond *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_bond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_bond* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_bond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_bond* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_bond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_bond* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_bond (
   UnderlyingAsset_derivations_bond* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_convertibleBond               */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_convertibleBond	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_convertibleBond {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned issuerNamePresent : 1;
      unsigned couponRatePresent : 1;
      unsigned maturityPresent : 1;
      unsigned parValuePresent : 1;
      unsigned faceAmountPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   const OSUTF8CHAR* issuerName;
   OSREAL couponRate;
   const char* maturity;
   OSREAL parValue;
   OSREAL faceAmount;
   struct UnderlyingAsset_derivations *underlyingEquity;
} UnderlyingAsset_derivations_convertibleBond;

EXTERN int asn1E_UnderlyingAsset_derivations_convertibleBond (OSCTXT* pctxt,
   UnderlyingAsset_derivations_convertibleBond *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_convertibleBond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_convertibleBond *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_convertibleBond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_convertibleBond* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_convertibleBond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_convertibleBond* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_convertibleBond (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_convertibleBond* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_convertibleBond (
   UnderlyingAsset_derivations_convertibleBond* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_equity                        */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_equity	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_equity {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   ExchangeId optionsExchangeId;
} UnderlyingAsset_derivations_equity;

EXTERN int asn1E_UnderlyingAsset_derivations_equity (OSCTXT* pctxt,
   UnderlyingAsset_derivations_equity *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_equity (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_equity *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_equity (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_equity* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_equity (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_equity* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_equity (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_equity* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_equity (
   UnderlyingAsset_derivations_equity* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_exchangeTradedFund            */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_exchangeTradedFund	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_exchangeTradedFund {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
      unsigned fundManagerPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   ExchangeId optionsExchangeId;
   const OSUTF8CHAR* fundManager;
} UnderlyingAsset_derivations_exchangeTradedFund;

EXTERN int asn1E_UnderlyingAsset_derivations_exchangeTradedFund (OSCTXT* pctxt,
   UnderlyingAsset_derivations_exchangeTradedFund *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_exchangeTradedFund (
   OSCTXT* pctxt, UnderlyingAsset_derivations_exchangeTradedFund *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_exchangeTradedFund 
   (OSCTXT* pctxt, UnderlyingAsset_derivations_exchangeTradedFund* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_exchangeTradedFund 
   (OSCTXT* pctxt, UnderlyingAsset_derivations_exchangeTradedFund* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_exchangeTradedFund (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_exchangeTradedFund* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_exchangeTradedFund (
   UnderlyingAsset_derivations_exchangeTradedFund* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_future                        */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_future	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_future {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
      unsigned multiplierPresent : 1;
      unsigned futureContractReferencePresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   ExchangeId optionsExchangeId;
   OSINT32 multiplier;
   const OSUTF8CHAR* futureContractReference;
} UnderlyingAsset_derivations_future;

EXTERN int asn1E_UnderlyingAsset_derivations_future (OSCTXT* pctxt,
   UnderlyingAsset_derivations_future *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_future (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_future *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_future (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_future* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_future (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_future* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_future (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_future* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_future (
   UnderlyingAsset_derivations_future* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_index_futureId                */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_index_futureId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_index_futureId {
   struct {
      unsigned futureIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* futureIdScheme;
   const OSUTF8CHAR* base;
} UnderlyingAsset_derivations_index_futureId;

EXTERN int asn1E_UnderlyingAsset_derivations_index_futureId (OSCTXT* pctxt,
   UnderlyingAsset_derivations_index_futureId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_index_futureId (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index_futureId *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_index_futureId (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index_futureId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_index_futureId (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index_futureId* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_index_futureId (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index_futureId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_index_futureId (
   UnderlyingAsset_derivations_index_futureId* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_index                         */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_index	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_index {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned futureIdPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   UnderlyingAsset_derivations_index_futureId futureId;
} UnderlyingAsset_derivations_index;

EXTERN int asn1E_UnderlyingAsset_derivations_index (OSCTXT* pctxt,
   UnderlyingAsset_derivations_index *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_index (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_index (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_index (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_index (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_index* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_index (
   UnderlyingAsset_derivations_index* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations_mutualFund                    */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations_mutualFund	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN UnderlyingAsset_derivations_mutualFund {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned openEndedFundPresent : 1;
      unsigned fundManagerPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   OSBOOL openEndedFund;
   const OSUTF8CHAR* fundManager;
} UnderlyingAsset_derivations_mutualFund;

EXTERN int asn1E_UnderlyingAsset_derivations_mutualFund (OSCTXT* pctxt,
   UnderlyingAsset_derivations_mutualFund *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations_mutualFund (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_mutualFund *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations_mutualFund (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_mutualFund* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations_mutualFund (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_mutualFund* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations_mutualFund (OSCTXT* pctxt, 
   UnderlyingAsset_derivations_mutualFund* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations_mutualFund (
   UnderlyingAsset_derivations_mutualFund* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UnderlyingAsset_derivations_underlyingAsset 1
#define T_UnderlyingAsset_derivations_bond 2
#define T_UnderlyingAsset_derivations_convertibleBond 3
#define T_UnderlyingAsset_derivations_equity 4
#define T_UnderlyingAsset_derivations_exchangeTradedFund 5
#define T_UnderlyingAsset_derivations_future 6
#define T_UnderlyingAsset_derivations_index 7
#define T_UnderlyingAsset_derivations_mutualFund 8

typedef struct EXTERN UnderlyingAsset_derivations {
   int t;
   union {
      /* t = 1 */
      UnderlyingAsset_1 *underlyingAsset;
      /* t = 2 */
      UnderlyingAsset_derivations_bond *bond;
      /* t = 3 */
      UnderlyingAsset_derivations_convertibleBond *convertibleBond;
      /* t = 4 */
      UnderlyingAsset_derivations_equity *equity;
      /* t = 5 */
      UnderlyingAsset_derivations_exchangeTradedFund *exchangeTradedFund;
      /* t = 6 */
      UnderlyingAsset_derivations_future *future;
      /* t = 7 */
      UnderlyingAsset_derivations_index *index;
      /* t = 8 */
      UnderlyingAsset_derivations_mutualFund *mutualFund;
   } u;
} UnderlyingAsset_derivations;

EXTERN int asn1E_UnderlyingAsset_derivations (OSCTXT* pctxt,
   UnderlyingAsset_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_derivations (OSCTXT* pctxt, 
   UnderlyingAsset_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_derivations (OSCTXT* pctxt, 
   UnderlyingAsset_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_derivations (OSCTXT* pctxt, 
   UnderlyingAsset_derivations* pvalue);

EXTERN int DOMTest_UnderlyingAsset_derivations (OSCTXT* pctxt, 
   UnderlyingAsset_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_derivations (UnderlyingAsset_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  ConvertibleBond                                           */
/*                                                            */
/**************************************************************/

#define TV_ConvertibleBond	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConvertibleBond {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned issuerNamePresent : 1;
      unsigned couponRatePresent : 1;
      unsigned maturityPresent : 1;
      unsigned parValuePresent : 1;
      unsigned faceAmountPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   const OSUTF8CHAR* issuerName;
   OSREAL couponRate;
   const char* maturity;
   OSREAL parValue;
   OSREAL faceAmount;
   UnderlyingAsset_derivations underlyingEquity;
} ConvertibleBond;

EXTERN int asn1E_ConvertibleBond (OSCTXT* pctxt,
   ConvertibleBond *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConvertibleBond (OSCTXT* pctxt, ConvertibleBond *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConvertibleBond (OSCTXT* pctxt, ConvertibleBond* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConvertibleBond (OSCTXT* pctxt, ConvertibleBond* pvalue);

EXTERN int DOMTest_ConvertibleBond (OSCTXT* pctxt, ConvertibleBond* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConvertibleBond (ConvertibleBond* pvalue);

/**************************************************************/
/*                                                            */
/*  Equity                                                    */
/*                                                            */
/**************************************************************/

#define TV_Equity	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Equity {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   ExchangeId optionsExchangeId;
} Equity;

EXTERN int asn1E_Equity (OSCTXT* pctxt,
   Equity *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Equity (OSCTXT* pctxt, Equity *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Equity (OSCTXT* pctxt, Equity* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Equity (OSCTXT* pctxt, Equity* pvalue);

EXTERN int DOMTest_Equity (OSCTXT* pctxt, Equity* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Equity (Equity* pvalue);

/**************************************************************/
/*                                                            */
/*  ExchangeTradedFund                                        */
/*                                                            */
/**************************************************************/

#define TV_ExchangeTradedFund	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExchangeTradedFund {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
      unsigned fundManagerPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   ExchangeId optionsExchangeId;
   const OSUTF8CHAR* fundManager;
} ExchangeTradedFund;

EXTERN int asn1E_ExchangeTradedFund (OSCTXT* pctxt,
   ExchangeTradedFund *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExchangeTradedFund (OSCTXT* pctxt, 
   ExchangeTradedFund *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExchangeTradedFund (OSCTXT* pctxt, 
   ExchangeTradedFund* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExchangeTradedFund (OSCTXT* pctxt, 
   ExchangeTradedFund* pvalue);

EXTERN int DOMTest_ExchangeTradedFund (OSCTXT* pctxt, ExchangeTradedFund* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExchangeTradedFund (ExchangeTradedFund* pvalue);

/**************************************************************/
/*                                                            */
/*  Future                                                    */
/*                                                            */
/**************************************************************/

#define TV_Future	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Future {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned relatedExchangeIdPresent : 1;
      unsigned optionsExchangeIdPresent : 1;
      unsigned multiplierPresent : 1;
      unsigned futureContractReferencePresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   ExchangeId relatedExchangeId;
   ExchangeId optionsExchangeId;
   OSINT32 multiplier;
   const OSUTF8CHAR* futureContractReference;
} Future;

EXTERN int asn1E_Future (OSCTXT* pctxt,
   Future *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Future (OSCTXT* pctxt, Future *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Future (OSCTXT* pctxt, Future* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Future (OSCTXT* pctxt, Future* pvalue);

EXTERN int DOMTest_Future (OSCTXT* pctxt, Future* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Future (Future* pvalue);

/**************************************************************/
/*                                                            */
/*  Index_futureId                                            */
/*                                                            */
/**************************************************************/

#define TV_Index_futureId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Index_futureId {
   struct {
      unsigned futureIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* futureIdScheme;
   const OSUTF8CHAR* base;
} Index_futureId;

EXTERN int asn1E_Index_futureId (OSCTXT* pctxt,
   Index_futureId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Index_futureId (OSCTXT* pctxt, Index_futureId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Index_futureId (OSCTXT* pctxt, Index_futureId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Index_futureId (OSCTXT* pctxt, Index_futureId* pvalue);

EXTERN int DOMTest_Index_futureId (OSCTXT* pctxt, Index_futureId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Index_futureId (Index_futureId* pvalue);

/**************************************************************/
/*                                                            */
/*  Index                                                     */
/*                                                            */
/**************************************************************/

#define TV_Index	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Index {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned futureIdPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   Index_futureId futureId;
} Index;

EXTERN int asn1E_Index (OSCTXT* pctxt,
   Index *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Index (OSCTXT* pctxt, Index *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Index (OSCTXT* pctxt, Index* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Index (OSCTXT* pctxt, Index* pvalue);

EXTERN int DOMTest_Index (OSCTXT* pctxt, Index* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Index (Index* pvalue);

/**************************************************************/
/*                                                            */
/*  MutualFund                                                */
/*                                                            */
/**************************************************************/

#define TV_MutualFund	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MutualFund {
   struct {
      unsigned descriptionPresent : 1;
      unsigned currencyPresent : 1;
      unsigned exchangeIdPresent : 1;
      unsigned clearanceSystemPresent : 1;
      unsigned openEndedFundPresent : 1;
      unsigned fundManagerPresent : 1;
   } m;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   const OSUTF8CHAR* description;
   Currency currency;
   ExchangeId exchangeId;
   ClearanceSystem clearanceSystem;
   OSBOOL openEndedFund;
   const OSUTF8CHAR* fundManager;
} MutualFund;

EXTERN int asn1E_MutualFund (OSCTXT* pctxt,
   MutualFund *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MutualFund (OSCTXT* pctxt, MutualFund *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MutualFund (OSCTXT* pctxt, MutualFund* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MutualFund (OSCTXT* pctxt, MutualFund* pvalue);

EXTERN int DOMTest_MutualFund (OSCTXT* pctxt, MutualFund* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MutualFund (MutualFund* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset_group                                     */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset_group	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_UnderlyingAsset_group_bond    1
#define T_UnderlyingAsset_group_convertibleBond 2
#define T_UnderlyingAsset_group_equity  3
#define T_UnderlyingAsset_group_exchangeTradedFund 4
#define T_UnderlyingAsset_group_future  5
#define T_UnderlyingAsset_group_index   6
#define T_UnderlyingAsset_group_mutualFund 7

typedef struct EXTERN UnderlyingAsset_group {
   int t;
   union {
      /* t = 1 */
      Bond *bond;
      /* t = 2 */
      ConvertibleBond *convertibleBond;
      /* t = 3 */
      Equity *equity;
      /* t = 4 */
      ExchangeTradedFund *exchangeTradedFund;
      /* t = 5 */
      Future *future;
      /* t = 6 */
      Index *index;
      /* t = 7 */
      MutualFund *mutualFund;
   } u;
} UnderlyingAsset_group;

EXTERN int asn1E_UnderlyingAsset_group (OSCTXT* pctxt,
   UnderlyingAsset_group *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset_group (OSCTXT* pctxt, 
   UnderlyingAsset_group *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset_group (OSCTXT* pctxt, 
   UnderlyingAsset_group* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset_group (OSCTXT* pctxt, 
   UnderlyingAsset_group* pvalue);

EXTERN int DOMTest_UnderlyingAsset_group (OSCTXT* pctxt, 
   UnderlyingAsset_group* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset_group (UnderlyingAsset_group* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendPayout                                            */
/*                                                            */
/**************************************************************/

#define TV_DividendPayout	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DividendPayout_dividendPayoutRatio 1
#define T_DividendPayout_dividendPayoutConditions 2

typedef struct EXTERN DividendPayout {
   int t;
   union {
      /* t = 1 */
      OSREAL dividendPayoutRatio;
      /* t = 2 */
      const OSUTF8CHAR* dividendPayoutConditions;
   } u;
} DividendPayout;

EXTERN int asn1E_DividendPayout (OSCTXT* pctxt,
   DividendPayout *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendPayout (OSCTXT* pctxt, DividendPayout *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendPayout (OSCTXT* pctxt, DividendPayout* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendPayout (OSCTXT* pctxt, DividendPayout* pvalue);

EXTERN int DOMTest_DividendPayout (OSCTXT* pctxt, DividendPayout* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendPayout (DividendPayout* pvalue);

/**************************************************************/
/*                                                            */
/*  SingleUnderlyer                                           */
/*                                                            */
/**************************************************************/

#define TV_SingleUnderlyer	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SingleUnderlyer {
   struct {
      unsigned openUnitsPresent : 1;
      unsigned dividendPayoutPresent : 1;
   } m;
   UnderlyingAsset_group underlyingAsset;
   OSREAL openUnits;
   DividendPayout dividendPayout;
} SingleUnderlyer;

EXTERN int asn1E_SingleUnderlyer (OSCTXT* pctxt,
   SingleUnderlyer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SingleUnderlyer (OSCTXT* pctxt, SingleUnderlyer *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SingleUnderlyer (OSCTXT* pctxt, SingleUnderlyer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SingleUnderlyer (OSCTXT* pctxt, SingleUnderlyer* pvalue);

EXTERN int DOMTest_SingleUnderlyer (OSCTXT* pctxt, SingleUnderlyer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SingleUnderlyer (SingleUnderlyer* pvalue);

/**************************************************************/
/*                                                            */
/*  ConstituentWeight                                         */
/*                                                            */
/**************************************************************/

#define TV_ConstituentWeight	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConstituentWeight {
   struct {
      unsigned basketPercentagePresent : 1;
   } m;
   OSREAL openUnits;
   OSREAL basketPercentage;
} ConstituentWeight;

EXTERN int asn1E_ConstituentWeight (OSCTXT* pctxt,
   ConstituentWeight *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConstituentWeight (OSCTXT* pctxt, ConstituentWeight *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConstituentWeight (OSCTXT* pctxt, ConstituentWeight* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConstituentWeight (OSCTXT* pctxt, ConstituentWeight* pvalue)
   ;

EXTERN int DOMTest_ConstituentWeight (OSCTXT* pctxt, ConstituentWeight* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConstituentWeight (ConstituentWeight* pvalue);

/**************************************************************/
/*                                                            */
/*  CommissionDenominationEnum                                */
/*                                                            */
/**************************************************************/

#define TV_CommissionDenominationEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   CommissionDenominationEnum_bPS = 0,
   CommissionDenominationEnum_centsPerShare = 1,
   CommissionDenominationEnum_fixedAmount = 2,
   CommissionDenominationEnum_percentage = 3
} CommissionDenominationEnum_Root;

typedef OSUINT32 CommissionDenominationEnum;

EXTERN int asn1E_CommissionDenominationEnum (OSCTXT* pctxt,
   CommissionDenominationEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CommissionDenominationEnum (OSCTXT* pctxt, 
   CommissionDenominationEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CommissionDenominationEnum (OSCTXT* pctxt, 
   CommissionDenominationEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CommissionDenominationEnum (OSCTXT* pctxt, 
   CommissionDenominationEnum* pvalue);

EXTERN const OSUTF8CHAR* CommissionDenominationEnum_ToString (OSINT32 value);

EXTERN int CommissionDenominationEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CommissionDenominationEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  Commission                                                */
/*                                                            */
/**************************************************************/

#define TV_Commission	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Commission {
   struct {
      unsigned currencyPresent : 1;
   } m;
   CommissionDenominationEnum commissionDenomination;
   OSREAL commissionAmount;
   Currency currency;
} Commission;

EXTERN int asn1E_Commission (OSCTXT* pctxt,
   Commission *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Commission (OSCTXT* pctxt, Commission *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Commission (OSCTXT* pctxt, Commission* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Commission (OSCTXT* pctxt, Commission* pvalue);

EXTERN int DOMTest_Commission (OSCTXT* pctxt, Commission* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Commission (Commission* pvalue);

/**************************************************************/
/*                                                            */
/*  AmountRelativeTo                                          */
/*                                                            */
/**************************************************************/

#define TV_AmountRelativeTo	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AmountRelativeTo {
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* base;
} AmountRelativeTo;

EXTERN int asn1E_AmountRelativeTo (OSCTXT* pctxt,
   AmountRelativeTo *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AmountRelativeTo (OSCTXT* pctxt, AmountRelativeTo *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AmountRelativeTo (OSCTXT* pctxt, AmountRelativeTo* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AmountRelativeTo (OSCTXT* pctxt, AmountRelativeTo* pvalue);

EXTERN int DOMTest_AmountRelativeTo (OSCTXT* pctxt, AmountRelativeTo* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AmountRelativeTo (AmountRelativeTo* pvalue);

/**************************************************************/
/*                                                            */
/*  PriceExpressionEnum                                       */
/*                                                            */
/**************************************************************/

#define TV_PriceExpressionEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   PriceExpressionEnum_absoluteTerms = 0,
   PriceExpressionEnum_percentageOfNotional = 1
} PriceExpressionEnum_Root;

typedef OSUINT32 PriceExpressionEnum;

EXTERN int asn1E_PriceExpressionEnum (OSCTXT* pctxt,
   PriceExpressionEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PriceExpressionEnum (OSCTXT* pctxt, 
   PriceExpressionEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PriceExpressionEnum (OSCTXT* pctxt, 
   PriceExpressionEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PriceExpressionEnum (OSCTXT* pctxt, 
   PriceExpressionEnum* pvalue);

EXTERN const OSUTF8CHAR* PriceExpressionEnum_ToString (OSINT32 value);

EXTERN int PriceExpressionEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, PriceExpressionEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  ActualPrice                                               */
/*                                                            */
/**************************************************************/

#define TV_ActualPrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ActualPrice {
   struct {
      unsigned currencyPresent : 1;
   } m;
   Currency currency;
   OSREAL amount;
   PriceExpressionEnum priceExpression;
} ActualPrice;

EXTERN int asn1E_ActualPrice (OSCTXT* pctxt,
   ActualPrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ActualPrice (OSCTXT* pctxt, ActualPrice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ActualPrice (OSCTXT* pctxt, ActualPrice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ActualPrice (OSCTXT* pctxt, ActualPrice* pvalue);

EXTERN int DOMTest_ActualPrice (OSCTXT* pctxt, ActualPrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ActualPrice (ActualPrice* pvalue);

/**************************************************************/
/*                                                            */
/*  FxRate                                                    */
/*                                                            */
/**************************************************************/

#define TV_FxRate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FxRate {
   QuotedCurrencyPair quotedCurrencyPair;
   OSREAL rate;
} FxRate;

EXTERN int asn1E_FxRate (OSCTXT* pctxt,
   FxRate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxRate (OSCTXT* pctxt, FxRate *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FxRate (OSCTXT* pctxt, FxRate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxRate (OSCTXT* pctxt, FxRate* pvalue);

EXTERN int DOMTest_FxRate (OSCTXT* pctxt, FxRate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxRate (FxRate* pvalue);

/**************************************************************/
/*                                                            */
/*  FxRate_derivations                                        */
/*                                                            */
/**************************************************************/

#define TV_FxRate_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FxRate_derivations_fxRate     1
#define T_FxRate_derivations_exchangeRate 2

typedef struct EXTERN FxRate_derivations {
   int t;
   union {
      /* t = 1 */
      FxRate *fxRate;
      /* t = 2 */
      ExchangeRate *exchangeRate;
   } u;
} FxRate_derivations;

EXTERN int asn1E_FxRate_derivations (OSCTXT* pctxt,
   FxRate_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FxRate_derivations (OSCTXT* pctxt, 
   FxRate_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FxRate_derivations (OSCTXT* pctxt, 
   FxRate_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FxRate_derivations (OSCTXT* pctxt, 
   FxRate_derivations* pvalue);

EXTERN int DOMTest_FxRate_derivations (OSCTXT* pctxt, FxRate_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FxRate_derivations (FxRate_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_sequence_fxConversion                               */
/*                                                            */
/**************************************************************/

#define TV_Price_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_sequence_fxConversion_amountRelativeTo 1
#define T_Price_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN Price_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} Price_sequence_fxConversion;

EXTERN int asn1E_Price_sequence_fxConversion (OSCTXT* pctxt,
   Price_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_sequence_fxConversion (OSCTXT* pctxt, 
   Price_sequence_fxConversion *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_sequence_fxConversion (OSCTXT* pctxt, 
   Price_sequence_fxConversion* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_sequence_fxConversion (OSCTXT* pctxt, 
   Price_sequence_fxConversion* pvalue);

EXTERN int DOMTest_Price_sequence_fxConversion (OSCTXT* pctxt, 
   Price_sequence_fxConversion* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_sequence_fxConversion (Price_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_sequence                                            */
/*                                                            */
/**************************************************************/

#define TV_Price_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   Price_sequence_fxConversion fxConversion;
} Price_sequence;

EXTERN int asn1E_Price_sequence (OSCTXT* pctxt,
   Price_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_sequence (OSCTXT* pctxt, Price_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_sequence (OSCTXT* pctxt, Price_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_sequence (OSCTXT* pctxt, Price_sequence* pvalue);

EXTERN int DOMTest_Price_sequence (OSCTXT* pctxt, Price_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_sequence (Price_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_choice                                              */
/*                                                            */
/**************************************************************/

#define TV_Price_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_choice_determinationMethod 1
#define T_Price_choice_amountRelativeTo 2
#define T_Price_choice_sequence         3

typedef struct EXTERN Price_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      Price_sequence *sequence;
   } u;
} Price_choice;

EXTERN int asn1E_Price_choice (OSCTXT* pctxt,
   Price_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_choice (OSCTXT* pctxt, Price_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_choice (OSCTXT* pctxt, Price_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_choice (OSCTXT* pctxt, Price_choice* pvalue);

EXTERN int DOMTest_Price_choice (OSCTXT* pctxt, Price_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_choice (Price_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Price                                                     */
/*                                                            */
/**************************************************************/

#define TV_Price	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price {
   struct {
      unsigned commissionPresent : 1;
   } m;
   Commission commission;
   Price_choice choice;
} Price;

EXTERN int asn1E_Price (OSCTXT* pctxt,
   Price *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price (OSCTXT* pctxt, Price *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Price (OSCTXT* pctxt, Price* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price (OSCTXT* pctxt, Price* pvalue);

EXTERN int DOMTest_Price (OSCTXT* pctxt, Price* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price (Price* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_initialPrice_seque  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion_amountRelativeTo 1
#define T_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion;

EXTERN int asn1E_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion (
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_initialPrice_seque  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_initialPrice_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_initialPrice_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   Price_derivations_equitySwapValuation_initialPrice_sequence_fxConversion fxConversion;
} Price_derivations_equitySwapValuation_initialPrice_sequence;

EXTERN int asn1E_Price_derivations_equitySwapValuation_initialPrice_sequence (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_initialPrice_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_initialPrice_sequence (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations_equitySwapValuation_initialPrice_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations_equitySwapValuation_initialPrice_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence* pvalue);

EXTERN int DOMTest_Price_derivations_equitySwapValuation_initialPrice_sequence (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_initialPrice_sequence (
   Price_derivations_equitySwapValuation_initialPrice_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_initialPrice_choic  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_initialPrice_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_initialPrice_choice_determinationMethod 1
#define T_Price_derivations_equitySwapValuation_initialPrice_choice_amountRelativeTo 2
#define T_Price_derivations_equitySwapValuation_initialPrice_choice_sequence 3

typedef struct EXTERN Price_derivations_equitySwapValuation_initialPrice_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      Price_derivations_equitySwapValuation_initialPrice_sequence *sequence;
   } u;
} Price_derivations_equitySwapValuation_initialPrice_choice;

EXTERN int asn1E_Price_derivations_equitySwapValuation_initialPrice_choice (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_initialPrice_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_initialPrice_choice (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations_equitySwapValuation_initialPrice_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations_equitySwapValuation_initialPrice_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_choice* pvalue);

EXTERN int DOMTest_Price_derivations_equitySwapValuation_initialPrice_choice (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_initialPrice_choice (
   Price_derivations_equitySwapValuation_initialPrice_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  TimeTypeEnum                                              */
/*                                                            */
/**************************************************************/

#define TV_TimeTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   TimeTypeEnum_close = 0,
   TimeTypeEnum_oSP = 1,
   TimeTypeEnum_open = 2,
   TimeTypeEnum_specificTime = 3,
   TimeTypeEnum_xETRA = 4
} TimeTypeEnum_Root;

typedef OSUINT32 TimeTypeEnum;

EXTERN int asn1E_TimeTypeEnum (OSCTXT* pctxt,
   TimeTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TimeTypeEnum (OSCTXT* pctxt, TimeTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TimeTypeEnum (OSCTXT* pctxt, TimeTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TimeTypeEnum (OSCTXT* pctxt, TimeTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* TimeTypeEnum_ToString (OSINT32 value);

EXTERN int TimeTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TimeTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateSequence_dateOffset                           */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateSequence_dateOffset	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RelativeDateSequence_dateOffset {
   struct {
      unsigned dayTypePresent : 1;
      unsigned sequencePresent : 1;
   } m;
   OSINT32 periodMultiplier;
   PeriodEnum period;
   DayTypeEnum dayType;
   BusinessDayConventionEnum businessDayConvention;
   OSINT32 sequence;
} RelativeDateSequence_dateOffset;

EXTERN int asn1E_RelativeDateSequence_dateOffset (OSCTXT* pctxt,
   RelativeDateSequence_dateOffset *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateSequence_dateOffset (OSCTXT* pctxt, 
   RelativeDateSequence_dateOffset *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateSequence_dateOffset (OSCTXT* pctxt, 
   RelativeDateSequence_dateOffset* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateSequence_dateOffset (OSCTXT* pctxt, 
   RelativeDateSequence_dateOffset* pvalue);

EXTERN int DOMTest_RelativeDateSequence_dateOffset (OSCTXT* pctxt, 
   RelativeDateSequence_dateOffset* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDateSequence_dateOffset (
   RelativeDateSequence_dateOffset* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateSequence_choice                               */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateSequence_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_RelativeDateSequence_choice_businessCentersReference 1
#define T_RelativeDateSequence_choice_businessCenters 2

typedef struct EXTERN RelativeDateSequence_choice {
   int t;
   union {
      /* t = 1 */
      BusinessCentersReference *businessCentersReference;
      /* t = 2 */
      BusinessCenters *businessCenters;
   } u;
} RelativeDateSequence_choice;

EXTERN int asn1E_RelativeDateSequence_choice (OSCTXT* pctxt,
   RelativeDateSequence_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateSequence_choice (OSCTXT* pctxt, 
   RelativeDateSequence_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateSequence_choice (OSCTXT* pctxt, 
   RelativeDateSequence_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateSequence_choice (OSCTXT* pctxt, 
   RelativeDateSequence_choice* pvalue);

EXTERN int DOMTest_RelativeDateSequence_choice (OSCTXT* pctxt, 
   RelativeDateSequence_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDateSequence_choice (RelativeDateSequence_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  RelativeDateSequence                                      */
/*                                                            */
/**************************************************************/

#define TV_RelativeDateSequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RelativeDateSequence {
   struct {
      unsigned choicePresent : 1;
   } m;
   DateRelativeTo dateRelativeTo;
   /* List of RelativeDateSequence_dateOffset */
   OSRTDList dateOffset_list;
   RelativeDateSequence_choice choice;
} RelativeDateSequence;

EXTERN int asn1E_RelativeDateSequence (OSCTXT* pctxt,
   RelativeDateSequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RelativeDateSequence (OSCTXT* pctxt, 
   RelativeDateSequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RelativeDateSequence (OSCTXT* pctxt, 
   RelativeDateSequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RelativeDateSequence (OSCTXT* pctxt, 
   RelativeDateSequence* pvalue);

EXTERN int DOMTest_RelativeDateSequence (OSCTXT* pctxt, RelativeDateSequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RelativeDateSequence (RelativeDateSequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_initialPrice_equit  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate_adjustableDate 1
#define T_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN Price_derivations_equitySwapValuation_initialPrice_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} Price_derivations_equitySwapValuation_initialPrice_equityValuationDate;

EXTERN int asn1E_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_initialPrice_equityValuationDate (
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_initialPrice        */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_initialPrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_initialPrice {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned equityValuationDatePresent : 1;
   } m;
   Commission commission;
   Price_derivations_equitySwapValuation_initialPrice_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   Price_derivations_equitySwapValuation_initialPrice_equityValuationDate equityValuationDate;
} Price_derivations_equitySwapValuation_initialPrice;

EXTERN int asn1E_Price_derivations_equitySwapValuation_initialPrice (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_initialPrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_initialPrice (
   OSCTXT* pctxt, Price_derivations_equitySwapValuation_initialPrice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations_equitySwapValuation_initialPrice 
   (OSCTXT* pctxt, Price_derivations_equitySwapValuation_initialPrice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations_equitySwapValuation_initialPrice 
   (OSCTXT* pctxt, Price_derivations_equitySwapValuation_initialPrice* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_initialPrice (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_initialPrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_initialPrice (
   Price_derivations_equitySwapValuation_initialPrice* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceInte  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion_amountRelativeTo 1
#define T_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion (
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceInte  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceInterim_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence_fxConversion fxConversion;
} Price_derivations_equitySwapValuation_valuationPriceInterim_sequence;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceInterim_sequence (
   Price_derivations_equitySwapValuation_valuationPriceInterim_sequence* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceInte  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceInterim_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_valuationPriceInterim_choice_determinationMethod 1
#define T_Price_derivations_equitySwapValuation_valuationPriceInterim_choice_amountRelativeTo 2
#define T_Price_derivations_equitySwapValuation_valuationPriceInterim_choice_sequence 3

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceInterim_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      Price_derivations_equitySwapValuation_valuationPriceInterim_sequence *sequence;
   } u;
} Price_derivations_equitySwapValuation_valuationPriceInterim_choice;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceInterim_choice (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceInterim_choice (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceInterim_choice (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceInterim_choice (
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableRelativeOrPeriodicDates_periodicDates           */
/*                                                            */
/**************************************************************/

#define TV_AdjustableRelativeOrPeriodicDates_periodicDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableRelativeOrPeriodicDates_periodicDates {
   struct {
      unsigned calculationEndDatePresent : 1;
   } m;
   AdjustableOrRelativeDate calculationStartDate;
   AdjustableOrRelativeDate calculationEndDate;
   CalculationPeriodFrequency calculationPeriodFrequency;
   BusinessDayAdjustments calculationPeriodDatesAdjustments;
} AdjustableRelativeOrPeriodicDates_periodicDates;

EXTERN int asn1E_AdjustableRelativeOrPeriodicDates_periodicDates (OSCTXT* pctxt,
   AdjustableRelativeOrPeriodicDates_periodicDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableRelativeOrPeriodicDates_periodicDates (
   OSCTXT* pctxt, AdjustableRelativeOrPeriodicDates_periodicDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableRelativeOrPeriodicDates_periodicDates 
   (OSCTXT* pctxt, AdjustableRelativeOrPeriodicDates_periodicDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableRelativeOrPeriodicDates_periodicDates 
   (OSCTXT* pctxt, AdjustableRelativeOrPeriodicDates_periodicDates* pvalue);

EXTERN int DOMTest_AdjustableRelativeOrPeriodicDates_periodicDates (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates_periodicDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableRelativeOrPeriodicDates_periodicDates (
   AdjustableRelativeOrPeriodicDates_periodicDates* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableRelativeOrPeriodicDates_choice                  */
/*                                                            */
/**************************************************************/

#define TV_AdjustableRelativeOrPeriodicDates_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AdjustableRelativeOrPeriodicDates_choice_adjustableDates 1
#define T_AdjustableRelativeOrPeriodicDates_choice_relativeDateSequence 2
#define T_AdjustableRelativeOrPeriodicDates_choice_periodicDates 3

typedef struct EXTERN AdjustableRelativeOrPeriodicDates_choice {
   int t;
   union {
      /* t = 1 */
      AdjustableDates *adjustableDates;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
      /* t = 3 */
      AdjustableRelativeOrPeriodicDates_periodicDates *periodicDates;
   } u;
} AdjustableRelativeOrPeriodicDates_choice;

EXTERN int asn1E_AdjustableRelativeOrPeriodicDates_choice (OSCTXT* pctxt,
   AdjustableRelativeOrPeriodicDates_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableRelativeOrPeriodicDates_choice (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_AdjustableRelativeOrPeriodicDates_choice (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableRelativeOrPeriodicDates_choice (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates_choice* pvalue);

EXTERN int DOMTest_AdjustableRelativeOrPeriodicDates_choice (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableRelativeOrPeriodicDates_choice (
   AdjustableRelativeOrPeriodicDates_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableRelativeOrPeriodicDates                         */
/*                                                            */
/**************************************************************/

#define TV_AdjustableRelativeOrPeriodicDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableRelativeOrPeriodicDates {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableRelativeOrPeriodicDates_choice choice;
} AdjustableRelativeOrPeriodicDates;

EXTERN int asn1E_AdjustableRelativeOrPeriodicDates (OSCTXT* pctxt,
   AdjustableRelativeOrPeriodicDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableRelativeOrPeriodicDates (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableRelativeOrPeriodicDates (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableRelativeOrPeriodicDates (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates* pvalue);

EXTERN int DOMTest_AdjustableRelativeOrPeriodicDates (OSCTXT* pctxt, 
   AdjustableRelativeOrPeriodicDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableRelativeOrPeriodicDates (
   AdjustableRelativeOrPeriodicDates* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceInte  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceInterim	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceInterim {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   Price_derivations_equitySwapValuation_valuationPriceInterim_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   AdjustableRelativeOrPeriodicDates equityValuationDates;
} Price_derivations_equitySwapValuation_valuationPriceInterim;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceInterim (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceInterim *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceInterim (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceInterim 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations_equitySwapValuation_valuationPriceInterim 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim* pvalue);

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceInterim (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceInterim* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceInterim (
   Price_derivations_equitySwapValuation_valuationPriceInterim* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceFina  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion_amountRelativeTo 1
#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion (
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceFina  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceFinal_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence_fxConversion fxConversion;
} Price_derivations_equitySwapValuation_valuationPriceFinal_sequence;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceFinal_sequence (
   Price_derivations_equitySwapValuation_valuationPriceFinal_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceFina  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceFinal_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_choice_determinationMethod 1
#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_choice_amountRelativeTo 2
#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_choice_sequence 3

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceFinal_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      Price_derivations_equitySwapValuation_valuationPriceFinal_sequence *sequence;
   } u;
} Price_derivations_equitySwapValuation_valuationPriceFinal_choice;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceFinal_choice (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceFinal_choice (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice* pvalue);

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceFinal_choice (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceFinal_choice (
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceFina  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate_adjustableDate 1
#define T_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue)
   ;

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate (
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Price_derivations_equitySwapValuation_valuationPriceFina  */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations_equitySwapValuation_valuationPriceFinal	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Price_derivations_equitySwapValuation_valuationPriceFinal {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   Price_derivations_equitySwapValuation_valuationPriceFinal_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   Price_derivations_equitySwapValuation_valuationPriceFinal_equityValuationDate equityValuationDate;
} Price_derivations_equitySwapValuation_valuationPriceFinal;

EXTERN int asn1E_Price_derivations_equitySwapValuation_valuationPriceFinal (OSCTXT* pctxt,
   Price_derivations_equitySwapValuation_valuationPriceFinal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations_equitySwapValuation_valuationPriceFinal (
   OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations_equitySwapValuation_valuationPriceFinal 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations_equitySwapValuation_valuationPriceFinal 
   (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal* pvalue);

EXTERN int DOMTest_Price_derivations_equitySwapValuation_valuationPriceFinal (OSCTXT* pctxt, 
   Price_derivations_equitySwapValuation_valuationPriceFinal* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations_equitySwapValuation_valuationPriceFinal (
   Price_derivations_equitySwapValuation_valuationPriceFinal* pvalue);

/**************************************************************/
/*                                                            */
/*  Price_derivations                                         */
/*                                                            */
/**************************************************************/

#define TV_Price_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Price_derivations_price       1
#define T_Price_derivations_equitySwapValuation_initialPrice 2
#define T_Price_derivations_equitySwapValuation_valuationPriceInterim 3
#define T_Price_derivations_equitySwapValuation_valuationPriceFinal 4

typedef struct EXTERN Price_derivations {
   int t;
   union {
      /* t = 1 */
      Price *price;
      /* t = 2 */
      Price_derivations_equitySwapValuation_initialPrice *equitySwapValuation_initialPrice;
      /* t = 3 */
      Price_derivations_equitySwapValuation_valuationPriceInterim *equitySwapValuation_valuationPriceInterim;
      /* t = 4 */
      Price_derivations_equitySwapValuation_valuationPriceFinal *equitySwapValuation_valuationPriceFinal;
   } u;
} Price_derivations;

EXTERN int asn1E_Price_derivations (OSCTXT* pctxt,
   Price_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Price_derivations (OSCTXT* pctxt, Price_derivations *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Price_derivations (OSCTXT* pctxt, Price_derivations* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Price_derivations (OSCTXT* pctxt, Price_derivations* pvalue)
   ;

EXTERN int DOMTest_Price_derivations (OSCTXT* pctxt, Price_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Price_derivations (Price_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  BasketConstituent                                         */
/*                                                            */
/**************************************************************/

#define TV_BasketConstituent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BasketConstituent {
   struct {
      unsigned constituentWeightPresent : 1;
      unsigned dividendPayoutPresent : 1;
      unsigned underlyerPricePresent : 1;
      unsigned underlyerNotionalPresent : 1;
   } m;
   UnderlyingAsset_group underlyingAsset;
   ConstituentWeight constituentWeight;
   DividendPayout dividendPayout;
   Price_derivations underlyerPrice;
   Money_derivations underlyerNotional;
} BasketConstituent;

EXTERN int asn1E_BasketConstituent (OSCTXT* pctxt,
   BasketConstituent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BasketConstituent (OSCTXT* pctxt, BasketConstituent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BasketConstituent (OSCTXT* pctxt, BasketConstituent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BasketConstituent (OSCTXT* pctxt, BasketConstituent* pvalue)
   ;

EXTERN int DOMTest_BasketConstituent (OSCTXT* pctxt, BasketConstituent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BasketConstituent (BasketConstituent* pvalue);

/**************************************************************/
/*                                                            */
/*  Basket                                                    */
/*                                                            */
/**************************************************************/

#define TV_Basket	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Basket {
   OSREAL openUnits;
   /* List of BasketConstituent */
   OSRTDList basketConstituent_list;
} Basket;

EXTERN int asn1E_Basket (OSCTXT* pctxt,
   Basket *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Basket (OSCTXT* pctxt, Basket *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Basket (OSCTXT* pctxt, Basket* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Basket (OSCTXT* pctxt, Basket* pvalue);

EXTERN int DOMTest_Basket (OSCTXT* pctxt, Basket* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Basket (Basket* pvalue);

/**************************************************************/
/*                                                            */
/*  Underlyer                                                 */
/*                                                            */
/**************************************************************/

#define TV_Underlyer	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Underlyer_singleUnderlyer     1
#define T_Underlyer_basket              2

typedef struct EXTERN Underlyer {
   int t;
   union {
      /* t = 1 */
      SingleUnderlyer *singleUnderlyer;
      /* t = 2 */
      Basket *basket;
   } u;
} Underlyer;

EXTERN int asn1E_Underlyer (OSCTXT* pctxt,
   Underlyer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Underlyer (OSCTXT* pctxt, Underlyer *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Underlyer (OSCTXT* pctxt, Underlyer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Underlyer (OSCTXT* pctxt, Underlyer* pvalue);

EXTERN int DOMTest_Underlyer (OSCTXT* pctxt, Underlyer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Underlyer (Underlyer* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityStrike_choice                                       */
/*                                                            */
/**************************************************************/

#define TV_EquityStrike_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityStrike_choice_strikePrice 1
#define T_EquityStrike_choice_strikePercentage 2

typedef struct EXTERN EquityStrike_choice {
   int t;
   union {
      /* t = 1 */
      OSREAL strikePrice;
      /* t = 2 */
      OSREAL strikePercentage;
   } u;
} EquityStrike_choice;

EXTERN int asn1E_EquityStrike_choice (OSCTXT* pctxt,
   EquityStrike_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityStrike_choice (OSCTXT* pctxt, 
   EquityStrike_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityStrike_choice (OSCTXT* pctxt, 
   EquityStrike_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityStrike_choice (OSCTXT* pctxt, 
   EquityStrike_choice* pvalue);

EXTERN int DOMTest_EquityStrike_choice (OSCTXT* pctxt, EquityStrike_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityStrike_choice (EquityStrike_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityStrike                                              */
/*                                                            */
/**************************************************************/

#define TV_EquityStrike	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityStrike {
   struct {
      unsigned currencyPresent : 1;
   } m;
   EquityStrike_choice choice;
   Currency currency;
} EquityStrike;

EXTERN int asn1E_EquityStrike (OSCTXT* pctxt,
   EquityStrike *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityStrike (OSCTXT* pctxt, EquityStrike *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityStrike (OSCTXT* pctxt, EquityStrike* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityStrike (OSCTXT* pctxt, EquityStrike* pvalue);

EXTERN int DOMTest_EquityStrike (OSCTXT* pctxt, EquityStrike* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityStrike (EquityStrike* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityEuropeanExercise                                    */
/*                                                            */
/**************************************************************/

#define TV_EquityEuropeanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityEuropeanExercise {
   struct {
      unsigned idPresent : 1;
      unsigned equityExpirationTimePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate expirationDate;
   TimeTypeEnum equityExpirationTimeType;
   BusinessCenterTime equityExpirationTime;
} EquityEuropeanExercise;

EXTERN int asn1E_EquityEuropeanExercise (OSCTXT* pctxt,
   EquityEuropeanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityEuropeanExercise (OSCTXT* pctxt, 
   EquityEuropeanExercise *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityEuropeanExercise (OSCTXT* pctxt, 
   EquityEuropeanExercise* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityEuropeanExercise (OSCTXT* pctxt, 
   EquityEuropeanExercise* pvalue);

EXTERN int DOMTest_EquityEuropeanExercise (OSCTXT* pctxt, 
   EquityEuropeanExercise* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityEuropeanExercise (EquityEuropeanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityMultipleExercise                                    */
/*                                                            */
/**************************************************************/

#define TV_EquityMultipleExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityMultipleExercise {
   struct {
      unsigned integralMultipleExercisePresent : 1;
   } m;
   OSREAL integralMultipleExercise;
   OSREAL minimumNumberOfOptions;
   OSREAL maximumNumberOfOptions;
} EquityMultipleExercise;

EXTERN int asn1E_EquityMultipleExercise (OSCTXT* pctxt,
   EquityMultipleExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityMultipleExercise (OSCTXT* pctxt, 
   EquityMultipleExercise *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityMultipleExercise (OSCTXT* pctxt, 
   EquityMultipleExercise* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityMultipleExercise (OSCTXT* pctxt, 
   EquityMultipleExercise* pvalue);

EXTERN int DOMTest_EquityMultipleExercise (OSCTXT* pctxt, 
   EquityMultipleExercise* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityMultipleExercise (EquityMultipleExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityAmericanExercise                                    */
/*                                                            */
/**************************************************************/

#define TV_EquityAmericanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityAmericanExercise {
   struct {
      unsigned idPresent : 1;
      unsigned equityExpirationTimePresent : 1;
      unsigned equityMultipleExercisePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   TimeTypeEnum latestExerciseTimeType;
   TimeTypeEnum equityExpirationTimeType;
   BusinessCenterTime equityExpirationTime;
   EquityMultipleExercise equityMultipleExercise;
} EquityAmericanExercise;

EXTERN int asn1E_EquityAmericanExercise (OSCTXT* pctxt,
   EquityAmericanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityAmericanExercise (OSCTXT* pctxt, 
   EquityAmericanExercise *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityAmericanExercise (OSCTXT* pctxt, 
   EquityAmericanExercise* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityAmericanExercise (OSCTXT* pctxt, 
   EquityAmericanExercise* pvalue);

EXTERN int DOMTest_EquityAmericanExercise (OSCTXT* pctxt, 
   EquityAmericanExercise* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityAmericanExercise (EquityAmericanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  DateList                                                  */
/*                                                            */
/**************************************************************/

#define TV_DateList	(TM_UNIV|TM_CONS|16)

/* List of const char* */
typedef OSRTDList DateList;

EXTERN int asn1E_DateList (OSCTXT* pctxt,
   DateList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateList (OSCTXT* pctxt, DateList *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateList (OSCTXT* pctxt, DateList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateList (OSCTXT* pctxt, DateList* pvalue);

EXTERN int DOMTest_DateList (OSCTXT* pctxt, DateList* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateList (DateList* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityBermudanExercise                                    */
/*                                                            */
/**************************************************************/

#define TV_EquityBermudanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityBermudanExercise {
   struct {
      unsigned latestExerciseTimePresent : 1;
      unsigned equityExpirationTimePresent : 1;
      unsigned equityMultipleExercisePresent : 1;
   } m;
   AdjustableOrRelativeDate commencementDate;
   AdjustableOrRelativeDate expirationDate;
   BusinessCenterTime latestExerciseTime;
   DateList bermudanExerciseDates;
   TimeTypeEnum latestExerciseTimeType;
   TimeTypeEnum equityExpirationTimeType;
   BusinessCenterTime equityExpirationTime;
   EquityMultipleExercise equityMultipleExercise;
} EquityBermudanExercise;

EXTERN int asn1E_EquityBermudanExercise (OSCTXT* pctxt,
   EquityBermudanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityBermudanExercise (OSCTXT* pctxt, 
   EquityBermudanExercise *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityBermudanExercise (OSCTXT* pctxt, 
   EquityBermudanExercise* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityBermudanExercise (OSCTXT* pctxt, 
   EquityBermudanExercise* pvalue);

EXTERN int DOMTest_EquityBermudanExercise (OSCTXT* pctxt, 
   EquityBermudanExercise* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityBermudanExercise (EquityBermudanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityExercise_choice                                     */
/*                                                            */
/**************************************************************/

#define TV_EquityExercise_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityExercise_choice_equityEuropeanExercise 1
#define T_EquityExercise_choice_equityAmericanExercise 2
#define T_EquityExercise_choice_equityBermudanExercise 3

typedef struct EXTERN EquityExercise_choice {
   int t;
   union {
      /* t = 1 */
      EquityEuropeanExercise *equityEuropeanExercise;
      /* t = 2 */
      EquityAmericanExercise *equityAmericanExercise;
      /* t = 3 */
      EquityBermudanExercise *equityBermudanExercise;
   } u;
} EquityExercise_choice;

EXTERN int asn1E_EquityExercise_choice (OSCTXT* pctxt,
   EquityExercise_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityExercise_choice (OSCTXT* pctxt, 
   EquityExercise_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityExercise_choice (OSCTXT* pctxt, 
   EquityExercise_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityExercise_choice (OSCTXT* pctxt, 
   EquityExercise_choice* pvalue);

EXTERN int DOMTest_EquityExercise_choice (OSCTXT* pctxt, 
   EquityExercise_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityExercise_choice (EquityExercise_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityValuation                                           */
/*                                                            */
/**************************************************************/

#define TV_EquityValuation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityValuation {
   struct {
      unsigned idPresent : 1;
      unsigned valuationDatePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned futuresPriceValuationApplicablePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* valuationDate;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   OSBOOL futuresPriceValuationApplicable;
} EquityValuation;

EXTERN int asn1E_EquityValuation (OSCTXT* pctxt,
   EquityValuation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityValuation (OSCTXT* pctxt, EquityValuation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityValuation (OSCTXT* pctxt, EquityValuation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityValuation (OSCTXT* pctxt, EquityValuation* pvalue);

EXTERN int DOMTest_EquityValuation (OSCTXT* pctxt, EquityValuation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityValuation (EquityValuation* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementPriceSource                                     */
/*                                                            */
/**************************************************************/

#define TV_SettlementPriceSource	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SettlementPriceSource {
   struct {
      unsigned settlementPriceSourceSchemePresent : 1;
   } m;
   const OSUTF8CHAR* settlementPriceSourceScheme;
   const OSUTF8CHAR* base;
} SettlementPriceSource;

EXTERN int asn1E_SettlementPriceSource (OSCTXT* pctxt,
   SettlementPriceSource *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementPriceSource (OSCTXT* pctxt, 
   SettlementPriceSource *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementPriceSource (OSCTXT* pctxt, 
   SettlementPriceSource* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementPriceSource (OSCTXT* pctxt, 
   SettlementPriceSource* pvalue);

EXTERN int DOMTest_SettlementPriceSource (OSCTXT* pctxt, 
   SettlementPriceSource* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementPriceSource (SettlementPriceSource* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementTypeEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_SettlementTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   SettlementTypeEnum_cash = 0,
   SettlementTypeEnum_physical = 1
} SettlementTypeEnum_Root;

typedef OSUINT32 SettlementTypeEnum;

EXTERN int asn1E_SettlementTypeEnum (OSCTXT* pctxt,
   SettlementTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementTypeEnum (OSCTXT* pctxt, 
   SettlementTypeEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementTypeEnum (OSCTXT* pctxt, SettlementTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementTypeEnum (OSCTXT* pctxt, 
   SettlementTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* SettlementTypeEnum_ToString (OSINT32 value);

EXTERN int SettlementTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, SettlementTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityExercise                                            */
/*                                                            */
/**************************************************************/

#define TV_EquityExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityExercise {
   struct {
      unsigned settlementDatePresent : 1;
      unsigned settlementPriceSourcePresent : 1;
      unsigned failureToDeliverApplicablePresent : 1;
   } m;
   EquityExercise_choice choice;
   OSBOOL automaticExerciseApplicable;
   EquityValuation equityValuation;
   AdjustableOrRelativeDate settlementDate;
   Currency settlementCurrency;
   SettlementPriceSource settlementPriceSource;
   SettlementTypeEnum settlementType;
   OSBOOL failureToDeliverApplicable;
} EquityExercise;

EXTERN int asn1E_EquityExercise (OSCTXT* pctxt,
   EquityExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityExercise (OSCTXT* pctxt, EquityExercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityExercise (OSCTXT* pctxt, EquityExercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityExercise (OSCTXT* pctxt, EquityExercise* pvalue);

EXTERN int DOMTest_EquityExercise (OSCTXT* pctxt, EquityExercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityExercise (EquityExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  FXFeature_fxFeatureType                                   */
/*                                                            */
/**************************************************************/

#define TV_FXFeature_fxFeatureType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXFeature_fxFeatureType {
   struct {
      unsigned fxFeatureTypeSchemePresent : 1;
   } m;
   const OSUTF8CHAR* fxFeatureTypeScheme;
   const OSUTF8CHAR* base;
} FXFeature_fxFeatureType;

EXTERN int asn1E_FXFeature_fxFeatureType (OSCTXT* pctxt,
   FXFeature_fxFeatureType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXFeature_fxFeatureType (OSCTXT* pctxt, 
   FXFeature_fxFeatureType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXFeature_fxFeatureType (OSCTXT* pctxt, 
   FXFeature_fxFeatureType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXFeature_fxFeatureType (OSCTXT* pctxt, 
   FXFeature_fxFeatureType* pvalue);

EXTERN int DOMTest_FXFeature_fxFeatureType (OSCTXT* pctxt, 
   FXFeature_fxFeatureType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXFeature_fxFeatureType (FXFeature_fxFeatureType* pvalue);

/**************************************************************/
/*                                                            */
/*  FXFeature                                                 */
/*                                                            */
/**************************************************************/

#define TV_FXFeature	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FXFeature {
   struct {
      unsigned fxRatePresent : 1;
      unsigned fxSourcePresent : 1;
   } m;
   FXFeature_fxFeatureType fxFeatureType;
   OSREAL fxRate;
   FxSpotRateSource_derivations fxSource;
} FXFeature;

EXTERN int asn1E_FXFeature (OSCTXT* pctxt,
   FXFeature *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FXFeature (OSCTXT* pctxt, FXFeature *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FXFeature (OSCTXT* pctxt, FXFeature* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FXFeature (OSCTXT* pctxt, FXFeature* pvalue);

EXTERN int DOMTest_FXFeature (OSCTXT* pctxt, FXFeature* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FXFeature (FXFeature* pvalue);

/**************************************************************/
/*                                                            */
/*  AveragingInOutEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_AveragingInOutEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   AveragingInOutEnum_both = 0,
   AveragingInOutEnum_in = 1,
   AveragingInOutEnum_out = 2
} AveragingInOutEnum_Root;

typedef OSUINT32 AveragingInOutEnum;

EXTERN int asn1E_AveragingInOutEnum (OSCTXT* pctxt,
   AveragingInOutEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AveragingInOutEnum (OSCTXT* pctxt, 
   AveragingInOutEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AveragingInOutEnum (OSCTXT* pctxt, AveragingInOutEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AveragingInOutEnum (OSCTXT* pctxt, 
   AveragingInOutEnum* pvalue);

EXTERN const OSUTF8CHAR* AveragingInOutEnum_ToString (OSINT32 value);

EXTERN int AveragingInOutEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AveragingInOutEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  FrequencyTypeEnum                                         */
/*                                                            */
/**************************************************************/

#define TV_FrequencyTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   FrequencyTypeEnum_business = 0,
   FrequencyTypeEnum_day = 1
} FrequencyTypeEnum_Root;

typedef OSUINT32 FrequencyTypeEnum;

EXTERN int asn1E_FrequencyTypeEnum (OSCTXT* pctxt,
   FrequencyTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FrequencyTypeEnum (OSCTXT* pctxt, FrequencyTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FrequencyTypeEnum (OSCTXT* pctxt, FrequencyTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FrequencyTypeEnum (OSCTXT* pctxt, FrequencyTypeEnum* pvalue)
   ;

EXTERN const OSUTF8CHAR* FrequencyTypeEnum_ToString (OSINT32 value);

EXTERN int FrequencyTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, FrequencyTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySchedule                                            */
/*                                                            */
/**************************************************************/

#define TV_EquitySchedule	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySchedule {
   struct {
      unsigned weekNumberPresent : 1;
      unsigned dayOfWeekPresent : 1;
   } m;
   const char* startDate;
   const char* endDate;
   OSREAL frequency;
   FrequencyTypeEnum frequencyType;
   OSREAL weekNumber;
   WeeklyRollConventionEnum dayOfWeek;
} EquitySchedule;

EXTERN int asn1E_EquitySchedule (OSCTXT* pctxt,
   EquitySchedule *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySchedule (OSCTXT* pctxt, EquitySchedule *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySchedule (OSCTXT* pctxt, EquitySchedule* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySchedule (OSCTXT* pctxt, EquitySchedule* pvalue);

EXTERN int DOMTest_EquitySchedule (OSCTXT* pctxt, EquitySchedule* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySchedule (EquitySchedule* pvalue);

/**************************************************************/
/*                                                            */
/*  DateTimeList                                              */
/*                                                            */
/**************************************************************/

#define TV_DateTimeList	(TM_UNIV|TM_CONS|16)

/* List of const char* */
typedef OSRTDList DateTimeList;

EXTERN int asn1E_DateTimeList (OSCTXT* pctxt,
   DateTimeList *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DateTimeList (OSCTXT* pctxt, DateTimeList *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DateTimeList (OSCTXT* pctxt, DateTimeList* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DateTimeList (OSCTXT* pctxt, DateTimeList* pvalue);

EXTERN int DOMTest_DateTimeList (OSCTXT* pctxt, DateTimeList* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DateTimeList (DateTimeList* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityAveragingPeriod_marketDisruption                    */
/*                                                            */
/**************************************************************/

#define TV_EquityAveragingPeriod_marketDisruption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityAveragingPeriod_marketDisruption {
   struct {
      unsigned marketDisruptionSchemePresent : 1;
   } m;
   const OSUTF8CHAR* marketDisruptionScheme;
   const OSUTF8CHAR* base;
} EquityAveragingPeriod_marketDisruption;

EXTERN int asn1E_EquityAveragingPeriod_marketDisruption (OSCTXT* pctxt,
   EquityAveragingPeriod_marketDisruption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityAveragingPeriod_marketDisruption (OSCTXT* pctxt, 
   EquityAveragingPeriod_marketDisruption *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityAveragingPeriod_marketDisruption (OSCTXT* pctxt, 
   EquityAveragingPeriod_marketDisruption* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityAveragingPeriod_marketDisruption (OSCTXT* pctxt, 
   EquityAveragingPeriod_marketDisruption* pvalue);

EXTERN int DOMTest_EquityAveragingPeriod_marketDisruption (OSCTXT* pctxt, 
   EquityAveragingPeriod_marketDisruption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityAveragingPeriod_marketDisruption (
   EquityAveragingPeriod_marketDisruption* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityAveragingPeriod                                     */
/*                                                            */
/**************************************************************/

#define TV_EquityAveragingPeriod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityAveragingPeriod {
   struct {
      unsigned averagingDateTimesPresent : 1;
   } m;
   /* List of EquitySchedule */
   OSRTDList schedule_list;
   DateTimeList averagingDateTimes;
   EquityAveragingPeriod_marketDisruption marketDisruption;
} EquityAveragingPeriod;

EXTERN int asn1E_EquityAveragingPeriod (OSCTXT* pctxt,
   EquityAveragingPeriod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityAveragingPeriod (OSCTXT* pctxt, 
   EquityAveragingPeriod *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityAveragingPeriod (OSCTXT* pctxt, 
   EquityAveragingPeriod* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityAveragingPeriod (OSCTXT* pctxt, 
   EquityAveragingPeriod* pvalue);

EXTERN int DOMTest_EquityAveragingPeriod (OSCTXT* pctxt, 
   EquityAveragingPeriod* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityAveragingPeriod (EquityAveragingPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  Asian                                                     */
/*                                                            */
/**************************************************************/

#define TV_Asian	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Asian {
   struct {
      unsigned strikeFactorPresent : 1;
      unsigned averagingPeriodInPresent : 1;
      unsigned averagingPeriodOutPresent : 1;
   } m;
   AveragingInOutEnum averagingInOut;
   OSREAL strikeFactor;
   EquityAveragingPeriod averagingPeriodIn;
   EquityAveragingPeriod averagingPeriodOut;
} Asian;

EXTERN int asn1E_Asian (OSCTXT* pctxt,
   Asian *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Asian (OSCTXT* pctxt, Asian *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Asian (OSCTXT* pctxt, Asian* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Asian (OSCTXT* pctxt, Asian* pvalue);

EXTERN int DOMTest_Asian (OSCTXT* pctxt, Asian* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Asian (Asian* pvalue);

/**************************************************************/
/*                                                            */
/*  Trigger                                                   */
/*                                                            */
/**************************************************************/

#define TV_Trigger	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Trigger_level                 1
#define T_Trigger_levelPercentage       2

typedef struct EXTERN Trigger {
   int t;
   union {
      /* t = 1 */
      OSREAL level;
      /* t = 2 */
      OSREAL levelPercentage;
   } u;
} Trigger;

EXTERN int asn1E_Trigger (OSCTXT* pctxt,
   Trigger *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Trigger (OSCTXT* pctxt, Trigger *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Trigger (OSCTXT* pctxt, Trigger* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Trigger (OSCTXT* pctxt, Trigger* pvalue);

EXTERN int DOMTest_Trigger (OSCTXT* pctxt, Trigger* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Trigger (Trigger* pvalue);

/**************************************************************/
/*                                                            */
/*  FeaturePayment_choice                                     */
/*                                                            */
/**************************************************************/

#define TV_FeaturePayment_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_FeaturePayment_choice_levelPercentage 1
#define T_FeaturePayment_choice_amount  2

typedef struct EXTERN FeaturePayment_choice {
   int t;
   union {
      /* t = 1 */
      OSREAL levelPercentage;
      /* t = 2 */
      OSREAL amount;
   } u;
} FeaturePayment_choice;

EXTERN int asn1E_FeaturePayment_choice (OSCTXT* pctxt,
   FeaturePayment_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FeaturePayment_choice (OSCTXT* pctxt, 
   FeaturePayment_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FeaturePayment_choice (OSCTXT* pctxt, 
   FeaturePayment_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FeaturePayment_choice (OSCTXT* pctxt, 
   FeaturePayment_choice* pvalue);

EXTERN int DOMTest_FeaturePayment_choice (OSCTXT* pctxt, 
   FeaturePayment_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FeaturePayment_choice (FeaturePayment_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  FeaturePayment                                            */
/*                                                            */
/**************************************************************/

#define TV_FeaturePayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FeaturePayment {
   struct {
      unsigned time_Present : 1;
      unsigned currencyPresent : 1;
      unsigned featurePaymentDatePresent : 1;
   } m;
   PayerReceiver_model payerReceiver_model;
   FeaturePayment_choice choice;
   TimeTypeEnum time_;
   Currency currency;
   AdjustableOrRelativeDate featurePaymentDate;
} FeaturePayment;

EXTERN int asn1E_FeaturePayment (OSCTXT* pctxt,
   FeaturePayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FeaturePayment (OSCTXT* pctxt, FeaturePayment *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FeaturePayment (OSCTXT* pctxt, FeaturePayment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FeaturePayment (OSCTXT* pctxt, FeaturePayment* pvalue);

EXTERN int DOMTest_FeaturePayment (OSCTXT* pctxt, FeaturePayment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FeaturePayment (FeaturePayment* pvalue);

/**************************************************************/
/*                                                            */
/*  TriggerEvent                                              */
/*                                                            */
/**************************************************************/

#define TV_TriggerEvent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TriggerEvent {
   struct {
      unsigned triggerDatesPresent : 1;
      unsigned featurePaymentPresent : 1;
   } m;
   /* List of EquitySchedule */
   OSRTDList schedule_list;
   DateList triggerDates;
   Trigger trigger;
   FeaturePayment featurePayment;
} TriggerEvent;

EXTERN int asn1E_TriggerEvent (OSCTXT* pctxt,
   TriggerEvent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TriggerEvent (OSCTXT* pctxt, TriggerEvent *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TriggerEvent (OSCTXT* pctxt, TriggerEvent* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TriggerEvent (OSCTXT* pctxt, TriggerEvent* pvalue);

EXTERN int DOMTest_TriggerEvent (OSCTXT* pctxt, TriggerEvent* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TriggerEvent (TriggerEvent* pvalue);

/**************************************************************/
/*                                                            */
/*  Barrier                                                   */
/*                                                            */
/**************************************************************/

#define TV_Barrier	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Barrier {
   struct {
      unsigned barrierCapPresent : 1;
      unsigned barrierFloorPresent : 1;
   } m;
   TriggerEvent barrierCap;
   TriggerEvent barrierFloor;
} Barrier;

EXTERN int asn1E_Barrier (OSCTXT* pctxt,
   Barrier *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Barrier (OSCTXT* pctxt, Barrier *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Barrier (OSCTXT* pctxt, Barrier* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Barrier (OSCTXT* pctxt, Barrier* pvalue);

EXTERN int DOMTest_Barrier (OSCTXT* pctxt, Barrier* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Barrier (Barrier* pvalue);

/**************************************************************/
/*                                                            */
/*  Knock                                                     */
/*                                                            */
/**************************************************************/

#define TV_Knock	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Knock {
   struct {
      unsigned knockInPresent : 1;
      unsigned knockOutPresent : 1;
   } m;
   TriggerEvent knockIn;
   TriggerEvent knockOut;
} Knock;

EXTERN int asn1E_Knock (OSCTXT* pctxt,
   Knock *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Knock (OSCTXT* pctxt, Knock *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Knock (OSCTXT* pctxt, Knock* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Knock (OSCTXT* pctxt, Knock* pvalue);

EXTERN int DOMTest_Knock (OSCTXT* pctxt, Knock* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Knock (Knock* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityOptionFeatures                                      */
/*                                                            */
/**************************************************************/

#define TV_EquityOptionFeatures	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityOptionFeatures {
   struct {
      unsigned asianPresent : 1;
      unsigned barrierPresent : 1;
      unsigned knockPresent : 1;
   } m;
   Asian asian;
   Barrier barrier;
   Knock knock;
} EquityOptionFeatures;

EXTERN int asn1E_EquityOptionFeatures (OSCTXT* pctxt,
   EquityOptionFeatures *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityOptionFeatures (OSCTXT* pctxt, 
   EquityOptionFeatures *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityOptionFeatures (OSCTXT* pctxt, 
   EquityOptionFeatures* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityOptionFeatures (OSCTXT* pctxt, 
   EquityOptionFeatures* pvalue);

EXTERN int DOMTest_EquityOptionFeatures (OSCTXT* pctxt, EquityOptionFeatures* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityOptionFeatures (EquityOptionFeatures* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityPremium                                             */
/*                                                            */
/**************************************************************/

#define TV_EquityPremium	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityPremium {
   struct {
      unsigned paymentAmountPresent : 1;
      unsigned paymentDatePresent : 1;
      unsigned swapPremiumPresent : 1;
      unsigned pricePerOptionPresent : 1;
      unsigned percentageOfNotionalPresent : 1;
   } m;
   PayerReceiver_model payerReceiver_model;
   Money_derivations paymentAmount;
   AdjustableDate paymentDate;
   OSBOOL swapPremium;
   OSREAL pricePerOption;
   OSREAL percentageOfNotional;
} EquityPremium;

EXTERN int asn1E_EquityPremium (OSCTXT* pctxt,
   EquityPremium *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityPremium (OSCTXT* pctxt, EquityPremium *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityPremium (OSCTXT* pctxt, EquityPremium* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityPremium (OSCTXT* pctxt, EquityPremium* pvalue);

EXTERN int DOMTest_EquityPremium (OSCTXT* pctxt, EquityPremium* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityPremium (EquityPremium* pvalue);

/**************************************************************/
/*                                                            */
/*  MethodOfAdjustmentEnum                                    */
/*                                                            */
/**************************************************************/

#define TV_MethodOfAdjustmentEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   MethodOfAdjustmentEnum_calculationAgent = 0,
   MethodOfAdjustmentEnum_optionsExchange = 1
} MethodOfAdjustmentEnum_Root;

typedef OSUINT32 MethodOfAdjustmentEnum;

EXTERN int asn1E_MethodOfAdjustmentEnum (OSCTXT* pctxt,
   MethodOfAdjustmentEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MethodOfAdjustmentEnum (OSCTXT* pctxt, 
   MethodOfAdjustmentEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MethodOfAdjustmentEnum (OSCTXT* pctxt, 
   MethodOfAdjustmentEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MethodOfAdjustmentEnum (OSCTXT* pctxt, 
   MethodOfAdjustmentEnum* pvalue);

EXTERN const OSUTF8CHAR* MethodOfAdjustmentEnum_ToString (OSINT32 value);

EXTERN int MethodOfAdjustmentEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MethodOfAdjustmentEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  ShareExtraordinaryEventEnum                               */
/*                                                            */
/**************************************************************/

#define TV_ShareExtraordinaryEventEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ShareExtraordinaryEventEnum_alternativeObligation = 0,
   ShareExtraordinaryEventEnum_cancellationAndPayment = 1,
   ShareExtraordinaryEventEnum_optionsExchange = 2
} ShareExtraordinaryEventEnum_Root;

typedef OSUINT32 ShareExtraordinaryEventEnum;

EXTERN int asn1E_ShareExtraordinaryEventEnum (OSCTXT* pctxt,
   ShareExtraordinaryEventEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ShareExtraordinaryEventEnum (OSCTXT* pctxt, 
   ShareExtraordinaryEventEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ShareExtraordinaryEventEnum (OSCTXT* pctxt, 
   ShareExtraordinaryEventEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ShareExtraordinaryEventEnum (OSCTXT* pctxt, 
   ShareExtraordinaryEventEnum* pvalue);

EXTERN const OSUTF8CHAR* ShareExtraordinaryEventEnum_ToString (OSINT32 value);

EXTERN int ShareExtraordinaryEventEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ShareExtraordinaryEventEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  MergerEvents                                              */
/*                                                            */
/**************************************************************/

#define TV_MergerEvents	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MergerEvents {
   ShareExtraordinaryEventEnum shareForShare;
   ShareExtraordinaryEventEnum shareForOther;
   ShareExtraordinaryEventEnum shareForCombined;
} MergerEvents;

EXTERN int asn1E_MergerEvents (OSCTXT* pctxt,
   MergerEvents *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MergerEvents (OSCTXT* pctxt, MergerEvents *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MergerEvents (OSCTXT* pctxt, MergerEvents* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MergerEvents (OSCTXT* pctxt, MergerEvents* pvalue);

EXTERN int DOMTest_MergerEvents (OSCTXT* pctxt, MergerEvents* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MergerEvents (MergerEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  NationalisationOrInsolvencyOrDelistingEventEnum           */
/*                                                            */
/**************************************************************/

#define TV_NationalisationOrInsolvencyOrDelistingEventEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   NationalisationOrInsolvencyOrDelistingEventEnum_cancellationAndPayment = 0,
   NationalisationOrInsolvencyOrDelistingEventEnum_negotiatedCloseout = 1
} NationalisationOrInsolvencyOrDelistingEventEnum_Root;

typedef OSUINT32 NationalisationOrInsolvencyOrDelistingEventEnum;

EXTERN int asn1E_NationalisationOrInsolvencyOrDelistingEventEnum (OSCTXT* pctxt,
   NationalisationOrInsolvencyOrDelistingEventEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NationalisationOrInsolvencyOrDelistingEventEnum (
   OSCTXT* pctxt, NationalisationOrInsolvencyOrDelistingEventEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_NationalisationOrInsolvencyOrDelistingEventEnum 
   (OSCTXT* pctxt, NationalisationOrInsolvencyOrDelistingEventEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NationalisationOrInsolvencyOrDelistingEventEnum 
   (OSCTXT* pctxt, NationalisationOrInsolvencyOrDelistingEventEnum* pvalue);

EXTERN const OSUTF8CHAR* NationalisationOrInsolvencyOrDelistingEventEnum_ToString (OSINT32 value);

EXTERN 
   int NationalisationOrInsolvencyOrDelistingEventEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      NationalisationOrInsolvencyOrDelistingEventEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  ExtraordinaryEvents                                       */
/*                                                            */
/**************************************************************/

#define TV_ExtraordinaryEvents	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ExtraordinaryEvents {
   struct {
      unsigned delistingPresent : 1;
   } m;
   MergerEvents mergerEvents;
   NationalisationOrInsolvencyOrDelistingEventEnum nationalisationOrInsolvency;
   NationalisationOrInsolvencyOrDelistingEventEnum delisting;
} ExtraordinaryEvents;

EXTERN int asn1E_ExtraordinaryEvents (OSCTXT* pctxt,
   ExtraordinaryEvents *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ExtraordinaryEvents (OSCTXT* pctxt, 
   ExtraordinaryEvents *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ExtraordinaryEvents (OSCTXT* pctxt, 
   ExtraordinaryEvents* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ExtraordinaryEvents (OSCTXT* pctxt, 
   ExtraordinaryEvents* pvalue);

EXTERN int DOMTest_ExtraordinaryEvents (OSCTXT* pctxt, ExtraordinaryEvents* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ExtraordinaryEvents (ExtraordinaryEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityOption                                              */
/*                                                            */
/**************************************************************/

#define TV_EquityOption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityOption {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned equityEffectiveDatePresent : 1;
      unsigned strikePresent : 1;
      unsigned spotPricePresent : 1;
      unsigned notionalPresent : 1;
      unsigned numberOfOptionsPresent : 1;
      unsigned fxFeaturePresent : 1;
      unsigned equityOptionFeaturesPresent : 1;
      unsigned methodOfAdjustmentPresent : 1;
      unsigned extraordinaryEventsPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   BuyerSeller_model buyerSeller_model;
   OptionTypeEnum optionType;
   const char* equityEffectiveDate;
   Underlyer underlyer;
   EquityStrike strike;
   OSREAL spotPrice;
   Money_derivations notional;
   OSREAL numberOfOptions;
   OSREAL optionEntitlement;
   EquityExercise equityExercise;
   FXFeature fxFeature;
   EquityOptionFeatures equityOptionFeatures;
   EquityPremium equityPremium;
   MethodOfAdjustmentEnum methodOfAdjustment;
   ExtraordinaryEvents extraordinaryEvents;
} EquityOption;

EXTERN int asn1E_EquityOption (OSCTXT* pctxt,
   EquityOption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityOption (OSCTXT* pctxt, EquityOption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityOption (OSCTXT* pctxt, EquityOption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityOption (OSCTXT* pctxt, EquityOption* pvalue);

EXTERN int DOMTest_EquityOption (OSCTXT* pctxt, EquityOption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityOption (EquityOption* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_initialPrice_sequence_fxConversion    */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_initialPrice_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_initialPrice_sequence_fxConversion_amountRelativeTo 1
#define T_EquityLeg_valuation_initialPrice_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquityLeg_valuation_initialPrice_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquityLeg_valuation_initialPrice_sequence_fxConversion;

EXTERN int asn1E_EquityLeg_valuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt,
   EquityLeg_valuation_initialPrice_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_initialPrice_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_initialPrice_sequence_fxConversion (
   EquityLeg_valuation_initialPrice_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_initialPrice_sequence                 */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_initialPrice_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_initialPrice_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquityLeg_valuation_initialPrice_sequence_fxConversion fxConversion;
} EquityLeg_valuation_initialPrice_sequence;

EXTERN int asn1E_EquityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt,
   EquityLeg_valuation_initialPrice_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_initialPrice_sequence (
   EquityLeg_valuation_initialPrice_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_initialPrice_choice                   */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_initialPrice_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_initialPrice_choice_determinationMethod 1
#define T_EquityLeg_valuation_initialPrice_choice_amountRelativeTo 2
#define T_EquityLeg_valuation_initialPrice_choice_sequence 3

typedef struct EXTERN EquityLeg_valuation_initialPrice_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquityLeg_valuation_initialPrice_sequence *sequence;
   } u;
} EquityLeg_valuation_initialPrice_choice;

EXTERN int asn1E_EquityLeg_valuation_initialPrice_choice (OSCTXT* pctxt,
   EquityLeg_valuation_initialPrice_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_initialPrice_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_valuation_initialPrice_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_initialPrice_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_choice* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_initialPrice_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_initialPrice_choice (
   EquityLeg_valuation_initialPrice_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_initialPrice_equityValuationDate      */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_initialPrice_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_initialPrice_equityValuationDate_adjustableDate 1
#define T_EquityLeg_valuation_initialPrice_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquityLeg_valuation_initialPrice_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquityLeg_valuation_initialPrice_equityValuationDate;

EXTERN int asn1E_EquityLeg_valuation_initialPrice_equityValuationDate (OSCTXT* pctxt,
   EquityLeg_valuation_initialPrice_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_initialPrice_equityValuationDate (
   OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_equityValuationDate* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_initialPrice_equityValuationDate (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_initialPrice_equityValuationDate (
   EquityLeg_valuation_initialPrice_equityValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_initialPrice                          */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_initialPrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_initialPrice {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned equityValuationDatePresent : 1;
   } m;
   Commission commission;
   EquityLeg_valuation_initialPrice_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquityLeg_valuation_initialPrice_equityValuationDate equityValuationDate;
} EquityLeg_valuation_initialPrice;

EXTERN int asn1E_EquityLeg_valuation_initialPrice (OSCTXT* pctxt,
   EquityLeg_valuation_initialPrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_initialPrice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_initialPrice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_initialPrice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_initialPrice (OSCTXT* pctxt, 
   EquityLeg_valuation_initialPrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_initialPrice (
   EquityLeg_valuation_initialPrice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceInterim_sequence_fxCon  */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion_amountRelativeTo 1
#define T_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion (
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceInterim_sequence        */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceInterim_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_valuationPriceInterim_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquityLeg_valuation_valuationPriceInterim_sequence_fxConversion fxConversion;
} EquityLeg_valuation_valuationPriceInterim_sequence;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceInterim_sequence (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceInterim_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceInterim_sequence (
   OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_sequence* pvalue)
   ;

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceInterim_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceInterim_sequence (
   EquityLeg_valuation_valuationPriceInterim_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceInterim_choice          */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceInterim_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_valuationPriceInterim_choice_determinationMethod 1
#define T_EquityLeg_valuation_valuationPriceInterim_choice_amountRelativeTo 2
#define T_EquityLeg_valuation_valuationPriceInterim_choice_sequence 3

typedef struct EXTERN EquityLeg_valuation_valuationPriceInterim_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquityLeg_valuation_valuationPriceInterim_sequence *sequence;
   } u;
} EquityLeg_valuation_valuationPriceInterim_choice;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceInterim_choice (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceInterim_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceInterim_choice (
   OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceInterim_choice* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceInterim_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceInterim_choice (
   EquityLeg_valuation_valuationPriceInterim_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceInterim                 */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceInterim	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_valuationPriceInterim {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquityLeg_valuation_valuationPriceInterim_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   AdjustableRelativeOrPeriodicDates equityValuationDates;
} EquityLeg_valuation_valuationPriceInterim;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceInterim *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceInterim* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceInterim (
   EquityLeg_valuation_valuationPriceInterim* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceFinal_sequence_fxConve  */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion_amountRelativeTo 1
#define T_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion (
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceFinal_sequence          */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceFinal_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_valuationPriceFinal_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquityLeg_valuation_valuationPriceFinal_sequence_fxConversion fxConversion;
} EquityLeg_valuation_valuationPriceFinal_sequence;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceFinal_sequence (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceFinal_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceFinal_sequence (
   OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_sequence* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceFinal_sequence (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceFinal_sequence (
   EquityLeg_valuation_valuationPriceFinal_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceFinal_choice            */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceFinal_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_valuationPriceFinal_choice_determinationMethod 1
#define T_EquityLeg_valuation_valuationPriceFinal_choice_amountRelativeTo 2
#define T_EquityLeg_valuation_valuationPriceFinal_choice_sequence 3

typedef struct EXTERN EquityLeg_valuation_valuationPriceFinal_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquityLeg_valuation_valuationPriceFinal_sequence *sequence;
   } u;
} EquityLeg_valuation_valuationPriceFinal_choice;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceFinal_choice (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceFinal_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceFinal_choice (
   OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, EquityLeg_valuation_valuationPriceFinal_choice* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceFinal_choice (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceFinal_choice (
   EquityLeg_valuation_valuationPriceFinal_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceFinal_equityValuationD  */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceFinal_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_valuation_valuationPriceFinal_equityValuationDate_adjustableDate 1
#define T_EquityLeg_valuation_valuationPriceFinal_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquityLeg_valuation_valuationPriceFinal_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquityLeg_valuation_valuationPriceFinal_equityValuationDate;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceFinal_equityValuationDate (
   OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceFinal_equityValuationDate (
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation_valuationPriceFinal                   */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation_valuationPriceFinal	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation_valuationPriceFinal {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquityLeg_valuation_valuationPriceFinal_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquityLeg_valuation_valuationPriceFinal_equityValuationDate equityValuationDate;
} EquityLeg_valuation_valuationPriceFinal;

EXTERN int asn1E_EquityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt,
   EquityLeg_valuation_valuationPriceFinal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal* pvalue);

EXTERN int DOMTest_EquityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquityLeg_valuation_valuationPriceFinal* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation_valuationPriceFinal (
   EquityLeg_valuation_valuationPriceFinal* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityPaymentDates                                        */
/*                                                            */
/**************************************************************/

#define TV_EquityPaymentDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityPaymentDates {
   struct {
      unsigned idPresent : 1;
      unsigned equityPaymentDatesInterimPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDates equityPaymentDatesInterim;
   AdjustableOrRelativeDate equityPaymentDateFinal;
} EquityPaymentDates;

EXTERN int asn1E_EquityPaymentDates (OSCTXT* pctxt,
   EquityPaymentDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityPaymentDates (OSCTXT* pctxt, 
   EquityPaymentDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityPaymentDates (OSCTXT* pctxt, 
   EquityPaymentDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityPaymentDates (OSCTXT* pctxt, 
   EquityPaymentDates* pvalue);

EXTERN int DOMTest_EquityPaymentDates (OSCTXT* pctxt, EquityPaymentDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityPaymentDates (EquityPaymentDates* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_valuation                                       */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_valuation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_valuation {
   struct {
      unsigned valuationPriceInterimPresent : 1;
   } m;
   EquityLeg_valuation_initialPrice initialPrice;
   OSBOOL equityNotionalReset;
   EquityLeg_valuation_valuationPriceInterim valuationPriceInterim;
   EquityLeg_valuation_valuationPriceFinal valuationPriceFinal;
   EquityPaymentDates equityPaymentDates;
} EquityLeg_valuation;

EXTERN int asn1E_EquityLeg_valuation (OSCTXT* pctxt,
   EquityLeg_valuation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_valuation (OSCTXT* pctxt, 
   EquityLeg_valuation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_valuation (OSCTXT* pctxt, 
   EquityLeg_valuation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_valuation (OSCTXT* pctxt, 
   EquityLeg_valuation* pvalue);

EXTERN int DOMTest_EquityLeg_valuation (OSCTXT* pctxt, EquityLeg_valuation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_valuation (EquityLeg_valuation* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_notional                                        */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_notional	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_notional_determinationMethod 1
#define T_EquityLeg_notional_notionalAmount 2
#define T_EquityLeg_notional_amountRelativeTo 3

typedef struct EXTERN EquityLeg_notional {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      Money_derivations *notionalAmount;
      /* t = 3 */
      AmountRelativeTo *amountRelativeTo;
   } u;
} EquityLeg_notional;

EXTERN int asn1E_EquityLeg_notional (OSCTXT* pctxt,
   EquityLeg_notional *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_notional (OSCTXT* pctxt, 
   EquityLeg_notional *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_notional (OSCTXT* pctxt, 
   EquityLeg_notional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_notional (OSCTXT* pctxt, 
   EquityLeg_notional* pvalue);

EXTERN int DOMTest_EquityLeg_notional (OSCTXT* pctxt, EquityLeg_notional* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_notional (EquityLeg_notional* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_equityAmount_paymentCurrency_choice             */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_equityAmount_paymentCurrency_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_equityAmount_paymentCurrency_choice_currency 1
#define T_EquityLeg_equityAmount_paymentCurrency_choice_determinationMethod 2

typedef struct EXTERN EquityLeg_equityAmount_paymentCurrency_choice {
   int t;
   union {
      /* t = 1 */
      Currency *currency;
      /* t = 2 */
      const OSUTF8CHAR* determinationMethod;
   } u;
} EquityLeg_equityAmount_paymentCurrency_choice;

EXTERN int asn1E_EquityLeg_equityAmount_paymentCurrency_choice (OSCTXT* pctxt,
   EquityLeg_equityAmount_paymentCurrency_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_equityAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_equityAmount_paymentCurrency_choice 
   (OSCTXT* pctxt, EquityLeg_equityAmount_paymentCurrency_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_equityAmount_paymentCurrency_choice 
   (OSCTXT* pctxt, EquityLeg_equityAmount_paymentCurrency_choice* pvalue);

EXTERN int DOMTest_EquityLeg_equityAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_equityAmount_paymentCurrency_choice (
   EquityLeg_equityAmount_paymentCurrency_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_equityAmount_paymentCurrency                    */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_equityAmount_paymentCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_equityAmount_paymentCurrency {
   struct {
      unsigned hrefPresent : 1;
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* id;
   EquityLeg_equityAmount_paymentCurrency_choice choice;
} EquityLeg_equityAmount_paymentCurrency;

EXTERN int asn1E_EquityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt,
   EquityLeg_equityAmount_paymentCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency* pvalue);

EXTERN int DOMTest_EquityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt, 
   EquityLeg_equityAmount_paymentCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_equityAmount_paymentCurrency (
   EquityLeg_equityAmount_paymentCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_equityAmount_referenceAmount                    */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_equityAmount_referenceAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_equityAmount_referenceAmount {
   struct {
      unsigned hrefPresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* base;
} EquityLeg_equityAmount_referenceAmount;

EXTERN int asn1E_EquityLeg_equityAmount_referenceAmount (OSCTXT* pctxt,
   EquityLeg_equityAmount_referenceAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_equityAmount_referenceAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount_referenceAmount *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_equityAmount_referenceAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount_referenceAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_equityAmount_referenceAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount_referenceAmount* pvalue);

EXTERN int DOMTest_EquityLeg_equityAmount_referenceAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount_referenceAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_equityAmount_referenceAmount (
   EquityLeg_equityAmount_referenceAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  Formula_formulaComponent                                  */
/*                                                            */
/**************************************************************/

#define TV_Formula_formulaComponent	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Formula_formulaComponent {
   struct {
      unsigned hrefPresent : 1;
      unsigned namePresent : 1;
      unsigned formulaPresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* componentDescription;
   struct Formula *formula;
} Formula_formulaComponent;

EXTERN int asn1E_Formula_formulaComponent (OSCTXT* pctxt,
   Formula_formulaComponent *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Formula_formulaComponent (OSCTXT* pctxt, 
   Formula_formulaComponent *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Formula_formulaComponent (OSCTXT* pctxt, 
   Formula_formulaComponent* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Formula_formulaComponent (OSCTXT* pctxt, 
   Formula_formulaComponent* pvalue);

EXTERN int DOMTest_Formula_formulaComponent (OSCTXT* pctxt, 
   Formula_formulaComponent* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Formula_formulaComponent (Formula_formulaComponent* pvalue);

/**************************************************************/
/*                                                            */
/*  Formula                                                   */
/*                                                            */
/**************************************************************/

#define TV_Formula	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Formula {
   struct {
      unsigned formulaDescriptionPresent : 1;
      unsigned mathPresent : 1;
   } m;
   const OSUTF8CHAR* formulaDescription;
   /* List of OSXSDAny */
   OSRTDList math;
   /* List of Formula_formulaComponent */
   OSRTDList formulaComponent_list;
} Formula;

EXTERN int asn1E_Formula (OSCTXT* pctxt,
   Formula *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Formula (OSCTXT* pctxt, Formula *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Formula (OSCTXT* pctxt, Formula* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Formula (OSCTXT* pctxt, Formula* pvalue);

EXTERN int DOMTest_Formula (OSCTXT* pctxt, Formula* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Formula (Formula* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_equityAmount_choice                             */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_equityAmount_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_equityAmount_choice_referenceAmount 1
#define T_EquityLeg_equityAmount_choice_formula 2
#define T_EquityLeg_equityAmount_choice_encodedDescription 3

typedef struct EXTERN EquityLeg_equityAmount_choice {
   int t;
   union {
      /* t = 1 */
      EquityLeg_equityAmount_referenceAmount *referenceAmount;
      /* t = 2 */
      Formula *formula;
      /* t = 3 */
      ASN1DynOctStr *encodedDescription;
   } u;
} EquityLeg_equityAmount_choice;

EXTERN int asn1E_EquityLeg_equityAmount_choice (OSCTXT* pctxt,
   EquityLeg_equityAmount_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_equityAmount_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_equityAmount_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_equityAmount_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_choice* pvalue);

EXTERN int DOMTest_EquityLeg_equityAmount_choice (OSCTXT* pctxt, 
   EquityLeg_equityAmount_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_equityAmount_choice (
   EquityLeg_equityAmount_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_equityAmount                                    */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_equityAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_equityAmount {
   struct {
      unsigned calculationDatesPresent : 1;
   } m;
   EquityLeg_equityAmount_paymentCurrency paymentCurrency;
   EquityLeg_equityAmount_choice choice;
   AdjustableRelativeOrPeriodicDates calculationDates;
   OSBOOL cashSettlement;
} EquityLeg_equityAmount;

EXTERN int asn1E_EquityLeg_equityAmount (OSCTXT* pctxt,
   EquityLeg_equityAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_equityAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_equityAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_equityAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount* pvalue);

EXTERN int DOMTest_EquityLeg_equityAmount (OSCTXT* pctxt, 
   EquityLeg_equityAmount* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_equityAmount (EquityLeg_equityAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  ReturnTypeEnum                                            */
/*                                                            */
/**************************************************************/

#define TV_ReturnTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ReturnTypeEnum_dividend = 0,
   ReturnTypeEnum_price = 1,
   ReturnTypeEnum_total = 2
} ReturnTypeEnum_Root;

typedef OSUINT32 ReturnTypeEnum;

EXTERN int asn1E_ReturnTypeEnum (OSCTXT* pctxt,
   ReturnTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReturnTypeEnum (OSCTXT* pctxt, ReturnTypeEnum *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReturnTypeEnum (OSCTXT* pctxt, ReturnTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReturnTypeEnum (OSCTXT* pctxt, ReturnTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* ReturnTypeEnum_ToString (OSINT32 value);

EXTERN int ReturnTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ReturnTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendEntitlementEnum                                   */
/*                                                            */
/**************************************************************/

#define TV_DividendEntitlementEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DividendEntitlementEnum_exDate = 0,
   DividendEntitlementEnum_recordDate = 1
} DividendEntitlementEnum_Root;

typedef OSUINT32 DividendEntitlementEnum;

EXTERN int asn1E_DividendEntitlementEnum (OSCTXT* pctxt,
   DividendEntitlementEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendEntitlementEnum (OSCTXT* pctxt, 
   DividendEntitlementEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendEntitlementEnum (OSCTXT* pctxt, 
   DividendEntitlementEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendEntitlementEnum (OSCTXT* pctxt, 
   DividendEntitlementEnum* pvalue);

EXTERN const OSUTF8CHAR* DividendEntitlementEnum_ToString (OSINT32 value);

EXTERN int DividendEntitlementEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DividendEntitlementEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendDateReferenceEnum                                 */
/*                                                            */
/**************************************************************/

#define TV_DividendDateReferenceEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DividendDateReferenceEnum_dividendPaymentDate = 0,
   DividendDateReferenceEnum_equityPaymentDate = 1,
   DividendDateReferenceEnum_exDate = 2,
   DividendDateReferenceEnum_followingPaymentDate = 3,
   DividendDateReferenceEnum_recordDate = 4,
   DividendDateReferenceEnum_terminationDate = 5
} DividendDateReferenceEnum_Root;

typedef OSUINT32 DividendDateReferenceEnum;

EXTERN int asn1E_DividendDateReferenceEnum (OSCTXT* pctxt,
   DividendDateReferenceEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendDateReferenceEnum (OSCTXT* pctxt, 
   DividendDateReferenceEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendDateReferenceEnum (OSCTXT* pctxt, 
   DividendDateReferenceEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendDateReferenceEnum (OSCTXT* pctxt, 
   DividendDateReferenceEnum* pvalue);

EXTERN const OSUTF8CHAR* DividendDateReferenceEnum_ToString (OSINT32 value);

EXTERN int DividendDateReferenceEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DividendDateReferenceEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendPaymentDate                                       */
/*                                                            */
/**************************************************************/

#define TV_DividendPaymentDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DividendPaymentDate_dividendDateReference 1
#define T_DividendPaymentDate_adjustableDate 2

typedef struct EXTERN DividendPaymentDate {
   int t;
   union {
      /* t = 1 */
      DividendDateReferenceEnum dividendDateReference;
      /* t = 2 */
      AdjustableDate *adjustableDate;
   } u;
} DividendPaymentDate;

EXTERN int asn1E_DividendPaymentDate (OSCTXT* pctxt,
   DividendPaymentDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendPaymentDate (OSCTXT* pctxt, 
   DividendPaymentDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendPaymentDate (OSCTXT* pctxt, 
   DividendPaymentDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendPaymentDate (OSCTXT* pctxt, 
   DividendPaymentDate* pvalue);

EXTERN int DOMTest_DividendPaymentDate (OSCTXT* pctxt, DividendPaymentDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendPaymentDate (DividendPaymentDate* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_dividendPeriodEffectiveDate            */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_dividendPeriodEffectiveDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DividendConditions_dividendPeriodEffectiveDate {
   const OSUTF8CHAR* href;
} DividendConditions_dividendPeriodEffectiveDate;

EXTERN int asn1E_DividendConditions_dividendPeriodEffectiveDate (OSCTXT* pctxt,
   DividendConditions_dividendPeriodEffectiveDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_dividendPeriodEffectiveDate (
   OSCTXT* pctxt, DividendConditions_dividendPeriodEffectiveDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendConditions_dividendPeriodEffectiveDate 
   (OSCTXT* pctxt, DividendConditions_dividendPeriodEffectiveDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_dividendPeriodEffectiveDate 
   (OSCTXT* pctxt, DividendConditions_dividendPeriodEffectiveDate* pvalue);

EXTERN int DOMTest_DividendConditions_dividendPeriodEffectiveDate (OSCTXT* pctxt, 
   DividendConditions_dividendPeriodEffectiveDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_dividendPeriodEffectiveDate (
   DividendConditions_dividendPeriodEffectiveDate* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_dividendPeriodEndDate                  */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_dividendPeriodEndDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DividendConditions_dividendPeriodEndDate {
   const OSUTF8CHAR* href;
} DividendConditions_dividendPeriodEndDate;

EXTERN int asn1E_DividendConditions_dividendPeriodEndDate (OSCTXT* pctxt,
   DividendConditions_dividendPeriodEndDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_dividendPeriodEndDate (OSCTXT* pctxt, 
   DividendConditions_dividendPeriodEndDate *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_DividendConditions_dividendPeriodEndDate (OSCTXT* pctxt, 
   DividendConditions_dividendPeriodEndDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_dividendPeriodEndDate (OSCTXT* pctxt, 
   DividendConditions_dividendPeriodEndDate* pvalue);

EXTERN int DOMTest_DividendConditions_dividendPeriodEndDate (OSCTXT* pctxt, 
   DividendConditions_dividendPeriodEndDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_dividendPeriodEndDate (
   DividendConditions_dividendPeriodEndDate* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_paymentCurrency_choice                 */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_paymentCurrency_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DividendConditions_paymentCurrency_choice_currency 1
#define T_DividendConditions_paymentCurrency_choice_determinationMethod 2

typedef struct EXTERN DividendConditions_paymentCurrency_choice {
   int t;
   union {
      /* t = 1 */
      Currency *currency;
      /* t = 2 */
      const OSUTF8CHAR* determinationMethod;
   } u;
} DividendConditions_paymentCurrency_choice;

EXTERN int asn1E_DividendConditions_paymentCurrency_choice (OSCTXT* pctxt,
   DividendConditions_paymentCurrency_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_paymentCurrency_choice (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_DividendConditions_paymentCurrency_choice (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_paymentCurrency_choice (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency_choice* pvalue);

EXTERN int DOMTest_DividendConditions_paymentCurrency_choice (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_paymentCurrency_choice (
   DividendConditions_paymentCurrency_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_paymentCurrency                        */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_paymentCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DividendConditions_paymentCurrency {
   struct {
      unsigned hrefPresent : 1;
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* id;
   DividendConditions_paymentCurrency_choice choice;
} DividendConditions_paymentCurrency;

EXTERN int asn1E_DividendConditions_paymentCurrency (OSCTXT* pctxt,
   DividendConditions_paymentCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_paymentCurrency (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendConditions_paymentCurrency (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_paymentCurrency (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency* pvalue);

EXTERN int DOMTest_DividendConditions_paymentCurrency (OSCTXT* pctxt, 
   DividendConditions_paymentCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_paymentCurrency (
   DividendConditions_paymentCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_interestAccrualsMethod_choice          */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_interestAccrualsMethod_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_DividendConditions_interestAccrualsMethod_choice_floatingRateCalculation 1
#define T_DividendConditions_interestAccrualsMethod_choice_fixedRate 2

typedef struct EXTERN DividendConditions_interestAccrualsMethod_choice {
   int t;
   union {
      /* t = 1 */
      FloatingRateCalculation *floatingRateCalculation;
      /* t = 2 */
      OSREAL fixedRate;
   } u;
} DividendConditions_interestAccrualsMethod_choice;

EXTERN int asn1E_DividendConditions_interestAccrualsMethod_choice (OSCTXT* pctxt,
   DividendConditions_interestAccrualsMethod_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_interestAccrualsMethod_choice (
   OSCTXT* pctxt, DividendConditions_interestAccrualsMethod_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendConditions_interestAccrualsMethod_choice 
   (OSCTXT* pctxt, DividendConditions_interestAccrualsMethod_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_interestAccrualsMethod_choice 
   (OSCTXT* pctxt, DividendConditions_interestAccrualsMethod_choice* pvalue);

EXTERN int DOMTest_DividendConditions_interestAccrualsMethod_choice (OSCTXT* pctxt, 
   DividendConditions_interestAccrualsMethod_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_interestAccrualsMethod_choice (
   DividendConditions_interestAccrualsMethod_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions_interestAccrualsMethod                 */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions_interestAccrualsMethod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DividendConditions_interestAccrualsMethod {
   DividendConditions_interestAccrualsMethod_choice choice;
   CompoundingMethodEnum compoundingMethod;
} DividendConditions_interestAccrualsMethod;

EXTERN int asn1E_DividendConditions_interestAccrualsMethod (OSCTXT* pctxt,
   DividendConditions_interestAccrualsMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions_interestAccrualsMethod (OSCTXT* pctxt, 
   DividendConditions_interestAccrualsMethod *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_DividendConditions_interestAccrualsMethod (OSCTXT* pctxt, 
   DividendConditions_interestAccrualsMethod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions_interestAccrualsMethod (OSCTXT* pctxt, 
   DividendConditions_interestAccrualsMethod* pvalue);

EXTERN int DOMTest_DividendConditions_interestAccrualsMethod (OSCTXT* pctxt, 
   DividendConditions_interestAccrualsMethod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions_interestAccrualsMethod (
   DividendConditions_interestAccrualsMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  DividendConditions                                        */
/*                                                            */
/**************************************************************/

#define TV_DividendConditions	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DividendConditions {
   struct {
      unsigned dividendPaymentDatePresent : 1;
      unsigned dividendPeriodEffectiveDatePresent : 1;
      unsigned dividendPeriodEndDatePresent : 1;
      unsigned dividendFxTriggerDatePresent : 1;
      unsigned interestAccrualsMethodPresent : 1;
   } m;
   OSBOOL dividendReinvestment;
   DividendEntitlementEnum dividendEntitlement;
   DividendPaymentDate dividendPaymentDate;
   DividendConditions_dividendPeriodEffectiveDate dividendPeriodEffectiveDate;
   DividendConditions_dividendPeriodEndDate dividendPeriodEndDate;
   DividendConditions_paymentCurrency paymentCurrency;
   DividendPaymentDate dividendFxTriggerDate;
   DividendConditions_interestAccrualsMethod interestAccrualsMethod;
} DividendConditions;

EXTERN int asn1E_DividendConditions (OSCTXT* pctxt,
   DividendConditions *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DividendConditions (OSCTXT* pctxt, 
   DividendConditions *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DividendConditions (OSCTXT* pctxt, 
   DividendConditions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DividendConditions (OSCTXT* pctxt, 
   DividendConditions* pvalue);

EXTERN int DOMTest_DividendConditions (OSCTXT* pctxt, DividendConditions* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DividendConditions (DividendConditions* pvalue);

/**************************************************************/
/*                                                            */
/*  Return                                                    */
/*                                                            */
/**************************************************************/

#define TV_Return	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Return {
   struct {
      unsigned dividendConditionsPresent : 1;
   } m;
   ReturnTypeEnum returnType;
   DividendConditions dividendConditions;
} Return;

EXTERN int asn1E_Return (OSCTXT* pctxt,
   Return *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Return (OSCTXT* pctxt, Return *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Return (OSCTXT* pctxt, Return* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Return (OSCTXT* pctxt, Return* pvalue);

EXTERN int DOMTest_Return (OSCTXT* pctxt, Return* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Return (Return* pvalue);

/**************************************************************/
/*                                                            */
/*  NotionalAdjustmentEnum                                    */
/*                                                            */
/**************************************************************/

#define TV_NotionalAdjustmentEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   NotionalAdjustmentEnum_execution = 0,
   NotionalAdjustmentEnum_portfolioRebalancing = 1,
   NotionalAdjustmentEnum_standard = 2
} NotionalAdjustmentEnum_Root;

typedef OSUINT32 NotionalAdjustmentEnum;

EXTERN int asn1E_NotionalAdjustmentEnum (OSCTXT* pctxt,
   NotionalAdjustmentEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotionalAdjustmentEnum (OSCTXT* pctxt, 
   NotionalAdjustmentEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotionalAdjustmentEnum (OSCTXT* pctxt, 
   NotionalAdjustmentEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotionalAdjustmentEnum (OSCTXT* pctxt, 
   NotionalAdjustmentEnum* pvalue);

EXTERN const OSUTF8CHAR* NotionalAdjustmentEnum_ToString (OSINT32 value);

EXTERN int NotionalAdjustmentEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NotionalAdjustmentEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_fxTerms_quanto_referenceCurrency                */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_fxTerms_quanto_referenceCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_fxTerms_quanto_referenceCurrency {
   struct {
      unsigned currencySchemePresent : 1;
   } m;
   const OSUTF8CHAR* currencyScheme;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* base;
} EquityLeg_fxTerms_quanto_referenceCurrency;

EXTERN int asn1E_EquityLeg_fxTerms_quanto_referenceCurrency (OSCTXT* pctxt,
   EquityLeg_fxTerms_quanto_referenceCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_fxTerms_quanto_referenceCurrency (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto_referenceCurrency *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquityLeg_fxTerms_quanto_referenceCurrency (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto_referenceCurrency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_fxTerms_quanto_referenceCurrency (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto_referenceCurrency* pvalue);

EXTERN int DOMTest_EquityLeg_fxTerms_quanto_referenceCurrency (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto_referenceCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_fxTerms_quanto_referenceCurrency (
   EquityLeg_fxTerms_quanto_referenceCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_fxTerms_quanto                                  */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_fxTerms_quanto	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_fxTerms_quanto {
   EquityLeg_fxTerms_quanto_referenceCurrency referenceCurrency;
   /* List of FxRate_derivations */
   OSRTDList fxRate_list;
} EquityLeg_fxTerms_quanto;

EXTERN int asn1E_EquityLeg_fxTerms_quanto (OSCTXT* pctxt,
   EquityLeg_fxTerms_quanto *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_fxTerms_quanto (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_fxTerms_quanto (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_fxTerms_quanto (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto* pvalue);

EXTERN int DOMTest_EquityLeg_fxTerms_quanto (OSCTXT* pctxt, 
   EquityLeg_fxTerms_quanto* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_fxTerms_quanto (EquityLeg_fxTerms_quanto* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_fxTerms_compositeFx_referenceCurrency           */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_fxTerms_compositeFx_referenceCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_fxTerms_compositeFx_referenceCurrency {
   struct {
      unsigned currencySchemePresent : 1;
   } m;
   const OSUTF8CHAR* currencyScheme;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* base;
} EquityLeg_fxTerms_compositeFx_referenceCurrency;

EXTERN int asn1E_EquityLeg_fxTerms_compositeFx_referenceCurrency (OSCTXT* pctxt,
   EquityLeg_fxTerms_compositeFx_referenceCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_fxTerms_compositeFx_referenceCurrency (
   OSCTXT* pctxt, EquityLeg_fxTerms_compositeFx_referenceCurrency *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_fxTerms_compositeFx_referenceCurrency 
   (OSCTXT* pctxt, EquityLeg_fxTerms_compositeFx_referenceCurrency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_fxTerms_compositeFx_referenceCurrency 
   (OSCTXT* pctxt, EquityLeg_fxTerms_compositeFx_referenceCurrency* pvalue);

EXTERN int DOMTest_EquityLeg_fxTerms_compositeFx_referenceCurrency (OSCTXT* pctxt, 
   EquityLeg_fxTerms_compositeFx_referenceCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_fxTerms_compositeFx_referenceCurrency (
   EquityLeg_fxTerms_compositeFx_referenceCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_fxTerms_compositeFx                             */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_fxTerms_compositeFx	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg_fxTerms_compositeFx {
   struct {
      unsigned determinationMethodPresent : 1;
      unsigned relativeDatePresent : 1;
      unsigned fxDeterminationPresent : 1;
   } m;
   EquityLeg_fxTerms_compositeFx_referenceCurrency referenceCurrency;
   const OSUTF8CHAR* determinationMethod;
   RelativeDateOffset_derivations relativeDate;
   FxSpotRateSource_derivations fxDetermination;
} EquityLeg_fxTerms_compositeFx;

EXTERN int asn1E_EquityLeg_fxTerms_compositeFx (OSCTXT* pctxt,
   EquityLeg_fxTerms_compositeFx *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_fxTerms_compositeFx (OSCTXT* pctxt, 
   EquityLeg_fxTerms_compositeFx *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_fxTerms_compositeFx (OSCTXT* pctxt, 
   EquityLeg_fxTerms_compositeFx* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_fxTerms_compositeFx (OSCTXT* pctxt, 
   EquityLeg_fxTerms_compositeFx* pvalue);

EXTERN int DOMTest_EquityLeg_fxTerms_compositeFx (OSCTXT* pctxt, 
   EquityLeg_fxTerms_compositeFx* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_fxTerms_compositeFx (
   EquityLeg_fxTerms_compositeFx* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg_fxTerms                                         */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg_fxTerms	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquityLeg_fxTerms_quanto      1
#define T_EquityLeg_fxTerms_compositeFx 2

typedef struct EXTERN EquityLeg_fxTerms {
   int t;
   union {
      /* t = 1 */
      EquityLeg_fxTerms_quanto *quanto;
      /* t = 2 */
      EquityLeg_fxTerms_compositeFx *compositeFx;
   } u;
} EquityLeg_fxTerms;

EXTERN int asn1E_EquityLeg_fxTerms (OSCTXT* pctxt,
   EquityLeg_fxTerms *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg_fxTerms (OSCTXT* pctxt, EquityLeg_fxTerms *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg_fxTerms (OSCTXT* pctxt, EquityLeg_fxTerms* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg_fxTerms (OSCTXT* pctxt, EquityLeg_fxTerms* pvalue)
   ;

EXTERN int DOMTest_EquityLeg_fxTerms (OSCTXT* pctxt, EquityLeg_fxTerms* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg_fxTerms (EquityLeg_fxTerms* pvalue);

/**************************************************************/
/*                                                            */
/*  EquityLeg                                                 */
/*                                                            */
/**************************************************************/

#define TV_EquityLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquityLeg {
   struct {
      unsigned legIdentifierPresent : 1;
      unsigned fxTermsPresent : 1;
   } m;
   const OSUTF8CHAR* legIdentifier;
   PayerReceiver_model payerReceiver_model;
   AdjustableOrRelativeDate effectiveDate;
   AdjustableOrRelativeDate terminationDate;
   Underlyer underlyer;
   EquityLeg_valuation valuation;
   EquityLeg_notional notional;
   EquityLeg_equityAmount equityAmount;
   Return return_;
   NotionalAdjustmentEnum notionalAdjustments;
   EquityLeg_fxTerms fxTerms;
} EquityLeg;

EXTERN int asn1E_EquityLeg (OSCTXT* pctxt,
   EquityLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquityLeg (OSCTXT* pctxt, EquityLeg *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquityLeg (OSCTXT* pctxt, EquityLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquityLeg (OSCTXT* pctxt, EquityLeg* pvalue);

EXTERN int DOMTest_EquityLeg (OSCTXT* pctxt, EquityLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquityLeg (EquityLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestLegCalculationPeriodDates_interestLe  */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference {
   const OSUTF8CHAR* href;
} InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference;

EXTERN int asn1E_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference (OSCTXT* pctxt,
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference (
   OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference* pvalue)
   ;

EXTERN int DOMTest_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference (
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestLegCalculationPeriodDates_interestLe  */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice_resetRelativeTo 1
#define T_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice_resetFrequency 2

typedef struct EXTERN InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice {
   int t;
   union {
      /* t = 1 */
      ResetRelativeToEnum resetRelativeTo;
      /* t = 2 */
      ResetFrequency *resetFrequency;
   } u;
} InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice;

EXTERN int asn1E_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice (OSCTXT* pctxt,
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice (
   OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice* pvalue)
   ;

EXTERN int DOMTest_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice (
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestLegCalculationPeriodDates_interestLe  */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates {
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_calculationPeriodDatesReference calculationPeriodDatesReference;
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates_choice choice;
} InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates;

EXTERN int asn1E_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates (OSCTXT* pctxt,
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates (
   OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates 
   (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates* pvalue)
   ;

EXTERN int DOMTest_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates (
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestLegCalculationPeriodDates             */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestLegCalculationPeriodDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestLeg_interestLegCalculationPeriodDates {
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate effectiveDate;
   AdjustableOrRelativeDate terminationDate;
   InterestLeg_interestLegCalculationPeriodDates_interestLegResetDates interestLegResetDates;
   AdjustableOrRelativeDates interestLegPaymentDates;
} InterestLeg_interestLegCalculationPeriodDates;

EXTERN int asn1E_InterestLeg_interestLegCalculationPeriodDates (OSCTXT* pctxt,
   InterestLeg_interestLegCalculationPeriodDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestLegCalculationPeriodDates (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_InterestLeg_interestLegCalculationPeriodDates 
   (OSCTXT* pctxt, InterestLeg_interestLegCalculationPeriodDates* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestLeg_interestLegCalculationPeriodDates 
   (OSCTXT* pctxt, InterestLeg_interestLegCalculationPeriodDates* pvalue);

EXTERN int DOMTest_InterestLeg_interestLegCalculationPeriodDates (OSCTXT* pctxt, 
   InterestLeg_interestLegCalculationPeriodDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestLegCalculationPeriodDates (
   InterestLeg_interestLegCalculationPeriodDates* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg_notional                                      */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_notional	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestLeg_notional_determinationMethod 1
#define T_InterestLeg_notional_notionalAmount 2
#define T_InterestLeg_notional_amountRelativeTo 3

typedef struct EXTERN InterestLeg_notional {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      Money_derivations *notionalAmount;
      /* t = 3 */
      AmountRelativeTo *amountRelativeTo;
   } u;
} InterestLeg_notional;

EXTERN int asn1E_InterestLeg_notional (OSCTXT* pctxt,
   InterestLeg_notional *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_notional (OSCTXT* pctxt, 
   InterestLeg_notional *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestLeg_notional (OSCTXT* pctxt, 
   InterestLeg_notional* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestLeg_notional (OSCTXT* pctxt, 
   InterestLeg_notional* pvalue);

EXTERN int DOMTest_InterestLeg_notional (OSCTXT* pctxt, InterestLeg_notional* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_notional (InterestLeg_notional* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_paymentCurrency_choice                          */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_paymentCurrency_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegAmount_paymentCurrency_choice_currency 1
#define T_LegAmount_paymentCurrency_choice_determinationMethod 2

typedef struct EXTERN LegAmount_paymentCurrency_choice {
   int t;
   union {
      /* t = 1 */
      Currency *currency;
      /* t = 2 */
      const OSUTF8CHAR* determinationMethod;
   } u;
} LegAmount_paymentCurrency_choice;

EXTERN int asn1E_LegAmount_paymentCurrency_choice (OSCTXT* pctxt,
   LegAmount_paymentCurrency_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   LegAmount_paymentCurrency_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   LegAmount_paymentCurrency_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   LegAmount_paymentCurrency_choice* pvalue);

EXTERN int DOMTest_LegAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   LegAmount_paymentCurrency_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_paymentCurrency_choice (
   LegAmount_paymentCurrency_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_paymentCurrency                                 */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_paymentCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount_paymentCurrency {
   struct {
      unsigned hrefPresent : 1;
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* id;
   LegAmount_paymentCurrency_choice choice;
} LegAmount_paymentCurrency;

EXTERN int asn1E_LegAmount_paymentCurrency (OSCTXT* pctxt,
   LegAmount_paymentCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_paymentCurrency (OSCTXT* pctxt, 
   LegAmount_paymentCurrency *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_paymentCurrency (OSCTXT* pctxt, 
   LegAmount_paymentCurrency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_paymentCurrency (OSCTXT* pctxt, 
   LegAmount_paymentCurrency* pvalue);

EXTERN int DOMTest_LegAmount_paymentCurrency (OSCTXT* pctxt, 
   LegAmount_paymentCurrency* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_paymentCurrency (LegAmount_paymentCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_referenceAmount                                 */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_referenceAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount_referenceAmount {
   struct {
      unsigned hrefPresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* base;
} LegAmount_referenceAmount;

EXTERN int asn1E_LegAmount_referenceAmount (OSCTXT* pctxt,
   LegAmount_referenceAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_referenceAmount (OSCTXT* pctxt, 
   LegAmount_referenceAmount *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_referenceAmount (OSCTXT* pctxt, 
   LegAmount_referenceAmount* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_referenceAmount (OSCTXT* pctxt, 
   LegAmount_referenceAmount* pvalue);

EXTERN int DOMTest_LegAmount_referenceAmount (OSCTXT* pctxt, 
   LegAmount_referenceAmount* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_referenceAmount (LegAmount_referenceAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_choice                                          */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegAmount_choice_referenceAmount 1
#define T_LegAmount_choice_formula      2
#define T_LegAmount_choice_encodedDescription 3

typedef struct EXTERN LegAmount_choice {
   int t;
   union {
      /* t = 1 */
      LegAmount_referenceAmount *referenceAmount;
      /* t = 2 */
      Formula *formula;
      /* t = 3 */
      ASN1DynOctStr *encodedDescription;
   } u;
} LegAmount_choice;

EXTERN int asn1E_LegAmount_choice (OSCTXT* pctxt,
   LegAmount_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_choice (OSCTXT* pctxt, LegAmount_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_choice (OSCTXT* pctxt, LegAmount_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_choice (OSCTXT* pctxt, LegAmount_choice* pvalue);

EXTERN int DOMTest_LegAmount_choice (OSCTXT* pctxt, LegAmount_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_choice (LegAmount_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount                                                 */
/*                                                            */
/**************************************************************/

#define TV_LegAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount {
   struct {
      unsigned calculationDatesPresent : 1;
   } m;
   LegAmount_paymentCurrency paymentCurrency;
   LegAmount_choice choice;
   AdjustableRelativeOrPeriodicDates calculationDates;
} LegAmount;

EXTERN int asn1E_LegAmount (OSCTXT* pctxt,
   LegAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount (OSCTXT* pctxt, LegAmount *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount (OSCTXT* pctxt, LegAmount* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount (OSCTXT* pctxt, LegAmount* pvalue);

EXTERN int DOMTest_LegAmount (OSCTXT* pctxt, LegAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount (LegAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations_equityLeg_equityAmount_paymentCurr  */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice_currency 1
#define T_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice_determinationMethod 2

typedef struct EXTERN LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice {
   int t;
   union {
      /* t = 1 */
      Currency *currency;
      /* t = 2 */
      const OSUTF8CHAR* determinationMethod;
   } u;
} LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice;

EXTERN int asn1E_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice (OSCTXT* pctxt,
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice (
   OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice* pvalue)
   ;

EXTERN int DOMTest_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice (
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations_equityLeg_equityAmount_paymentCurr  */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount_derivations_equityLeg_equityAmount_paymentCurrency {
   struct {
      unsigned hrefPresent : 1;
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* id;
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency_choice choice;
} LegAmount_derivations_equityLeg_equityAmount_paymentCurrency;

EXTERN int asn1E_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt,
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency (
   OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency* pvalue);

EXTERN int DOMTest_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations_equityLeg_equityAmount_paymentCurrency (
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations_equityLeg_equityAmount_referenceAm  */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations_equityLeg_equityAmount_referenceAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount_derivations_equityLeg_equityAmount_referenceAmount {
   struct {
      unsigned hrefPresent : 1;
   } m;
   const OSUTF8CHAR* href;
   const OSUTF8CHAR* base;
} LegAmount_derivations_equityLeg_equityAmount_referenceAmount;

EXTERN int asn1E_LegAmount_derivations_equityLeg_equityAmount_referenceAmount (OSCTXT* pctxt,
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations_equityLeg_equityAmount_referenceAmount (
   OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_derivations_equityLeg_equityAmount_referenceAmount 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_derivations_equityLeg_equityAmount_referenceAmount 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount* pvalue);

EXTERN int DOMTest_LegAmount_derivations_equityLeg_equityAmount_referenceAmount (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations_equityLeg_equityAmount_referenceAmount (
   LegAmount_derivations_equityLeg_equityAmount_referenceAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations_equityLeg_equityAmount_choice       */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations_equityLeg_equityAmount_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegAmount_derivations_equityLeg_equityAmount_choice_referenceAmount 1
#define T_LegAmount_derivations_equityLeg_equityAmount_choice_formula 2
#define T_LegAmount_derivations_equityLeg_equityAmount_choice_encodedDescription 3

typedef struct EXTERN LegAmount_derivations_equityLeg_equityAmount_choice {
   int t;
   union {
      /* t = 1 */
      LegAmount_derivations_equityLeg_equityAmount_referenceAmount *referenceAmount;
      /* t = 2 */
      Formula *formula;
      /* t = 3 */
      ASN1DynOctStr *encodedDescription;
   } u;
} LegAmount_derivations_equityLeg_equityAmount_choice;

EXTERN int asn1E_LegAmount_derivations_equityLeg_equityAmount_choice (OSCTXT* pctxt,
   LegAmount_derivations_equityLeg_equityAmount_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations_equityLeg_equityAmount_choice (
   OSCTXT* pctxt, LegAmount_derivations_equityLeg_equityAmount_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_derivations_equityLeg_equityAmount_choice 
   (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_derivations_equityLeg_equityAmount_choice 
   (OSCTXT* pctxt, LegAmount_derivations_equityLeg_equityAmount_choice* pvalue)
   ;

EXTERN int DOMTest_LegAmount_derivations_equityLeg_equityAmount_choice (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations_equityLeg_equityAmount_choice (
   LegAmount_derivations_equityLeg_equityAmount_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations_equityLeg_equityAmount              */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations_equityLeg_equityAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegAmount_derivations_equityLeg_equityAmount {
   struct {
      unsigned calculationDatesPresent : 1;
   } m;
   LegAmount_derivations_equityLeg_equityAmount_paymentCurrency paymentCurrency;
   LegAmount_derivations_equityLeg_equityAmount_choice choice;
   AdjustableRelativeOrPeriodicDates calculationDates;
   OSBOOL cashSettlement;
} LegAmount_derivations_equityLeg_equityAmount;

EXTERN int asn1E_LegAmount_derivations_equityLeg_equityAmount (OSCTXT* pctxt,
   LegAmount_derivations_equityLeg_equityAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations_equityLeg_equityAmount (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_LegAmount_derivations_equityLeg_equityAmount (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_derivations_equityLeg_equityAmount (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount* pvalue);

EXTERN int DOMTest_LegAmount_derivations_equityLeg_equityAmount (OSCTXT* pctxt, 
   LegAmount_derivations_equityLeg_equityAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations_equityLeg_equityAmount (
   LegAmount_derivations_equityLeg_equityAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  LegAmount_derivations                                     */
/*                                                            */
/**************************************************************/

#define TV_LegAmount_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegAmount_derivations_legAmount 1
#define T_LegAmount_derivations_equityLeg_equityAmount 2

typedef struct EXTERN LegAmount_derivations {
   int t;
   union {
      /* t = 1 */
      LegAmount *legAmount;
      /* t = 2 */
      LegAmount_derivations_equityLeg_equityAmount *equityLeg_equityAmount;
   } u;
} LegAmount_derivations;

EXTERN int asn1E_LegAmount_derivations (OSCTXT* pctxt,
   LegAmount_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegAmount_derivations (OSCTXT* pctxt, 
   LegAmount_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegAmount_derivations (OSCTXT* pctxt, 
   LegAmount_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegAmount_derivations (OSCTXT* pctxt, 
   LegAmount_derivations* pvalue);

EXTERN int DOMTest_LegAmount_derivations (OSCTXT* pctxt, 
   LegAmount_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegAmount_derivations (LegAmount_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestCalculation_choice                    */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestCalculation_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestLeg_interestCalculation_choice_floatingRateCalculation 1
#define T_InterestLeg_interestCalculation_choice_fixedRate 2

typedef struct EXTERN InterestLeg_interestCalculation_choice {
   int t;
   union {
      /* t = 1 */
      FloatingRateCalculation *floatingRateCalculation;
      /* t = 2 */
      OSREAL fixedRate;
   } u;
} InterestLeg_interestCalculation_choice;

EXTERN int asn1E_InterestLeg_interestCalculation_choice (OSCTXT* pctxt,
   InterestLeg_interestCalculation_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestCalculation_choice (OSCTXT* pctxt, 
   InterestLeg_interestCalculation_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_InterestLeg_interestCalculation_choice (OSCTXT* pctxt, 
   InterestLeg_interestCalculation_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestLeg_interestCalculation_choice (OSCTXT* pctxt, 
   InterestLeg_interestCalculation_choice* pvalue);

EXTERN int DOMTest_InterestLeg_interestCalculation_choice (OSCTXT* pctxt, 
   InterestLeg_interestCalculation_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestCalculation_choice (
   InterestLeg_interestCalculation_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg_interestCalculation                           */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg_interestCalculation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestLeg_interestCalculation {
   InterestLeg_interestCalculation_choice choice;
   DayCountFractionEnum dayCountFraction;
} InterestLeg_interestCalculation;

EXTERN int asn1E_InterestLeg_interestCalculation (OSCTXT* pctxt,
   InterestLeg_interestCalculation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg_interestCalculation (OSCTXT* pctxt, 
   InterestLeg_interestCalculation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestLeg_interestCalculation (OSCTXT* pctxt, 
   InterestLeg_interestCalculation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestLeg_interestCalculation (OSCTXT* pctxt, 
   InterestLeg_interestCalculation* pvalue);

EXTERN int DOMTest_InterestLeg_interestCalculation (OSCTXT* pctxt, 
   InterestLeg_interestCalculation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg_interestCalculation (
   InterestLeg_interestCalculation* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestLeg                                               */
/*                                                            */
/**************************************************************/

#define TV_InterestLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestLeg {
   struct {
      unsigned legIdentifierPresent : 1;
   } m;
   const OSUTF8CHAR* legIdentifier;
   PayerReceiver_model payerReceiver_model;
   InterestLeg_interestLegCalculationPeriodDates interestLegCalculationPeriodDates;
   InterestLeg_notional notional;
   LegAmount_derivations interestAmount;
   InterestLeg_interestCalculation interestCalculation;
} InterestLeg;

EXTERN int asn1E_InterestLeg (OSCTXT* pctxt,
   InterestLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestLeg (OSCTXT* pctxt, InterestLeg *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestLeg (OSCTXT* pctxt, InterestLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestLeg (OSCTXT* pctxt, InterestLeg* pvalue);

EXTERN int DOMTest_InterestLeg (OSCTXT* pctxt, InterestLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestLeg (InterestLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  PrincipalExchangeFeatures_principalExchangeDescriptions_  */
/*                                                            */
/**************************************************************/

#define TV_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount_amountRelativeTo 1
#define T_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount_determinationMethod 2
#define T_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount_principalAmount 3

typedef struct EXTERN PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 3 */
      Money_derivations *principalAmount;
   } u;
} PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount;

EXTERN int asn1E_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount (OSCTXT* pctxt,
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount (
   OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount 
   (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount 
   (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount* pvalue)
   ;

EXTERN int DOMTest_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount (
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  PrincipalExchangeFeatures_principalExchangeDescriptions   */
/*                                                            */
/**************************************************************/

#define TV_PrincipalExchangeFeatures_principalExchangeDescriptions	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PrincipalExchangeFeatures_principalExchangeDescriptions {
   PayerReceiver_model payerReceiver_model;
   PrincipalExchangeFeatures_principalExchangeDescriptions_principalExchangeAmount principalExchangeAmount;
   AdjustableOrRelativeDate principalExchangeDate;
} PrincipalExchangeFeatures_principalExchangeDescriptions;

EXTERN int asn1E_PrincipalExchangeFeatures_principalExchangeDescriptions (OSCTXT* pctxt,
   PrincipalExchangeFeatures_principalExchangeDescriptions *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrincipalExchangeFeatures_principalExchangeDescriptions (
   OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PrincipalExchangeFeatures_principalExchangeDescriptions 
   (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrincipalExchangeFeatures_principalExchangeDescriptions 
   (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions* pvalue);

EXTERN int DOMTest_PrincipalExchangeFeatures_principalExchangeDescriptions (OSCTXT* pctxt, 
   PrincipalExchangeFeatures_principalExchangeDescriptions* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PrincipalExchangeFeatures_principalExchangeDescriptions (
   PrincipalExchangeFeatures_principalExchangeDescriptions* pvalue);

/**************************************************************/
/*                                                            */
/*  PrincipalExchangeFeatures                                 */
/*                                                            */
/**************************************************************/

#define TV_PrincipalExchangeFeatures	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PrincipalExchangeFeatures {
   PrincipalExchanges principalExchanges;
   /* List of PrincipalExchangeFeatures_principalExchangeDescriptions */
   OSRTDList principalExchangeDescriptions_list;
} PrincipalExchangeFeatures;

EXTERN int asn1E_PrincipalExchangeFeatures (OSCTXT* pctxt,
   PrincipalExchangeFeatures *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PrincipalExchangeFeatures (OSCTXT* pctxt, 
   PrincipalExchangeFeatures *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PrincipalExchangeFeatures (OSCTXT* pctxt, 
   PrincipalExchangeFeatures* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PrincipalExchangeFeatures (OSCTXT* pctxt, 
   PrincipalExchangeFeatures* pvalue);

EXTERN int DOMTest_PrincipalExchangeFeatures (OSCTXT* pctxt, 
   PrincipalExchangeFeatures* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PrincipalExchangeFeatures (PrincipalExchangeFeatures* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapAdditionalPayment_additionalPaymentAmount       */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapAdditionalPayment_additionalPaymentAmount	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapAdditionalPayment_additionalPaymentAmount {
   struct {
      unsigned paymentAmountPresent : 1;
      unsigned formulaPresent : 1;
   } m;
   Money_derivations paymentAmount;
   Formula formula;
} EquitySwapAdditionalPayment_additionalPaymentAmount;

EXTERN int asn1E_EquitySwapAdditionalPayment_additionalPaymentAmount (OSCTXT* pctxt,
   EquitySwapAdditionalPayment_additionalPaymentAmount *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapAdditionalPayment_additionalPaymentAmount (
   OSCTXT* pctxt, EquitySwapAdditionalPayment_additionalPaymentAmount *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapAdditionalPayment_additionalPaymentAmount 
   (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment_additionalPaymentAmount* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapAdditionalPayment_additionalPaymentAmount 
   (OSCTXT* pctxt, EquitySwapAdditionalPayment_additionalPaymentAmount* pvalue)
   ;

EXTERN int DOMTest_EquitySwapAdditionalPayment_additionalPaymentAmount (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment_additionalPaymentAmount* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapAdditionalPayment_additionalPaymentAmount (
   EquitySwapAdditionalPayment_additionalPaymentAmount* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapAdditionalPayment_additionalPaymentDate         */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapAdditionalPayment_additionalPaymentDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapAdditionalPayment_additionalPaymentDate_adjustableDate 1
#define T_EquitySwapAdditionalPayment_additionalPaymentDate_relativeDate 2

typedef struct EXTERN EquitySwapAdditionalPayment_additionalPaymentDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateOffset_derivations *relativeDate;
   } u;
} EquitySwapAdditionalPayment_additionalPaymentDate;

EXTERN int asn1E_EquitySwapAdditionalPayment_additionalPaymentDate (OSCTXT* pctxt,
   EquitySwapAdditionalPayment_additionalPaymentDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapAdditionalPayment_additionalPaymentDate (
   OSCTXT* pctxt, EquitySwapAdditionalPayment_additionalPaymentDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapAdditionalPayment_additionalPaymentDate 
   (OSCTXT* pctxt, EquitySwapAdditionalPayment_additionalPaymentDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapAdditionalPayment_additionalPaymentDate 
   (OSCTXT* pctxt, EquitySwapAdditionalPayment_additionalPaymentDate* pvalue);

EXTERN int DOMTest_EquitySwapAdditionalPayment_additionalPaymentDate (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment_additionalPaymentDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapAdditionalPayment_additionalPaymentDate (
   EquitySwapAdditionalPayment_additionalPaymentDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapAdditionalPayment                               */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapAdditionalPayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapAdditionalPayment {
   struct {
      unsigned paymentTypePresent : 1;
   } m;
   PayerReceiver_model payerReceiver_model;
   EquitySwapAdditionalPayment_additionalPaymentAmount additionalPaymentAmount;
   EquitySwapAdditionalPayment_additionalPaymentDate additionalPaymentDate;
   PaymentType paymentType;
} EquitySwapAdditionalPayment;

EXTERN int asn1E_EquitySwapAdditionalPayment (OSCTXT* pctxt,
   EquitySwapAdditionalPayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapAdditionalPayment (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapAdditionalPayment (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapAdditionalPayment (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment* pvalue);

EXTERN int DOMTest_EquitySwapAdditionalPayment (OSCTXT* pctxt, 
   EquitySwapAdditionalPayment* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapAdditionalPayment (EquitySwapAdditionalPayment* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapEarlyTerminationType_startingDate               */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapEarlyTerminationType_startingDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapEarlyTerminationType_startingDate_dateRelativeTo 1
#define T_EquitySwapEarlyTerminationType_startingDate_adjustableDate 2

typedef struct EXTERN EquitySwapEarlyTerminationType_startingDate {
   int t;
   union {
      /* t = 1 */
      DateRelativeTo *dateRelativeTo;
      /* t = 2 */
      AdjustableDate *adjustableDate;
   } u;
} EquitySwapEarlyTerminationType_startingDate;

EXTERN int asn1E_EquitySwapEarlyTerminationType_startingDate (OSCTXT* pctxt,
   EquitySwapEarlyTerminationType_startingDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapEarlyTerminationType_startingDate (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType_startingDate *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquitySwapEarlyTerminationType_startingDate (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType_startingDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapEarlyTerminationType_startingDate (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType_startingDate* pvalue);

EXTERN int DOMTest_EquitySwapEarlyTerminationType_startingDate (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType_startingDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapEarlyTerminationType_startingDate (
   EquitySwapEarlyTerminationType_startingDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapEarlyTerminationType                            */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapEarlyTerminationType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapEarlyTerminationType {
   PartyReference partyReference;
   EquitySwapEarlyTerminationType_startingDate startingDate;
} EquitySwapEarlyTerminationType;

EXTERN int asn1E_EquitySwapEarlyTerminationType (OSCTXT* pctxt,
   EquitySwapEarlyTerminationType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapEarlyTerminationType (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapEarlyTerminationType (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapEarlyTerminationType (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType* pvalue);

EXTERN int DOMTest_EquitySwapEarlyTerminationType (OSCTXT* pctxt, 
   EquitySwapEarlyTerminationType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapEarlyTerminationType (
   EquitySwapEarlyTerminationType* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwap                                                */
/*                                                            */
/**************************************************************/

#define TV_EquitySwap	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwap {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned principalExchangeFeaturesPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   /* List of EquityLeg */
   OSRTDList equityLeg_list;
   /* List of InterestLeg */
   OSRTDList interestLeg_list;
   PrincipalExchangeFeatures principalExchangeFeatures;
   /* List of EquitySwapAdditionalPayment */
   OSRTDList additionalPayment_list;
   /* List of EquitySwapEarlyTerminationType */
   OSRTDList earlyTermination_list;
} EquitySwap;

EXTERN int asn1E_EquitySwap (OSCTXT* pctxt,
   EquitySwap *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwap (OSCTXT* pctxt, EquitySwap *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwap (OSCTXT* pctxt, EquitySwap* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwap (OSCTXT* pctxt, EquitySwap* pvalue);

EXTERN int DOMTest_EquitySwap (OSCTXT* pctxt, EquitySwap* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwap (EquitySwap* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDate2_unadjustedDate                            */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDate2_unadjustedDate	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDate2_unadjustedDate {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const char* base;
} AdjustableDate2_unadjustedDate;

EXTERN int asn1E_AdjustableDate2_unadjustedDate (OSCTXT* pctxt,
   AdjustableDate2_unadjustedDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDate2_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate2_unadjustedDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDate2_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate2_unadjustedDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDate2_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate2_unadjustedDate* pvalue);

EXTERN int DOMTest_AdjustableDate2_unadjustedDate (OSCTXT* pctxt, 
   AdjustableDate2_unadjustedDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDate2_unadjustedDate (
   AdjustableDate2_unadjustedDate* pvalue);

/**************************************************************/
/*                                                            */
/*  BusinessDayAdjustmentsReference                           */
/*                                                            */
/**************************************************************/

#define TV_BusinessDayAdjustmentsReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BusinessDayAdjustmentsReference {
   const OSUTF8CHAR* href;
} BusinessDayAdjustmentsReference;

EXTERN int asn1E_BusinessDayAdjustmentsReference (OSCTXT* pctxt,
   BusinessDayAdjustmentsReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BusinessDayAdjustmentsReference (OSCTXT* pctxt, 
   BusinessDayAdjustmentsReference *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_BusinessDayAdjustmentsReference (OSCTXT* pctxt, 
   BusinessDayAdjustmentsReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BusinessDayAdjustmentsReference (OSCTXT* pctxt, 
   BusinessDayAdjustmentsReference* pvalue);

EXTERN int DOMTest_BusinessDayAdjustmentsReference (OSCTXT* pctxt, 
   BusinessDayAdjustmentsReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BusinessDayAdjustmentsReference (
   BusinessDayAdjustmentsReference* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDate2_choice                                    */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDate2_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_AdjustableDate2_choice_dateAdjustments 1
#define T_AdjustableDate2_choice_dateAdjustmentsReference 2

typedef struct EXTERN AdjustableDate2_choice {
   int t;
   union {
      /* t = 1 */
      BusinessDayAdjustments *dateAdjustments;
      /* t = 2 */
      BusinessDayAdjustmentsReference *dateAdjustmentsReference;
   } u;
} AdjustableDate2_choice;

EXTERN int asn1E_AdjustableDate2_choice (OSCTXT* pctxt,
   AdjustableDate2_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDate2_choice (OSCTXT* pctxt, 
   AdjustableDate2_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDate2_choice (OSCTXT* pctxt, 
   AdjustableDate2_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDate2_choice (OSCTXT* pctxt, 
   AdjustableDate2_choice* pvalue);

EXTERN int DOMTest_AdjustableDate2_choice (OSCTXT* pctxt, 
   AdjustableDate2_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDate2_choice (AdjustableDate2_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustableDate2                                           */
/*                                                            */
/**************************************************************/

#define TV_AdjustableDate2	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustableDate2 {
   struct {
      unsigned idPresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableDate2_unadjustedDate unadjustedDate;
   AdjustableDate2_choice choice;
} AdjustableDate2;

EXTERN int asn1E_AdjustableDate2 (OSCTXT* pctxt,
   AdjustableDate2 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustableDate2 (OSCTXT* pctxt, AdjustableDate2 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustableDate2 (OSCTXT* pctxt, AdjustableDate2* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustableDate2 (OSCTXT* pctxt, AdjustableDate2* pvalue);

EXTERN int DOMTest_AdjustableDate2 (OSCTXT* pctxt, AdjustableDate2* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustableDate2 (AdjustableDate2* pvalue);

/**************************************************************/
/*                                                            */
/*  ScheduledTerminationDate                                  */
/*                                                            */
/**************************************************************/

#define TV_ScheduledTerminationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ScheduledTerminationDate_adjustableDate 1
#define T_ScheduledTerminationDate_relativeDate 2

typedef struct EXTERN ScheduledTerminationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate2 *adjustableDate;
      /* t = 2 */
      Interval_derivations *relativeDate;
   } u;
} ScheduledTerminationDate;

EXTERN int asn1E_ScheduledTerminationDate (OSCTXT* pctxt,
   ScheduledTerminationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ScheduledTerminationDate (OSCTXT* pctxt, 
   ScheduledTerminationDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ScheduledTerminationDate (OSCTXT* pctxt, 
   ScheduledTerminationDate* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ScheduledTerminationDate (OSCTXT* pctxt, 
   ScheduledTerminationDate* pvalue);

EXTERN int DOMTest_ScheduledTerminationDate (OSCTXT* pctxt, 
   ScheduledTerminationDate* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ScheduledTerminationDate (ScheduledTerminationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EntityName                                                */
/*                                                            */
/**************************************************************/

#define TV_EntityName	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EntityName {
   struct {
      unsigned entityNameSchemePresent : 1;
   } m;
   const OSUTF8CHAR* entityNameScheme;
   const OSUTF8CHAR* base;
} EntityName;

EXTERN int asn1E_EntityName (OSCTXT* pctxt,
   EntityName *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EntityName (OSCTXT* pctxt, EntityName *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EntityName (OSCTXT* pctxt, EntityName* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EntityName (OSCTXT* pctxt, EntityName* pvalue);

EXTERN int DOMTest_EntityName (OSCTXT* pctxt, EntityName* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EntityName (EntityName* pvalue);

/**************************************************************/
/*                                                            */
/*  EntityId                                                  */
/*                                                            */
/**************************************************************/

#define TV_EntityId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EntityId {
   struct {
      unsigned entityIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* entityIdScheme;
   const OSUTF8CHAR* base;
} EntityId;

EXTERN int asn1E_EntityId (OSCTXT* pctxt,
   EntityId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EntityId (OSCTXT* pctxt, EntityId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EntityId (OSCTXT* pctxt, EntityId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EntityId (OSCTXT* pctxt, EntityId* pvalue);

EXTERN int DOMTest_EntityId (OSCTXT* pctxt, EntityId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EntityId (EntityId* pvalue);

/**************************************************************/
/*                                                            */
/*  LegalEntity_sequence                                      */
/*                                                            */
/**************************************************************/

#define TV_LegalEntity_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegalEntity_sequence {
   EntityName entityName;
   /* List of EntityId */
   OSRTDList entityId_list;
} LegalEntity_sequence;

EXTERN int asn1E_LegalEntity_sequence (OSCTXT* pctxt,
   LegalEntity_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegalEntity_sequence (OSCTXT* pctxt, 
   LegalEntity_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegalEntity_sequence (OSCTXT* pctxt, 
   LegalEntity_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegalEntity_sequence (OSCTXT* pctxt, 
   LegalEntity_sequence* pvalue);

EXTERN int DOMTest_LegalEntity_sequence (OSCTXT* pctxt, LegalEntity_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegalEntity_sequence (LegalEntity_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  LegalEntity_choice                                        */
/*                                                            */
/**************************************************************/

#define TV_LegalEntity_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_LegalEntity_choice_sequence   1
#define T_LegalEntity_choice_entityId_list 2

typedef struct EXTERN LegalEntity_choice {
   int t;
   union {
      /* t = 1 */
      LegalEntity_sequence *sequence;
      /* t = 2 */
      /* List of EntityId */
      OSRTDList *entityId_list;
   } u;
} LegalEntity_choice;

EXTERN int asn1E_LegalEntity_choice (OSCTXT* pctxt,
   LegalEntity_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegalEntity_choice (OSCTXT* pctxt, 
   LegalEntity_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegalEntity_choice (OSCTXT* pctxt, 
   LegalEntity_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegalEntity_choice (OSCTXT* pctxt, 
   LegalEntity_choice* pvalue);

EXTERN int DOMTest_LegalEntity_choice (OSCTXT* pctxt, LegalEntity_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegalEntity_choice (LegalEntity_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegalEntity                                               */
/*                                                            */
/**************************************************************/

#define TV_LegalEntity	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegalEntity {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   LegalEntity_choice choice;
} LegalEntity;

EXTERN int asn1E_LegalEntity (OSCTXT* pctxt,
   LegalEntity *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegalEntity (OSCTXT* pctxt, LegalEntity *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegalEntity (OSCTXT* pctxt, LegalEntity* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegalEntity (OSCTXT* pctxt, LegalEntity* pvalue);

EXTERN int DOMTest_LegalEntity (OSCTXT* pctxt, LegalEntity* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegalEntity (LegalEntity* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceObligation_choice                                */
/*                                                            */
/**************************************************************/

#define TV_ReferenceObligation_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ReferenceObligation_choice_bond 1
#define T_ReferenceObligation_choice_convertibleBond 2

typedef struct EXTERN ReferenceObligation_choice {
   int t;
   union {
      /* t = 1 */
      Bond *bond;
      /* t = 2 */
      ConvertibleBond *convertibleBond;
   } u;
} ReferenceObligation_choice;

EXTERN int asn1E_ReferenceObligation_choice (OSCTXT* pctxt,
   ReferenceObligation_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceObligation_choice (OSCTXT* pctxt, 
   ReferenceObligation_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceObligation_choice (OSCTXT* pctxt, 
   ReferenceObligation_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceObligation_choice (OSCTXT* pctxt, 
   ReferenceObligation_choice* pvalue);

EXTERN int DOMTest_ReferenceObligation_choice (OSCTXT* pctxt, 
   ReferenceObligation_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceObligation_choice (ReferenceObligation_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  LegalEntityReference                                      */
/*                                                            */
/**************************************************************/

#define TV_LegalEntityReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LegalEntityReference {
   const OSUTF8CHAR* href;
} LegalEntityReference;

EXTERN int asn1E_LegalEntityReference (OSCTXT* pctxt,
   LegalEntityReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LegalEntityReference (OSCTXT* pctxt, 
   LegalEntityReference *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_LegalEntityReference (OSCTXT* pctxt, 
   LegalEntityReference* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LegalEntityReference (OSCTXT* pctxt, 
   LegalEntityReference* pvalue);

EXTERN int DOMTest_LegalEntityReference (OSCTXT* pctxt, LegalEntityReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LegalEntityReference (LegalEntityReference* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceObligation_choice_1                              */
/*                                                            */
/**************************************************************/

#define TV_ReferenceObligation_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ReferenceObligation_choice_1_primaryObligor 1
#define T_ReferenceObligation_choice_1_primaryObligorReference 2

typedef struct EXTERN ReferenceObligation_choice_1 {
   int t;
   union {
      /* t = 1 */
      LegalEntity *primaryObligor;
      /* t = 2 */
      LegalEntityReference *primaryObligorReference;
   } u;
} ReferenceObligation_choice_1;

EXTERN int asn1E_ReferenceObligation_choice_1 (OSCTXT* pctxt,
   ReferenceObligation_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceObligation_choice_1 (OSCTXT* pctxt, 
   ReferenceObligation_choice_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceObligation_choice_1 (OSCTXT* pctxt, 
   ReferenceObligation_choice_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceObligation_choice_1 (OSCTXT* pctxt, 
   ReferenceObligation_choice_1* pvalue);

EXTERN int DOMTest_ReferenceObligation_choice_1 (OSCTXT* pctxt, 
   ReferenceObligation_choice_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceObligation_choice_1 (
   ReferenceObligation_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceObligation_element                               */
/*                                                            */
/**************************************************************/

#define TV_ReferenceObligation_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ReferenceObligation_element_guarantor 1
#define T_ReferenceObligation_element_guarantorReference 2

typedef struct EXTERN ReferenceObligation_element {
   int t;
   union {
      /* t = 1 */
      LegalEntity *guarantor;
      /* t = 2 */
      LegalEntityReference *guarantorReference;
   } u;
} ReferenceObligation_element;

EXTERN int asn1E_ReferenceObligation_element (OSCTXT* pctxt,
   ReferenceObligation_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceObligation_element (OSCTXT* pctxt, 
   ReferenceObligation_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceObligation_element (OSCTXT* pctxt, 
   ReferenceObligation_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceObligation_element (OSCTXT* pctxt, 
   ReferenceObligation_element* pvalue);

EXTERN int DOMTest_ReferenceObligation_element (OSCTXT* pctxt, 
   ReferenceObligation_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceObligation_element (ReferenceObligation_element* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceObligation                                       */
/*                                                            */
/**************************************************************/

#define TV_ReferenceObligation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ReferenceObligation {
   struct {
      unsigned choice_1Present : 1;
   } m;
   ReferenceObligation_choice choice;
   ReferenceObligation_choice_1 choice_1;
   /* List of ReferenceObligation_element */
   OSRTDList choice_2_list;
} ReferenceObligation;

EXTERN int asn1E_ReferenceObligation (OSCTXT* pctxt,
   ReferenceObligation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceObligation (OSCTXT* pctxt, 
   ReferenceObligation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceObligation (OSCTXT* pctxt, 
   ReferenceObligation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceObligation (OSCTXT* pctxt, 
   ReferenceObligation* pvalue);

EXTERN int DOMTest_ReferenceObligation (OSCTXT* pctxt, ReferenceObligation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceObligation (ReferenceObligation* pvalue);

/**************************************************************/
/*                                                            */
/*  Empty                                                     */
/*                                                            */
/**************************************************************/

#define TV_Empty	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Empty {
   OSOCTET __dummy__;
} Empty;

EXTERN int asn1E_Empty (OSCTXT* pctxt,
   Empty *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Empty (OSCTXT* pctxt, Empty *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Empty (OSCTXT* pctxt, Empty* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Empty (OSCTXT* pctxt, Empty* pvalue);

EXTERN int DOMTest_Empty (OSCTXT* pctxt, Empty* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Empty (Empty* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceInformation_choice                               */
/*                                                            */
/**************************************************************/

#define TV_ReferenceInformation_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ReferenceInformation_choice_referenceObligation_list 1
#define T_ReferenceInformation_choice_noReferenceObligation 2
#define T_ReferenceInformation_choice_unknownReferenceObligation 3

typedef struct EXTERN ReferenceInformation_choice {
   int t;
   union {
      /* t = 1 */
      /* List of ReferenceObligation */
      OSRTDList *referenceObligation_list;
      /* t = 2 */
      Empty *noReferenceObligation;
      /* t = 3 */
      Empty *unknownReferenceObligation;
   } u;
} ReferenceInformation_choice;

EXTERN int asn1E_ReferenceInformation_choice (OSCTXT* pctxt,
   ReferenceInformation_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceInformation_choice (OSCTXT* pctxt, 
   ReferenceInformation_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceInformation_choice (OSCTXT* pctxt, 
   ReferenceInformation_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceInformation_choice (OSCTXT* pctxt, 
   ReferenceInformation_choice* pvalue);

EXTERN int DOMTest_ReferenceInformation_choice (OSCTXT* pctxt, 
   ReferenceInformation_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceInformation_choice (ReferenceInformation_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  ReferenceInformation                                      */
/*                                                            */
/**************************************************************/

#define TV_ReferenceInformation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ReferenceInformation {
   struct {
      unsigned allGuaranteesPresent : 1;
      unsigned referencePricePresent : 1;
   } m;
   LegalEntity referenceEntity;
   ReferenceInformation_choice choice;
   OSBOOL allGuarantees;
   OSREAL referencePrice;
} ReferenceInformation;

EXTERN int asn1E_ReferenceInformation (OSCTXT* pctxt,
   ReferenceInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ReferenceInformation (OSCTXT* pctxt, 
   ReferenceInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ReferenceInformation (OSCTXT* pctxt, 
   ReferenceInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ReferenceInformation (OSCTXT* pctxt, 
   ReferenceInformation* pvalue);

EXTERN int DOMTest_ReferenceInformation (OSCTXT* pctxt, ReferenceInformation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ReferenceInformation (ReferenceInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  AdditionalTerm                                            */
/*                                                            */
/**************************************************************/

#define TV_AdditionalTerm	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdditionalTerm {
   struct {
      unsigned additionalTermSchemePresent : 1;
   } m;
   const OSUTF8CHAR* additionalTermScheme;
   const OSUTF8CHAR* base;
} AdditionalTerm;

EXTERN int asn1E_AdditionalTerm (OSCTXT* pctxt,
   AdditionalTerm *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdditionalTerm (OSCTXT* pctxt, AdditionalTerm *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdditionalTerm (OSCTXT* pctxt, AdditionalTerm* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdditionalTerm (OSCTXT* pctxt, AdditionalTerm* pvalue);

EXTERN int DOMTest_AdditionalTerm (OSCTXT* pctxt, AdditionalTerm* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdditionalTerm (AdditionalTerm* pvalue);

/**************************************************************/
/*                                                            */
/*  GeneralTerms                                              */
/*                                                            */
/**************************************************************/

#define TV_GeneralTerms	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN GeneralTerms {
   struct {
      unsigned dateAdjustmentsPresent : 1;
   } m;
   AdjustableDate2 effectiveDate;
   ScheduledTerminationDate scheduledTerminationDate;
   PartyReference sellerPartyReference;
   PartyReference buyerPartyReference;
   BusinessDayAdjustments dateAdjustments;
   ReferenceInformation referenceInformation;
   /* List of AdditionalTerm */
   OSRTDList additionalTerm_list;
} GeneralTerms;

EXTERN int asn1E_GeneralTerms (OSCTXT* pctxt,
   GeneralTerms *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GeneralTerms (OSCTXT* pctxt, GeneralTerms *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_GeneralTerms (OSCTXT* pctxt, GeneralTerms* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GeneralTerms (OSCTXT* pctxt, GeneralTerms* pvalue);

EXTERN int DOMTest_GeneralTerms (OSCTXT* pctxt, GeneralTerms* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GeneralTerms (GeneralTerms* pvalue);

/**************************************************************/
/*                                                            */
/*  SinglePayment                                             */
/*                                                            */
/**************************************************************/

#define TV_SinglePayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SinglePayment {
   struct {
      unsigned adjustedPaymentDatePresent : 1;
   } m;
   const char* adjustablePaymentDate;
   const char* adjustedPaymentDate;
   Money_derivations fixedAmount;
} SinglePayment;

EXTERN int asn1E_SinglePayment (OSCTXT* pctxt,
   SinglePayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SinglePayment (OSCTXT* pctxt, SinglePayment *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SinglePayment (OSCTXT* pctxt, SinglePayment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SinglePayment (OSCTXT* pctxt, SinglePayment* pvalue);

EXTERN int DOMTest_SinglePayment (OSCTXT* pctxt, SinglePayment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SinglePayment (SinglePayment* pvalue);

/**************************************************************/
/*                                                            */
/*  FixedAmountCalculation                                    */
/*                                                            */
/**************************************************************/

#define TV_FixedAmountCalculation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FixedAmountCalculation {
   struct {
      unsigned calculationAmountPresent : 1;
      unsigned dayCountFractionPresent : 1;
   } m;
   Money_derivations calculationAmount;
   OSREAL fixedRate;
   DayCountFractionEnum dayCountFraction;
} FixedAmountCalculation;

EXTERN int asn1E_FixedAmountCalculation (OSCTXT* pctxt,
   FixedAmountCalculation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FixedAmountCalculation (OSCTXT* pctxt, 
   FixedAmountCalculation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_FixedAmountCalculation (OSCTXT* pctxt, 
   FixedAmountCalculation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FixedAmountCalculation (OSCTXT* pctxt, 
   FixedAmountCalculation* pvalue);

EXTERN int DOMTest_FixedAmountCalculation (OSCTXT* pctxt, 
   FixedAmountCalculation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FixedAmountCalculation (FixedAmountCalculation* pvalue);

/**************************************************************/
/*                                                            */
/*  PeriodicPayment_choice                                    */
/*                                                            */
/**************************************************************/

#define TV_PeriodicPayment_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PeriodicPayment_choice_fixedAmount 1
#define T_PeriodicPayment_choice_fixedAmountCalculation 2

typedef struct EXTERN PeriodicPayment_choice {
   int t;
   union {
      /* t = 1 */
      Money_derivations *fixedAmount;
      /* t = 2 */
      FixedAmountCalculation *fixedAmountCalculation;
   } u;
} PeriodicPayment_choice;

EXTERN int asn1E_PeriodicPayment_choice (OSCTXT* pctxt,
   PeriodicPayment_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PeriodicPayment_choice (OSCTXT* pctxt, 
   PeriodicPayment_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PeriodicPayment_choice (OSCTXT* pctxt, 
   PeriodicPayment_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PeriodicPayment_choice (OSCTXT* pctxt, 
   PeriodicPayment_choice* pvalue);

EXTERN int DOMTest_PeriodicPayment_choice (OSCTXT* pctxt, 
   PeriodicPayment_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PeriodicPayment_choice (PeriodicPayment_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  AdjustedPaymentDates                                      */
/*                                                            */
/**************************************************************/

#define TV_AdjustedPaymentDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AdjustedPaymentDates {
   const char* adjustedPaymentDate;
   Money_derivations paymentAmount;
} AdjustedPaymentDates;

EXTERN int asn1E_AdjustedPaymentDates (OSCTXT* pctxt,
   AdjustedPaymentDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AdjustedPaymentDates (OSCTXT* pctxt, 
   AdjustedPaymentDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AdjustedPaymentDates (OSCTXT* pctxt, 
   AdjustedPaymentDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AdjustedPaymentDates (OSCTXT* pctxt, 
   AdjustedPaymentDates* pvalue);

EXTERN int DOMTest_AdjustedPaymentDates (OSCTXT* pctxt, AdjustedPaymentDates* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AdjustedPaymentDates (AdjustedPaymentDates* pvalue);

/**************************************************************/
/*                                                            */
/*  PeriodicPayment                                           */
/*                                                            */
/**************************************************************/

#define TV_PeriodicPayment	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PeriodicPayment {
   struct {
      unsigned firstPaymentDatePresent : 1;
      unsigned lastRegularPaymentDatePresent : 1;
   } m;
   Interval_derivations paymentFrequency;
   const char* firstPaymentDate;
   const char* lastRegularPaymentDate;
   RollConventionEnum rollConvention;
   PeriodicPayment_choice choice;
   /* List of AdjustedPaymentDates */
   OSRTDList adjustedPaymentDates_list;
} PeriodicPayment;

EXTERN int asn1E_PeriodicPayment (OSCTXT* pctxt,
   PeriodicPayment *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PeriodicPayment (OSCTXT* pctxt, PeriodicPayment *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PeriodicPayment (OSCTXT* pctxt, PeriodicPayment* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PeriodicPayment (OSCTXT* pctxt, PeriodicPayment* pvalue);

EXTERN int DOMTest_PeriodicPayment (OSCTXT* pctxt, PeriodicPayment* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PeriodicPayment (PeriodicPayment* pvalue);

/**************************************************************/
/*                                                            */
/*  FeeLeg                                                    */
/*                                                            */
/**************************************************************/

#define TV_FeeLeg	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FeeLeg {
   struct {
      unsigned periodicPaymentPresent : 1;
   } m;
   /* List of SinglePayment */
   OSRTDList singlePayment_list;
   PeriodicPayment periodicPayment;
} FeeLeg;

EXTERN int asn1E_FeeLeg (OSCTXT* pctxt,
   FeeLeg *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FeeLeg (OSCTXT* pctxt, FeeLeg *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FeeLeg (OSCTXT* pctxt, FeeLeg* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FeeLeg (OSCTXT* pctxt, FeeLeg* pvalue);

EXTERN int DOMTest_FeeLeg (OSCTXT* pctxt, FeeLeg* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FeeLeg (FeeLeg* pvalue);

/**************************************************************/
/*                                                            */
/*  GracePeriodExtension                                      */
/*                                                            */
/**************************************************************/

#define TV_GracePeriodExtension	(TM_UNIV|TM_CONS|0)

typedef Offset_derivations GracePeriodExtension;

EXTERN int asn1E_GracePeriodExtension (OSCTXT* pctxt,
   GracePeriodExtension *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GracePeriodExtension (OSCTXT* pctxt, 
   GracePeriodExtension *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_GracePeriodExtension (OSCTXT* pctxt, 
   GracePeriodExtension* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GracePeriodExtension (OSCTXT* pctxt, 
   GracePeriodExtension* pvalue);

EXTERN int DOMTest_GracePeriodExtension (OSCTXT* pctxt, GracePeriodExtension* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GracePeriodExtension (GracePeriodExtension* pvalue);

/**************************************************************/
/*                                                            */
/*  FailureToPay                                              */
/*                                                            */
/**************************************************************/

#define TV_FailureToPay	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN FailureToPay {
   struct {
      unsigned gracePeriodExtensionPresent : 1;
      unsigned paymentRequirementPresent : 1;
   } m;
   GracePeriodExtension gracePeriodExtension;
   Money_derivations paymentRequirement;
} FailureToPay;

EXTERN int asn1E_FailureToPay (OSCTXT* pctxt,
   FailureToPay *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FailureToPay (OSCTXT* pctxt, FailureToPay *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_FailureToPay (OSCTXT* pctxt, FailureToPay* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FailureToPay (OSCTXT* pctxt, FailureToPay* pvalue);

EXTERN int DOMTest_FailureToPay (OSCTXT* pctxt, FailureToPay* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FailureToPay (FailureToPay* pvalue);

/**************************************************************/
/*                                                            */
/*  RestructuringType                                         */
/*                                                            */
/**************************************************************/

#define TV_RestructuringType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RestructuringType {
   struct {
      unsigned restructuringSchemePresent : 1;
   } m;
   const OSUTF8CHAR* restructuringScheme;
   const OSUTF8CHAR* base;
} RestructuringType;

EXTERN int asn1E_RestructuringType (OSCTXT* pctxt,
   RestructuringType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RestructuringType (OSCTXT* pctxt, RestructuringType *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RestructuringType (OSCTXT* pctxt, RestructuringType* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RestructuringType (OSCTXT* pctxt, RestructuringType* pvalue)
   ;

EXTERN int DOMTest_RestructuringType (OSCTXT* pctxt, RestructuringType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RestructuringType (RestructuringType* pvalue);

/**************************************************************/
/*                                                            */
/*  Restructuring                                             */
/*                                                            */
/**************************************************************/

#define TV_Restructuring	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Restructuring {
   struct {
      unsigned restructuringTypePresent : 1;
      unsigned multipleHolderObligationPresent : 1;
      unsigned multipleCreditEventNoticesPresent : 1;
   } m;
   RestructuringType restructuringType;
   Empty multipleHolderObligation;
   Empty multipleCreditEventNotices;
} Restructuring;

EXTERN int asn1E_Restructuring (OSCTXT* pctxt,
   Restructuring *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Restructuring (OSCTXT* pctxt, Restructuring *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Restructuring (OSCTXT* pctxt, Restructuring* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Restructuring (OSCTXT* pctxt, Restructuring* pvalue);

EXTERN int DOMTest_Restructuring (OSCTXT* pctxt, Restructuring* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Restructuring (Restructuring* pvalue);

/**************************************************************/
/*                                                            */
/*  NotifyingParty                                            */
/*                                                            */
/**************************************************************/

#define TV_NotifyingParty	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotifyingParty {
   struct {
      unsigned sellerPartyReferencePresent : 1;
   } m;
   PartyReference buyerPartyReference;
   PartyReference sellerPartyReference;
} NotifyingParty;

EXTERN int asn1E_NotifyingParty (OSCTXT* pctxt,
   NotifyingParty *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotifyingParty (OSCTXT* pctxt, NotifyingParty *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotifyingParty (OSCTXT* pctxt, NotifyingParty* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotifyingParty (OSCTXT* pctxt, NotifyingParty* pvalue);

EXTERN int DOMTest_NotifyingParty (OSCTXT* pctxt, NotifyingParty* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotifyingParty (NotifyingParty* pvalue);

/**************************************************************/
/*                                                            */
/*  PubliclyAvailableInformation                              */
/*                                                            */
/**************************************************************/

#define TV_PubliclyAvailableInformation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PubliclyAvailableInformation {
   struct {
      unsigned standardPublicSourcesPresent : 1;
      unsigned specifiedNumberPresent : 1;
   } m;
   Empty standardPublicSources;
   /* List of const OSUTF8CHAR* */
   OSRTDList publicSource_list;
   OSUINT32 specifiedNumber;
} PubliclyAvailableInformation;

EXTERN int asn1E_PubliclyAvailableInformation (OSCTXT* pctxt,
   PubliclyAvailableInformation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PubliclyAvailableInformation (OSCTXT* pctxt, 
   PubliclyAvailableInformation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PubliclyAvailableInformation (OSCTXT* pctxt, 
   PubliclyAvailableInformation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PubliclyAvailableInformation (OSCTXT* pctxt, 
   PubliclyAvailableInformation* pvalue);

EXTERN int DOMTest_PubliclyAvailableInformation (OSCTXT* pctxt, 
   PubliclyAvailableInformation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PubliclyAvailableInformation (
   PubliclyAvailableInformation* pvalue);

/**************************************************************/
/*                                                            */
/*  CreditEventNotice                                         */
/*                                                            */
/**************************************************************/

#define TV_CreditEventNotice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CreditEventNotice {
   struct {
      unsigned businessCenterPresent : 1;
      unsigned publiclyAvailableInformationPresent : 1;
   } m;
   NotifyingParty notifyingParty;
   BusinessCenter businessCenter;
   PubliclyAvailableInformation publiclyAvailableInformation;
} CreditEventNotice;

EXTERN int asn1E_CreditEventNotice (OSCTXT* pctxt,
   CreditEventNotice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CreditEventNotice (OSCTXT* pctxt, CreditEventNotice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CreditEventNotice (OSCTXT* pctxt, CreditEventNotice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CreditEventNotice (OSCTXT* pctxt, CreditEventNotice* pvalue)
   ;

EXTERN int DOMTest_CreditEventNotice (OSCTXT* pctxt, CreditEventNotice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CreditEventNotice (CreditEventNotice* pvalue);

/**************************************************************/
/*                                                            */
/*  CreditEvents                                              */
/*                                                            */
/**************************************************************/

#define TV_CreditEvents	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CreditEvents {
   struct {
      unsigned bankruptcyPresent : 1;
      unsigned failureToPayPresent : 1;
      unsigned obligationDefaultPresent : 1;
      unsigned obligationAccelerationPresent : 1;
      unsigned repudiationMoratoriumPresent : 1;
      unsigned restructuringPresent : 1;
      unsigned defaultRequirementPresent : 1;
      unsigned creditEventNoticePresent : 1;
   } m;
   Empty bankruptcy;
   FailureToPay failureToPay;
   Empty obligationDefault;
   Empty obligationAcceleration;
   Empty repudiationMoratorium;
   Restructuring restructuring;
   Money_derivations defaultRequirement;
   CreditEventNotice creditEventNotice;
} CreditEvents;

EXTERN int asn1E_CreditEvents (OSCTXT* pctxt,
   CreditEvents *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CreditEvents (OSCTXT* pctxt, CreditEvents *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CreditEvents (OSCTXT* pctxt, CreditEvents* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CreditEvents (OSCTXT* pctxt, CreditEvents* pvalue);

EXTERN int DOMTest_CreditEvents (OSCTXT* pctxt, CreditEvents* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CreditEvents (CreditEvents* pvalue);

/**************************************************************/
/*                                                            */
/*  ObligationCategoryEnum                                    */
/*                                                            */
/**************************************************************/

#define TV_ObligationCategoryEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ObligationCategoryEnum_bond = 0,
   ObligationCategoryEnum_bondOrLoan = 1,
   ObligationCategoryEnum_borrowedMoney = 2,
   ObligationCategoryEnum_loan = 3,
   ObligationCategoryEnum_payment = 4,
   ObligationCategoryEnum_referenceObligationsOnly = 5
} ObligationCategoryEnum_Root;

typedef OSUINT32 ObligationCategoryEnum;

EXTERN int asn1E_ObligationCategoryEnum (OSCTXT* pctxt,
   ObligationCategoryEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ObligationCategoryEnum (OSCTXT* pctxt, 
   ObligationCategoryEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ObligationCategoryEnum (OSCTXT* pctxt, 
   ObligationCategoryEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ObligationCategoryEnum (OSCTXT* pctxt, 
   ObligationCategoryEnum* pvalue);

EXTERN const OSUTF8CHAR* ObligationCategoryEnum_ToString (OSINT32 value);

EXTERN int ObligationCategoryEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ObligationCategoryEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  SpecifiedCurrency                                         */
/*                                                            */
/**************************************************************/

#define TV_SpecifiedCurrency	(TM_UNIV|TM_CONS|16)

/* List of Currency */
typedef OSRTDList SpecifiedCurrency;

EXTERN int asn1E_SpecifiedCurrency (OSCTXT* pctxt,
   SpecifiedCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SpecifiedCurrency (OSCTXT* pctxt, SpecifiedCurrency *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SpecifiedCurrency (OSCTXT* pctxt, SpecifiedCurrency* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SpecifiedCurrency (OSCTXT* pctxt, SpecifiedCurrency* pvalue)
   ;

EXTERN int DOMTest_SpecifiedCurrency (OSCTXT* pctxt, SpecifiedCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SpecifiedCurrency (SpecifiedCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  NotDomesticCurrency                                       */
/*                                                            */
/**************************************************************/

#define TV_NotDomesticCurrency	(TM_UNIV|TM_CONS|16)

typedef Currency NotDomesticCurrency;

EXTERN int asn1E_NotDomesticCurrency (OSCTXT* pctxt,
   NotDomesticCurrency *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotDomesticCurrency (OSCTXT* pctxt, 
   NotDomesticCurrency *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotDomesticCurrency (OSCTXT* pctxt, 
   NotDomesticCurrency* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotDomesticCurrency (OSCTXT* pctxt, 
   NotDomesticCurrency* pvalue);

EXTERN int DOMTest_NotDomesticCurrency (OSCTXT* pctxt, NotDomesticCurrency* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotDomesticCurrency (NotDomesticCurrency* pvalue);

/**************************************************************/
/*                                                            */
/*  Obligations                                               */
/*                                                            */
/**************************************************************/

#define TV_Obligations	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Obligations {
   struct {
      unsigned notSubordinatedPresent : 1;
      unsigned specifiedCurrencyPresent : 1;
      unsigned notSovereignLenderPresent : 1;
      unsigned notDomesticCurrencyPresent : 1;
      unsigned notDomesticLawPresent : 1;
      unsigned listedPresent : 1;
      unsigned notDomesticIssuancePresent : 1;
      unsigned notContingentPresent : 1;
      unsigned excludedPresent : 1;
      unsigned othReferenceEntityObligationsPresent : 1;
   } m;
   ObligationCategoryEnum category;
   Empty notSubordinated;
   SpecifiedCurrency specifiedCurrency;
   Empty notSovereignLender;
   NotDomesticCurrency notDomesticCurrency;
   Empty notDomesticLaw;
   Empty listed;
   Empty notDomesticIssuance;
   Empty notContingent;
   const OSUTF8CHAR* excluded;
   const OSUTF8CHAR* othReferenceEntityObligations;
} Obligations;

EXTERN int asn1E_Obligations (OSCTXT* pctxt,
   Obligations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Obligations (OSCTXT* pctxt, Obligations *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Obligations (OSCTXT* pctxt, Obligations* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Obligations (OSCTXT* pctxt, Obligations* pvalue);

EXTERN int DOMTest_Obligations (OSCTXT* pctxt, Obligations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Obligations (Obligations* pvalue);

/**************************************************************/
/*                                                            */
/*  ProtectionTerms                                           */
/*                                                            */
/**************************************************************/

#define TV_ProtectionTerms	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ProtectionTerms {
   struct {
      unsigned creditEventsPresent : 1;
      unsigned obligationsPresent : 1;
   } m;
   Money_derivations calculationAmount;
   CreditEvents creditEvents;
   Obligations obligations;
} ProtectionTerms;

EXTERN int asn1E_ProtectionTerms (OSCTXT* pctxt,
   ProtectionTerms *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ProtectionTerms (OSCTXT* pctxt, ProtectionTerms *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ProtectionTerms (OSCTXT* pctxt, ProtectionTerms* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ProtectionTerms (OSCTXT* pctxt, ProtectionTerms* pvalue);

EXTERN int DOMTest_ProtectionTerms (OSCTXT* pctxt, ProtectionTerms* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ProtectionTerms (ProtectionTerms* pvalue);

/**************************************************************/
/*                                                            */
/*  SingleValuationDate                                       */
/*                                                            */
/**************************************************************/

#define TV_SingleValuationDate	(TM_UNIV|TM_CONS|2)

typedef OSUINT32 SingleValuationDate;

EXTERN int asn1E_SingleValuationDate (OSCTXT* pctxt,
   SingleValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SingleValuationDate (OSCTXT* pctxt, 
   SingleValuationDate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SingleValuationDate (OSCTXT* pctxt, 
   SingleValuationDate value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SingleValuationDate (OSCTXT* pctxt, 
   SingleValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  MultipleValuationDates                                    */
/*                                                            */
/**************************************************************/

#define TV_MultipleValuationDates	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MultipleValuationDates {
   struct {
      unsigned businessDaysPresent : 1;
      unsigned businessDaysThereafterPresent : 1;
      unsigned numberValuationDatesPresent : 1;
   } m;
   OSUINT32 businessDays;
   OSUINT32 businessDaysThereafter;
   OSUINT32 numberValuationDates;
} MultipleValuationDates;

EXTERN int asn1E_MultipleValuationDates (OSCTXT* pctxt,
   MultipleValuationDates *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MultipleValuationDates (OSCTXT* pctxt, 
   MultipleValuationDates *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MultipleValuationDates (OSCTXT* pctxt, 
   MultipleValuationDates* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MultipleValuationDates (OSCTXT* pctxt, 
   MultipleValuationDates* pvalue);

EXTERN int DOMTest_MultipleValuationDates (OSCTXT* pctxt, 
   MultipleValuationDates* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MultipleValuationDates (MultipleValuationDates* pvalue);

/**************************************************************/
/*                                                            */
/*  SingleValuationDate_derivations                           */
/*                                                            */
/**************************************************************/

#define TV_SingleValuationDate_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SingleValuationDate_derivations_singleValuationDate 1
#define T_SingleValuationDate_derivations_multipleValuationDates 2

typedef struct EXTERN SingleValuationDate_derivations {
   int t;
   union {
      /* t = 1 */
      SingleValuationDate singleValuationDate;
      /* t = 2 */
      MultipleValuationDates *multipleValuationDates;
   } u;
} SingleValuationDate_derivations;

EXTERN int asn1E_SingleValuationDate_derivations (OSCTXT* pctxt,
   SingleValuationDate_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SingleValuationDate_derivations (OSCTXT* pctxt, 
   SingleValuationDate_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SingleValuationDate_derivations (OSCTXT* pctxt, 
   SingleValuationDate_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SingleValuationDate_derivations (OSCTXT* pctxt, 
   SingleValuationDate_derivations* pvalue);

EXTERN int DOMTest_SingleValuationDate_derivations (OSCTXT* pctxt, 
   SingleValuationDate_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SingleValuationDate_derivations (
   SingleValuationDate_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  ValuationDate                                             */
/*                                                            */
/**************************************************************/

#define TV_ValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ValuationDate_singleValuationDate 1
#define T_ValuationDate_multipleValuationDates 2

typedef struct EXTERN ValuationDate {
   int t;
   union {
      /* t = 1 */
      SingleValuationDate_derivations *singleValuationDate;
      /* t = 2 */
      MultipleValuationDates *multipleValuationDates;
   } u;
} ValuationDate;

EXTERN int asn1E_ValuationDate (OSCTXT* pctxt,
   ValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ValuationDate (OSCTXT* pctxt, ValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ValuationDate (OSCTXT* pctxt, ValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ValuationDate (OSCTXT* pctxt, ValuationDate* pvalue);

EXTERN int DOMTest_ValuationDate (OSCTXT* pctxt, ValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ValuationDate (ValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  ValuationMethodEnum                                       */
/*                                                            */
/**************************************************************/

#define TV_ValuationMethodEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   ValuationMethodEnum_averageBlendedHighest = 0,
   ValuationMethodEnum_averageBlendedMarket = 1,
   ValuationMethodEnum_averageHighest = 2,
   ValuationMethodEnum_averageMarket = 3,
   ValuationMethodEnum_blendedHighest = 4,
   ValuationMethodEnum_blendedMarket = 5,
   ValuationMethodEnum_highest = 6,
   ValuationMethodEnum_market = 7
} ValuationMethodEnum_Root;

typedef OSUINT32 ValuationMethodEnum;

EXTERN int asn1E_ValuationMethodEnum (OSCTXT* pctxt,
   ValuationMethodEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ValuationMethodEnum (OSCTXT* pctxt, 
   ValuationMethodEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ValuationMethodEnum (OSCTXT* pctxt, 
   ValuationMethodEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ValuationMethodEnum (OSCTXT* pctxt, 
   ValuationMethodEnum* pvalue);

EXTERN const OSUTF8CHAR* ValuationMethodEnum_ToString (OSINT32 value);

EXTERN int ValuationMethodEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ValuationMethodEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  CashSettlementTerms                                       */
/*                                                            */
/**************************************************************/

#define TV_CashSettlementTerms	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CashSettlementTerms {
   struct {
      unsigned settlementCurrencyPresent : 1;
      unsigned valuationDatePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned quotationMethodPresent : 1;
      unsigned quotationAmountPresent : 1;
      unsigned minimumQuotationAmountPresent : 1;
      unsigned cashSettlementBusinessDaysPresent : 1;
      unsigned cashSettlementAmountPresent : 1;
      unsigned accruedInterestPresent : 1;
      unsigned valuationMethodPresent : 1;
   } m;
   Currency settlementCurrency;
   ValuationDate valuationDate;
   BusinessCenterTime valuationTime;
   QuotationRateTypeEnum quotationMethod;
   Money_derivations quotationAmount;
   Money_derivations minimumQuotationAmount;
   /* List of const OSUTF8CHAR* */
   OSRTDList dealer_list;
   OSUINT32 cashSettlementBusinessDays;
   Money_derivations cashSettlementAmount;
   OSBOOL accruedInterest;
   ValuationMethodEnum valuationMethod;
} CashSettlementTerms;

EXTERN int asn1E_CashSettlementTerms (OSCTXT* pctxt,
   CashSettlementTerms *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CashSettlementTerms (OSCTXT* pctxt, 
   CashSettlementTerms *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CashSettlementTerms (OSCTXT* pctxt, 
   CashSettlementTerms* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CashSettlementTerms (OSCTXT* pctxt, 
   CashSettlementTerms* pvalue);

EXTERN int DOMTest_CashSettlementTerms (OSCTXT* pctxt, CashSettlementTerms* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CashSettlementTerms (CashSettlementTerms* pvalue);

/**************************************************************/
/*                                                            */
/*  PhysicalSettlementPeriod                                  */
/*                                                            */
/**************************************************************/

#define TV_PhysicalSettlementPeriod	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PhysicalSettlementPeriod_businessDaysNotSpecified 1
#define T_PhysicalSettlementPeriod_businessDays 2
#define T_PhysicalSettlementPeriod_maximumBusinessDays 3

typedef struct EXTERN PhysicalSettlementPeriod {
   int t;
   union {
      /* t = 1 */
      Empty *businessDaysNotSpecified;
      /* t = 2 */
      OSUINT32 businessDays;
      /* t = 3 */
      OSUINT32 maximumBusinessDays;
   } u;
} PhysicalSettlementPeriod;

EXTERN int asn1E_PhysicalSettlementPeriod (OSCTXT* pctxt,
   PhysicalSettlementPeriod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PhysicalSettlementPeriod (OSCTXT* pctxt, 
   PhysicalSettlementPeriod *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PhysicalSettlementPeriod (OSCTXT* pctxt, 
   PhysicalSettlementPeriod* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PhysicalSettlementPeriod (OSCTXT* pctxt, 
   PhysicalSettlementPeriod* pvalue);

EXTERN int DOMTest_PhysicalSettlementPeriod (OSCTXT* pctxt, 
   PhysicalSettlementPeriod* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PhysicalSettlementPeriod (PhysicalSettlementPeriod* pvalue);

/**************************************************************/
/*                                                            */
/*  PCDeliverableObligationCharac                             */
/*                                                            */
/**************************************************************/

#define TV_PCDeliverableObligationCharac	(TM_UNIV|TM_CONS|16)

typedef Empty PCDeliverableObligationCharac;

EXTERN int asn1E_PCDeliverableObligationCharac (OSCTXT* pctxt,
   PCDeliverableObligationCharac *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PCDeliverableObligationCharac (OSCTXT* pctxt, 
   PCDeliverableObligationCharac *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PCDeliverableObligationCharac (OSCTXT* pctxt, 
   PCDeliverableObligationCharac* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PCDeliverableObligationCharac (OSCTXT* pctxt, 
   PCDeliverableObligationCharac* pvalue);

EXTERN int DOMTest_PCDeliverableObligationCharac (OSCTXT* pctxt, 
   PCDeliverableObligationCharac* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PCDeliverableObligationCharac (
   PCDeliverableObligationCharac* pvalue);

/**************************************************************/
/*                                                            */
/*  LoanParticipation                                         */
/*                                                            */
/**************************************************************/

#define TV_LoanParticipation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN LoanParticipation {
   struct {
      unsigned partialCashSettlementPresent : 1;
      unsigned qualifyingParticipationSellerPresent : 1;
   } m;
   Empty partialCashSettlement;
   const OSUTF8CHAR* qualifyingParticipationSeller;
} LoanParticipation;

EXTERN int asn1E_LoanParticipation (OSCTXT* pctxt,
   LoanParticipation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_LoanParticipation (OSCTXT* pctxt, LoanParticipation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_LoanParticipation (OSCTXT* pctxt, LoanParticipation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LoanParticipation (OSCTXT* pctxt, LoanParticipation* pvalue)
   ;

EXTERN int DOMTest_LoanParticipation (OSCTXT* pctxt, LoanParticipation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_LoanParticipation (LoanParticipation* pvalue);

/**************************************************************/
/*                                                            */
/*  PCDeliverableObligationCharac_derivations                 */
/*                                                            */
/**************************************************************/

#define TV_PCDeliverableObligationCharac_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_PCDeliverableObligationCharac_derivations_pCDeliverableObligationCharac 1
#define T_PCDeliverableObligationCharac_derivations_loanParticipation 2

typedef struct EXTERN PCDeliverableObligationCharac_derivations {
   int t;
   union {
      /* t = 1 */
      PCDeliverableObligationCharac *pCDeliverableObligationCharac;
      /* t = 2 */
      LoanParticipation *loanParticipation;
   } u;
} PCDeliverableObligationCharac_derivations;

EXTERN int asn1E_PCDeliverableObligationCharac_derivations (OSCTXT* pctxt,
   PCDeliverableObligationCharac_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PCDeliverableObligationCharac_derivations (OSCTXT* pctxt, 
   PCDeliverableObligationCharac_derivations *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_PCDeliverableObligationCharac_derivations (OSCTXT* pctxt, 
   PCDeliverableObligationCharac_derivations* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PCDeliverableObligationCharac_derivations (OSCTXT* pctxt, 
   PCDeliverableObligationCharac_derivations* pvalue);

EXTERN int DOMTest_PCDeliverableObligationCharac_derivations (OSCTXT* pctxt, 
   PCDeliverableObligationCharac_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PCDeliverableObligationCharac_derivations (
   PCDeliverableObligationCharac_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  DeliverableObligations                                    */
/*                                                            */
/**************************************************************/

#define TV_DeliverableObligations	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DeliverableObligations {
   struct {
      unsigned accruedInterestPresent : 1;
      unsigned notSubordinatedPresent : 1;
      unsigned specifiedCurrencyPresent : 1;
      unsigned notSovereignLenderPresent : 1;
      unsigned notDomesticCurrencyPresent : 1;
      unsigned notDomesticLawPresent : 1;
      unsigned listedPresent : 1;
      unsigned notContingentPresent : 1;
      unsigned notDomesticIssuancePresent : 1;
      unsigned assignableLoanPresent : 1;
      unsigned consentRequiredLoanPresent : 1;
      unsigned directLoanParticipationPresent : 1;
      unsigned transferablePresent : 1;
      unsigned maximumMaturityPresent : 1;
      unsigned acceleratedOrMaturedPresent : 1;
      unsigned notBearerPresent : 1;
      unsigned indirectLoanParticipationPresent : 1;
      unsigned excludedPresent : 1;
      unsigned othReferenceEntityObligationsPresent : 1;
   } m;
   OSBOOL accruedInterest;
   ObligationCategoryEnum category;
   Empty notSubordinated;
   SpecifiedCurrency specifiedCurrency;
   Empty notSovereignLender;
   NotDomesticCurrency notDomesticCurrency;
   Empty notDomesticLaw;
   Empty listed;
   Empty notContingent;
   Empty notDomesticIssuance;
   PCDeliverableObligationCharac_derivations assignableLoan;
   PCDeliverableObligationCharac_derivations consentRequiredLoan;
   LoanParticipation directLoanParticipation;
   Empty transferable;
   Interval_derivations maximumMaturity;
   Empty acceleratedOrMatured;
   Empty notBearer;
   LoanParticipation indirectLoanParticipation;
   const OSUTF8CHAR* excluded;
   const OSUTF8CHAR* othReferenceEntityObligations;
} DeliverableObligations;

EXTERN int asn1E_DeliverableObligations (OSCTXT* pctxt,
   DeliverableObligations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DeliverableObligations (OSCTXT* pctxt, 
   DeliverableObligations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DeliverableObligations (OSCTXT* pctxt, 
   DeliverableObligations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DeliverableObligations (OSCTXT* pctxt, 
   DeliverableObligations* pvalue);

EXTERN int DOMTest_DeliverableObligations (OSCTXT* pctxt, 
   DeliverableObligations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DeliverableObligations (DeliverableObligations* pvalue);

/**************************************************************/
/*                                                            */
/*  PhysicalSettlementTerms                                   */
/*                                                            */
/**************************************************************/

#define TV_PhysicalSettlementTerms	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PhysicalSettlementTerms {
   struct {
      unsigned settlementCurrencyPresent : 1;
      unsigned physicalSettlementPeriodPresent : 1;
      unsigned escrowPresent : 1;
   } m;
   Currency settlementCurrency;
   PhysicalSettlementPeriod physicalSettlementPeriod;
   DeliverableObligations deliverableObligations;
   OSBOOL escrow;
} PhysicalSettlementTerms;

EXTERN int asn1E_PhysicalSettlementTerms (OSCTXT* pctxt,
   PhysicalSettlementTerms *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PhysicalSettlementTerms (OSCTXT* pctxt, 
   PhysicalSettlementTerms *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PhysicalSettlementTerms (OSCTXT* pctxt, 
   PhysicalSettlementTerms* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PhysicalSettlementTerms (OSCTXT* pctxt, 
   PhysicalSettlementTerms* pvalue);

EXTERN int DOMTest_PhysicalSettlementTerms (OSCTXT* pctxt, 
   PhysicalSettlementTerms* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PhysicalSettlementTerms (PhysicalSettlementTerms* pvalue);

/**************************************************************/
/*                                                            */
/*  CreditDefaultSwap_choice                                  */
/*                                                            */
/**************************************************************/

#define TV_CreditDefaultSwap_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_CreditDefaultSwap_choice_cashSettlementTerms 1
#define T_CreditDefaultSwap_choice_physicalSettlementTerms 2

typedef struct EXTERN CreditDefaultSwap_choice {
   int t;
   union {
      /* t = 1 */
      CashSettlementTerms *cashSettlementTerms;
      /* t = 2 */
      PhysicalSettlementTerms *physicalSettlementTerms;
   } u;
} CreditDefaultSwap_choice;

EXTERN int asn1E_CreditDefaultSwap_choice (OSCTXT* pctxt,
   CreditDefaultSwap_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CreditDefaultSwap_choice (OSCTXT* pctxt, 
   CreditDefaultSwap_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CreditDefaultSwap_choice (OSCTXT* pctxt, 
   CreditDefaultSwap_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CreditDefaultSwap_choice (OSCTXT* pctxt, 
   CreditDefaultSwap_choice* pvalue);

EXTERN int DOMTest_CreditDefaultSwap_choice (OSCTXT* pctxt, 
   CreditDefaultSwap_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CreditDefaultSwap_choice (CreditDefaultSwap_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  CreditDefaultSwap                                         */
/*                                                            */
/**************************************************************/

#define TV_CreditDefaultSwap	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CreditDefaultSwap {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
      unsigned choicePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
   GeneralTerms generalTerms;
   FeeLeg feeLeg;
   ProtectionTerms protectionTerms;
   CreditDefaultSwap_choice choice;
} CreditDefaultSwap;

EXTERN int asn1E_CreditDefaultSwap (OSCTXT* pctxt,
   CreditDefaultSwap *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CreditDefaultSwap (OSCTXT* pctxt, CreditDefaultSwap *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CreditDefaultSwap (OSCTXT* pctxt, CreditDefaultSwap* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CreditDefaultSwap (OSCTXT* pctxt, CreditDefaultSwap* pvalue)
   ;

EXTERN int DOMTest_CreditDefaultSwap (OSCTXT* pctxt, CreditDefaultSwap* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CreditDefaultSwap (CreditDefaultSwap* pvalue);

/**************************************************************/
/*                                                            */
/*  Product_group                                             */
/*                                                            */
/**************************************************************/

#define TV_Product_group	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Product_group_strategy        1
#define T_Product_group_fxAverageRateOption 2
#define T_Product_group_fxBarrierOption 3
#define T_Product_group_fxDigitalOption 4
#define T_Product_group_fxSimpleOption  5
#define T_Product_group_fxSingleLeg     6
#define T_Product_group_fxSwap          7
#define T_Product_group_termDeposit     8
#define T_Product_group_bulletPayment   9
#define T_Product_group_capFloor        10
#define T_Product_group_fra             11
#define T_Product_group_swap            12
#define T_Product_group_swaption        13
#define T_Product_group_equityOption    14
#define T_Product_group_equitySwap      15
#define T_Product_group_creditDefaultSwap 16

typedef struct EXTERN Product_group {
   int t;
   union {
      /* t = 1 */
      Strategy *strategy;
      /* t = 2 */
      FxAverageRateOption *fxAverageRateOption;
      /* t = 3 */
      FxBarrierOption *fxBarrierOption;
      /* t = 4 */
      FxDigitalOption *fxDigitalOption;
      /* t = 5 */
      FxSimpleOption *fxSimpleOption;
      /* t = 6 */
      FxSingleLeg *fxSingleLeg;
      /* t = 7 */
      FxSwap *fxSwap;
      /* t = 8 */
      TermDeposit *termDeposit;
      /* t = 9 */
      BulletPayment *bulletPayment;
      /* t = 10 */
      CapFloor *capFloor;
      /* t = 11 */
      Fra *fra;
      /* t = 12 */
      Swap *swap;
      /* t = 13 */
      Swaption *swaption;
      /* t = 14 */
      EquityOption *equityOption;
      /* t = 15 */
      EquitySwap *equitySwap;
      /* t = 16 */
      CreditDefaultSwap *creditDefaultSwap;
   } u;
} Product_group;

EXTERN int asn1E_Product_group (OSCTXT* pctxt,
   Product_group *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Product_group (OSCTXT* pctxt, Product_group *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Product_group (OSCTXT* pctxt, Product_group* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Product_group (OSCTXT* pctxt, Product_group* pvalue);

EXTERN int DOMTest_Product_group (OSCTXT* pctxt, Product_group* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Product_group (Product_group* pvalue);

/**************************************************************/
/*                                                            */
/*  MasterAgreementType                                       */
/*                                                            */
/**************************************************************/

#define TV_MasterAgreementType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MasterAgreementType {
   struct {
      unsigned masterAgreementTypeSchemePresent : 1;
   } m;
   const OSUTF8CHAR* masterAgreementTypeScheme;
   const OSUTF8CHAR* base;
} MasterAgreementType;

EXTERN int asn1E_MasterAgreementType (OSCTXT* pctxt,
   MasterAgreementType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MasterAgreementType (OSCTXT* pctxt, 
   MasterAgreementType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MasterAgreementType (OSCTXT* pctxt, 
   MasterAgreementType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MasterAgreementType (OSCTXT* pctxt, 
   MasterAgreementType* pvalue);

EXTERN int DOMTest_MasterAgreementType (OSCTXT* pctxt, MasterAgreementType* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MasterAgreementType (MasterAgreementType* pvalue);

/**************************************************************/
/*                                                            */
/*  MasterAgreement                                           */
/*                                                            */
/**************************************************************/

#define TV_MasterAgreement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MasterAgreement {
   struct {
      unsigned masterAgreementDatePresent : 1;
   } m;
   MasterAgreementType masterAgreementType;
   const char* masterAgreementDate;
} MasterAgreement;

EXTERN int asn1E_MasterAgreement (OSCTXT* pctxt,
   MasterAgreement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MasterAgreement (OSCTXT* pctxt, MasterAgreement *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MasterAgreement (OSCTXT* pctxt, MasterAgreement* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MasterAgreement (OSCTXT* pctxt, MasterAgreement* pvalue);

EXTERN int DOMTest_MasterAgreement (OSCTXT* pctxt, MasterAgreement* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MasterAgreement (MasterAgreement* pvalue);

/**************************************************************/
/*                                                            */
/*  MasterConfirmationType                                    */
/*                                                            */
/**************************************************************/

#define TV_MasterConfirmationType	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MasterConfirmationType {
   struct {
      unsigned masterConfirmationTypeSchemePresent : 1;
   } m;
   const OSUTF8CHAR* masterConfirmationTypeScheme;
   const OSUTF8CHAR* base;
} MasterConfirmationType;

EXTERN int asn1E_MasterConfirmationType (OSCTXT* pctxt,
   MasterConfirmationType *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MasterConfirmationType (OSCTXT* pctxt, 
   MasterConfirmationType *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MasterConfirmationType (OSCTXT* pctxt, 
   MasterConfirmationType* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MasterConfirmationType (OSCTXT* pctxt, 
   MasterConfirmationType* pvalue);

EXTERN int DOMTest_MasterConfirmationType (OSCTXT* pctxt, 
   MasterConfirmationType* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MasterConfirmationType (MasterConfirmationType* pvalue);

/**************************************************************/
/*                                                            */
/*  MasterConfirmation                                        */
/*                                                            */
/**************************************************************/

#define TV_MasterConfirmation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MasterConfirmation {
   struct {
      unsigned masterConfirmationAnnexDatePresent : 1;
   } m;
   MasterConfirmationType masterConfirmationType;
   const char* masterConfirmationDate;
   const char* masterConfirmationAnnexDate;
} MasterConfirmation;

EXTERN int asn1E_MasterConfirmation (OSCTXT* pctxt,
   MasterConfirmation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MasterConfirmation (OSCTXT* pctxt, 
   MasterConfirmation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MasterConfirmation (OSCTXT* pctxt, 
   MasterConfirmation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MasterConfirmation (OSCTXT* pctxt, 
   MasterConfirmation* pvalue);

EXTERN int DOMTest_MasterConfirmation (OSCTXT* pctxt, MasterConfirmation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MasterConfirmation (MasterConfirmation* pvalue);

/**************************************************************/
/*                                                            */
/*  ContractualDefinitions                                    */
/*                                                            */
/**************************************************************/

#define TV_ContractualDefinitions	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ContractualDefinitions {
   struct {
      unsigned contractualDefinitionsSchemePresent : 1;
   } m;
   const OSUTF8CHAR* contractualDefinitionsScheme;
   const OSUTF8CHAR* base;
} ContractualDefinitions;

EXTERN int asn1E_ContractualDefinitions (OSCTXT* pctxt,
   ContractualDefinitions *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContractualDefinitions (OSCTXT* pctxt, 
   ContractualDefinitions *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContractualDefinitions (OSCTXT* pctxt, 
   ContractualDefinitions* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContractualDefinitions (OSCTXT* pctxt, 
   ContractualDefinitions* pvalue);

EXTERN int DOMTest_ContractualDefinitions (OSCTXT* pctxt, 
   ContractualDefinitions* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ContractualDefinitions (ContractualDefinitions* pvalue);

/**************************************************************/
/*                                                            */
/*  ContractualSupplement                                     */
/*                                                            */
/**************************************************************/

#define TV_ContractualSupplement	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ContractualSupplement {
   struct {
      unsigned contractualSupplementSchemePresent : 1;
   } m;
   const OSUTF8CHAR* contractualSupplementScheme;
   const OSUTF8CHAR* base;
} ContractualSupplement;

EXTERN int asn1E_ContractualSupplement (OSCTXT* pctxt,
   ContractualSupplement *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ContractualSupplement (OSCTXT* pctxt, 
   ContractualSupplement *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ContractualSupplement (OSCTXT* pctxt, 
   ContractualSupplement* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ContractualSupplement (OSCTXT* pctxt, 
   ContractualSupplement* pvalue);

EXTERN int DOMTest_ContractualSupplement (OSCTXT* pctxt, 
   ContractualSupplement* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ContractualSupplement (ContractualSupplement* pvalue);

/**************************************************************/
/*                                                            */
/*  Documentation                                             */
/*                                                            */
/**************************************************************/

#define TV_Documentation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Documentation {
   struct {
      unsigned masterAgreementPresent : 1;
      unsigned masterConfirmationPresent : 1;
      unsigned creditSupportDocumentPresent : 1;
   } m;
   MasterAgreement masterAgreement;
   MasterConfirmation masterConfirmation;
   /* List of ContractualDefinitions */
   OSRTDList contractualDefinitions_list;
   /* List of ContractualSupplement */
   OSRTDList contractualSupplement_list;
   const OSUTF8CHAR* creditSupportDocument;
} Documentation;

EXTERN int asn1E_Documentation (OSCTXT* pctxt,
   Documentation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Documentation (OSCTXT* pctxt, Documentation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Documentation (OSCTXT* pctxt, Documentation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Documentation (OSCTXT* pctxt, Documentation* pvalue);

EXTERN int DOMTest_Documentation (OSCTXT* pctxt, Documentation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Documentation (Documentation* pvalue);

/**************************************************************/
/*                                                            */
/*  GoverningLaw                                              */
/*                                                            */
/**************************************************************/

#define TV_GoverningLaw	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN GoverningLaw {
   struct {
      unsigned governingLawSchemePresent : 1;
   } m;
   const OSUTF8CHAR* governingLawScheme;
   const OSUTF8CHAR* base;
} GoverningLaw;

EXTERN int asn1E_GoverningLaw (OSCTXT* pctxt,
   GoverningLaw *pvalue, ASN1TagType tagging);

EXTERN int asn1D_GoverningLaw (OSCTXT* pctxt, GoverningLaw *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_GoverningLaw (OSCTXT* pctxt, GoverningLaw* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_GoverningLaw (OSCTXT* pctxt, GoverningLaw* pvalue);

EXTERN int DOMTest_GoverningLaw (OSCTXT* pctxt, GoverningLaw* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_GoverningLaw (GoverningLaw* pvalue);

/**************************************************************/
/*                                                            */
/*  Trade                                                     */
/*                                                            */
/**************************************************************/

#define TV_Trade	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Trade {
   struct {
      unsigned idPresent : 1;
      unsigned calculationAgentPresent : 1;
      unsigned calculationAgentBusinessCenterPresent : 1;
      unsigned documentationPresent : 1;
      unsigned governingLawPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   TradeHeader tradeHeader;
   Product_group product;
   /* List of Payment */
   OSRTDList otherPartyPayment_list;
   /* List of PartyReference */
   OSRTDList brokerPartyReference_list;
   CalculationAgent calculationAgent;
   BusinessCenter calculationAgentBusinessCenter;
   Documentation documentation;
   GoverningLaw governingLaw;
} Trade;

EXTERN int asn1E_Trade (OSCTXT* pctxt,
   Trade *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Trade (OSCTXT* pctxt, Trade *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Trade (OSCTXT* pctxt, Trade* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Trade (OSCTXT* pctxt, Trade* pvalue);

EXTERN int DOMTest_Trade (OSCTXT* pctxt, Trade* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Trade (Trade* pvalue);

/**************************************************************/
/*                                                            */
/*  PortfolioName                                             */
/*                                                            */
/**************************************************************/

#define TV_PortfolioName	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PortfolioName {
   struct {
      unsigned idPresent : 1;
      unsigned portfolioNameSchemePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   const OSUTF8CHAR* portfolioNameScheme;
   const OSUTF8CHAR* base;
} PortfolioName;

EXTERN int asn1E_PortfolioName (OSCTXT* pctxt,
   PortfolioName *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PortfolioName (OSCTXT* pctxt, PortfolioName *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_PortfolioName (OSCTXT* pctxt, PortfolioName* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PortfolioName (OSCTXT* pctxt, PortfolioName* pvalue);

EXTERN int DOMTest_PortfolioName (OSCTXT* pctxt, PortfolioName* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PortfolioName (PortfolioName* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyPortfolioName                                        */
/*                                                            */
/**************************************************************/

#define TV_PartyPortfolioName	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyPortfolioName {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PartyReference partyReference;
   /* List of PortfolioName */
   OSRTDList portfolioName_list;
} PartyPortfolioName;

EXTERN int asn1E_PartyPortfolioName (OSCTXT* pctxt,
   PartyPortfolioName *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyPortfolioName (OSCTXT* pctxt, 
   PartyPortfolioName *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_PartyPortfolioName (OSCTXT* pctxt, 
   PartyPortfolioName* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyPortfolioName (OSCTXT* pctxt, 
   PartyPortfolioName* pvalue);

EXTERN int DOMTest_PartyPortfolioName (OSCTXT* pctxt, PartyPortfolioName* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyPortfolioName (PartyPortfolioName* pvalue);

/**************************************************************/
/*                                                            */
/*  Portfolio                                                 */
/*                                                            */
/**************************************************************/

#define TV_Portfolio	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Portfolio {
   struct {
      unsigned idPresent : 1;
      unsigned partyPortfolioNamePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PartyPortfolioName partyPortfolioName;
   /* List of TradeId */
   OSRTDList tradeId_list;
   /* List of Portfolio */
   OSRTDList portfolio_list;
} Portfolio;

EXTERN int asn1E_Portfolio (OSCTXT* pctxt,
   Portfolio *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Portfolio (OSCTXT* pctxt, Portfolio *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Portfolio (OSCTXT* pctxt, Portfolio* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Portfolio (OSCTXT* pctxt, Portfolio* pvalue);

EXTERN int DOMTest_Portfolio (OSCTXT* pctxt, Portfolio* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Portfolio (Portfolio* pvalue);

/**************************************************************/
/*                                                            */
/*  PartyId                                                   */
/*                                                            */
/**************************************************************/

#define TV_PartyId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN PartyId {
   struct {
      unsigned partyIdSchemePresent : 1;
   } m;
   const OSUTF8CHAR* partyIdScheme;
   const OSUTF8CHAR* base;
} PartyId;

EXTERN int asn1E_PartyId (OSCTXT* pctxt,
   PartyId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_PartyId (OSCTXT* pctxt, PartyId *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_PartyId (OSCTXT* pctxt, PartyId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_PartyId (OSCTXT* pctxt, PartyId* pvalue);

EXTERN int DOMTest_PartyId (OSCTXT* pctxt, PartyId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_PartyId (PartyId* pvalue);

/**************************************************************/
/*                                                            */
/*  Party                                                     */
/*                                                            */
/**************************************************************/

#define TV_Party	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Party {
   struct {
      unsigned partyNamePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PartyId partyId;
   const OSUTF8CHAR* partyName;
} Party;

EXTERN int asn1E_Party (OSCTXT* pctxt,
   Party *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Party (OSCTXT* pctxt, Party *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Party (OSCTXT* pctxt, Party* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Party (OSCTXT* pctxt, Party* pvalue);

EXTERN int DOMTest_Party (OSCTXT* pctxt, Party* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Party (Party* pvalue);

/**************************************************************/
/*                                                            */
/*  DataDocument                                              */
/*                                                            */
/**************************************************************/

#define TV_DataDocument	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN DataDocument {
   struct {
      unsigned validation_modelPresent : 1;
   } m;
   DataDocument_version version;
   Validation_model validation_model;
   /* List of Trade */
   OSRTDList trade_list;
   /* List of Portfolio */
   OSRTDList portfolio_list;
   /* List of Party */
   OSRTDList party_list;
} DataDocument;

EXTERN int asn1E_DataDocument (OSCTXT* pctxt,
   DataDocument *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DataDocument (OSCTXT* pctxt, DataDocument *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_DataDocument (OSCTXT* pctxt, DataDocument* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DataDocument (OSCTXT* pctxt, DataDocument* pvalue);

EXTERN int DOMTest_DataDocument (OSCTXT* pctxt, DataDocument* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_DataDocument (DataDocument* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationMessage_version                               */
/*                                                            */
/**************************************************************/

#define TV_NotificationMessage_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_3 = 0
} NotificationMessage_version_Root;

typedef OSUINT32 NotificationMessage_version;

EXTERN int asn1E_NotificationMessage_version (OSCTXT* pctxt,
   NotificationMessage_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotificationMessage_version (OSCTXT* pctxt, 
   NotificationMessage_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotificationMessage_version (OSCTXT* pctxt, 
   NotificationMessage_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotificationMessage_version (OSCTXT* pctxt, 
   NotificationMessage_version* pvalue);

EXTERN const OSUTF8CHAR* NotificationMessage_version_ToString (OSINT32 value);

EXTERN int NotificationMessage_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, NotificationMessage_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ConversationId                                            */
/*                                                            */
/**************************************************************/

#define TV_ConversationId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConversationId {
   const OSUTF8CHAR* conversationIdScheme;
   const OSUTF8CHAR* base;
} ConversationId;

EXTERN int asn1E_ConversationId (OSCTXT* pctxt,
   ConversationId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConversationId (OSCTXT* pctxt, ConversationId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConversationId (OSCTXT* pctxt, ConversationId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConversationId (OSCTXT* pctxt, ConversationId* pvalue);

EXTERN int DOMTest_ConversationId (OSCTXT* pctxt, ConversationId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConversationId (ConversationId* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageId                                                 */
/*                                                            */
/**************************************************************/

#define TV_MessageId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MessageId {
   const OSUTF8CHAR* messageIdScheme;
   const OSUTF8CHAR* base;
} MessageId;

EXTERN int asn1E_MessageId (OSCTXT* pctxt,
   MessageId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageId (OSCTXT* pctxt, MessageId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageId (OSCTXT* pctxt, MessageId* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageId (OSCTXT* pctxt, MessageId* pvalue);

EXTERN int DOMTest_MessageId (OSCTXT* pctxt, MessageId* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageId (MessageId* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationMessageHeader                                 */
/*                                                            */
/**************************************************************/

#define TV_NotificationMessageHeader	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotificationMessageHeader {
   struct {
      unsigned conversationIdPresent : 1;
      unsigned inReplyToPresent : 1;
      unsigned expiryTimestampPresent : 1;
   } m;
   ConversationId conversationId;
   MessageId messageId;
   MessageId inReplyTo;
   PartyId sentBy;
   /* List of PartyId */
   OSRTDList sendTo_list;
   /* List of PartyId */
   OSRTDList copyTo_list;
   const char* creationTimestamp;
   const char* expiryTimestamp;
   /* List of Signature */
   OSRTDList signature_list;
} NotificationMessageHeader;

EXTERN int asn1E_NotificationMessageHeader (OSCTXT* pctxt,
   NotificationMessageHeader *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotificationMessageHeader (OSCTXT* pctxt, 
   NotificationMessageHeader *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotificationMessageHeader (OSCTXT* pctxt, 
   NotificationMessageHeader* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotificationMessageHeader (OSCTXT* pctxt, 
   NotificationMessageHeader* pvalue);

EXTERN int DOMTest_NotificationMessageHeader (OSCTXT* pctxt, 
   NotificationMessageHeader* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotificationMessageHeader (NotificationMessageHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationMessage                                       */
/*                                                            */
/**************************************************************/

#define TV_NotificationMessage	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN NotificationMessage {
   struct {
      unsigned validation_modelPresent : 1;
   } m;
   NotificationMessage_version version;
   NotificationMessageHeader header;
   Validation_model validation_model;
} NotificationMessage;

EXTERN int asn1E_NotificationMessage (OSCTXT* pctxt,
   NotificationMessage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotificationMessage (OSCTXT* pctxt, 
   NotificationMessage *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotificationMessage (OSCTXT* pctxt, 
   NotificationMessage* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotificationMessage (OSCTXT* pctxt, 
   NotificationMessage* pvalue);

EXTERN int DOMTest_NotificationMessage (OSCTXT* pctxt, NotificationMessage* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotificationMessage (NotificationMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageRejected_version                                   */
/*                                                            */
/**************************************************************/

#define TV_MessageRejected_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_4 = 0
} MessageRejected_version_Root;

typedef OSUINT32 MessageRejected_version;

EXTERN int asn1E_MessageRejected_version (OSCTXT* pctxt,
   MessageRejected_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageRejected_version (OSCTXT* pctxt, 
   MessageRejected_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageRejected_version (OSCTXT* pctxt, 
   MessageRejected_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageRejected_version (OSCTXT* pctxt, 
   MessageRejected_version* pvalue);

EXTERN const OSUTF8CHAR* MessageRejected_version_ToString (OSINT32 value);

EXTERN int MessageRejected_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, MessageRejected_version* pvalue);

/**************************************************************/
/*                                                            */
/*  Reason_location                                           */
/*                                                            */
/**************************************************************/

#define TV_Reason_location	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Reason_location {
   struct {
      unsigned locationTypePresent : 1;
   } m;
   const OSUTF8CHAR* locationType;
   const OSUTF8CHAR* base;
} Reason_location;

EXTERN int asn1E_Reason_location (OSCTXT* pctxt,
   Reason_location *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Reason_location (OSCTXT* pctxt, Reason_location *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Reason_location (OSCTXT* pctxt, Reason_location* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Reason_location (OSCTXT* pctxt, Reason_location* pvalue);

EXTERN int DOMTest_Reason_location (OSCTXT* pctxt, Reason_location* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Reason_location (Reason_location* pvalue);

/**************************************************************/
/*                                                            */
/*  Reason_validationRuleId                                   */
/*                                                            */
/**************************************************************/

#define TV_Reason_validationRuleId	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Reason_validationRuleId {
   struct {
      unsigned validationSchemePresent : 1;
   } m;
   const OSUTF8CHAR* validationScheme;
   const OSUTF8CHAR* base;
} Reason_validationRuleId;

EXTERN int asn1E_Reason_validationRuleId (OSCTXT* pctxt,
   Reason_validationRuleId *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Reason_validationRuleId (OSCTXT* pctxt, 
   Reason_validationRuleId *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Reason_validationRuleId (OSCTXT* pctxt, 
   Reason_validationRuleId* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Reason_validationRuleId (OSCTXT* pctxt, 
   Reason_validationRuleId* pvalue);

EXTERN int DOMTest_Reason_validationRuleId (OSCTXT* pctxt, 
   Reason_validationRuleId* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Reason_validationRuleId (Reason_validationRuleId* pvalue);

/**************************************************************/
/*                                                            */
/*  Reason_additionalData                                     */
/*                                                            */
/**************************************************************/

#define TV_Reason_additionalData	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Reason_additionalData {
   struct {
      unsigned additionalDataTypePresent : 1;
   } m;
   const OSUTF8CHAR* additionalDataType;
   const OSUTF8CHAR* base;
} Reason_additionalData;

EXTERN int asn1E_Reason_additionalData (OSCTXT* pctxt,
   Reason_additionalData *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Reason_additionalData (OSCTXT* pctxt, 
   Reason_additionalData *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Reason_additionalData (OSCTXT* pctxt, 
   Reason_additionalData* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Reason_additionalData (OSCTXT* pctxt, 
   Reason_additionalData* pvalue);

EXTERN int DOMTest_Reason_additionalData (OSCTXT* pctxt, 
   Reason_additionalData* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Reason_additionalData (Reason_additionalData* pvalue);

/**************************************************************/
/*                                                            */
/*  Reason                                                    */
/*                                                            */
/**************************************************************/

#define TV_Reason	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Reason {
   struct {
      unsigned locationPresent : 1;
      unsigned descriptionPresent : 1;
      unsigned validationRuleIdPresent : 1;
   } m;
   const OSUTF8CHAR* reasonCode;
   Reason_location location;
   const OSUTF8CHAR* description;
   Reason_validationRuleId validationRuleId;
   /* List of Reason_additionalData */
   OSRTDList additionalData_list;
} Reason;

EXTERN int asn1E_Reason (OSCTXT* pctxt,
   Reason *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Reason (OSCTXT* pctxt, Reason *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Reason (OSCTXT* pctxt, Reason* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Reason (OSCTXT* pctxt, Reason* pvalue);

EXTERN int DOMTest_Reason (OSCTXT* pctxt, Reason* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Reason (Reason* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageRejected                                           */
/*                                                            */
/**************************************************************/

#define TV_MessageRejected	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MessageRejected {
   struct {
      unsigned additionalDataPresent : 1;
   } m;
   MessageRejected_version version;
   /* List of Reason */
   OSRTDList reason_list;
   const OSUTF8CHAR* additionalData;
} MessageRejected;

EXTERN int asn1E_MessageRejected (OSCTXT* pctxt,
   MessageRejected *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageRejected (OSCTXT* pctxt, MessageRejected *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageRejected (OSCTXT* pctxt, MessageRejected* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageRejected (OSCTXT* pctxt, MessageRejected* pvalue);

EXTERN int DOMTest_MessageRejected (OSCTXT* pctxt, MessageRejected* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageRejected (MessageRejected* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAffirmation_version                                  */
/*                                                            */
/**************************************************************/

#define TV_TradeAffirmation_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_12 = 0
} TradeAffirmation_version_Root;

typedef OSUINT32 TradeAffirmation_version;

EXTERN int asn1E_TradeAffirmation_version (OSCTXT* pctxt,
   TradeAffirmation_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAffirmation_version (OSCTXT* pctxt, 
   TradeAffirmation_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAffirmation_version (OSCTXT* pctxt, 
   TradeAffirmation_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAffirmation_version (OSCTXT* pctxt, 
   TradeAffirmation_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAffirmation_version_ToString (OSINT32 value);

EXTERN int TradeAffirmation_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAffirmation_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAffirmation                                          */
/*                                                            */
/**************************************************************/

#define TV_TradeAffirmation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAffirmation {
   TradeAffirmation_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} TradeAffirmation;

EXTERN int asn1E_TradeAffirmation (OSCTXT* pctxt,
   TradeAffirmation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAffirmation (OSCTXT* pctxt, TradeAffirmation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAffirmation (OSCTXT* pctxt, TradeAffirmation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAffirmation (OSCTXT* pctxt, TradeAffirmation* pvalue);

EXTERN int DOMTest_TradeAffirmation (OSCTXT* pctxt, TradeAffirmation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAffirmation (TradeAffirmation* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlleged_version                                      */
/*                                                            */
/**************************************************************/

#define TV_TradeAlleged_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_14 = 0
} TradeAlleged_version_Root;

typedef OSUINT32 TradeAlleged_version;

EXTERN int asn1E_TradeAlleged_version (OSCTXT* pctxt,
   TradeAlleged_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlleged_version (OSCTXT* pctxt, 
   TradeAlleged_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlleged_version (OSCTXT* pctxt, 
   TradeAlleged_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlleged_version (OSCTXT* pctxt, 
   TradeAlleged_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAlleged_version_ToString (OSINT32 value);

EXTERN int TradeAlleged_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAlleged_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeIdentifier                                           */
/*                                                            */
/**************************************************************/

#define TV_TradeIdentifier	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeIdentifier {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
   PartyReference partyReference;
   /* List of TradeId */
   OSRTDList tradeId_list;
} TradeIdentifier;

EXTERN int asn1E_TradeIdentifier (OSCTXT* pctxt,
   TradeIdentifier *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeIdentifier (OSCTXT* pctxt, TradeIdentifier *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeIdentifier (OSCTXT* pctxt, TradeIdentifier* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeIdentifier (OSCTXT* pctxt, TradeIdentifier* pvalue);

EXTERN int DOMTest_TradeIdentifier (OSCTXT* pctxt, TradeIdentifier* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeIdentifier (TradeIdentifier* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeIdentifier_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_TradeIdentifier_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_TradeIdentifier_derivations_tradeIdentifier 1
#define T_TradeIdentifier_derivations_partyTradeIdentifier 2

typedef struct EXTERN TradeIdentifier_derivations {
   int t;
   union {
      /* t = 1 */
      TradeIdentifier *tradeIdentifier;
      /* t = 2 */
      PartyTradeIdentifier *partyTradeIdentifier;
   } u;
} TradeIdentifier_derivations;

EXTERN int asn1E_TradeIdentifier_derivations (OSCTXT* pctxt,
   TradeIdentifier_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeIdentifier_derivations (OSCTXT* pctxt, 
   TradeIdentifier_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeIdentifier_derivations (OSCTXT* pctxt, 
   TradeIdentifier_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeIdentifier_derivations (OSCTXT* pctxt, 
   TradeIdentifier_derivations* pvalue);

EXTERN int DOMTest_TradeIdentifier_derivations (OSCTXT* pctxt, 
   TradeIdentifier_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeIdentifier_derivations (TradeIdentifier_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlleged                                              */
/*                                                            */
/**************************************************************/

#define TV_TradeAlleged	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAlleged {
   TradeAlleged_version version;
   TradeIdentifier_derivations tradeIdentifier;
   /* List of TradeIdentifier_derivations */
   OSRTDList bestFitTradeId_list;
   /* List of Party */
   OSRTDList party_list;
} TradeAlleged;

EXTERN int asn1E_TradeAlleged (OSCTXT* pctxt,
   TradeAlleged *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlleged (OSCTXT* pctxt, TradeAlleged *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlleged (OSCTXT* pctxt, TradeAlleged* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlleged (OSCTXT* pctxt, TradeAlleged* pvalue);

EXTERN int DOMTest_TradeAlleged (OSCTXT* pctxt, TradeAlleged* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAlleged (TradeAlleged* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeConfirmed_version                                    */
/*                                                            */
/**************************************************************/

#define TV_TradeConfirmed_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_17 = 0
} TradeConfirmed_version_Root;

typedef OSUINT32 TradeConfirmed_version;

EXTERN int asn1E_TradeConfirmed_version (OSCTXT* pctxt,
   TradeConfirmed_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeConfirmed_version (OSCTXT* pctxt, 
   TradeConfirmed_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeConfirmed_version (OSCTXT* pctxt, 
   TradeConfirmed_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeConfirmed_version (OSCTXT* pctxt, 
   TradeConfirmed_version* pvalue);

EXTERN const OSUTF8CHAR* TradeConfirmed_version_ToString (OSINT32 value);

EXTERN int TradeConfirmed_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeConfirmed_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeConfirmed                                            */
/*                                                            */
/**************************************************************/

#define TV_TradeConfirmed	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeConfirmed {
   TradeConfirmed_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} TradeConfirmed;

EXTERN int asn1E_TradeConfirmed (OSCTXT* pctxt,
   TradeConfirmed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeConfirmed (OSCTXT* pctxt, TradeConfirmed *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeConfirmed (OSCTXT* pctxt, TradeConfirmed* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeConfirmed (OSCTXT* pctxt, TradeConfirmed* pvalue);

EXTERN int DOMTest_TradeConfirmed (OSCTXT* pctxt, TradeConfirmed* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeConfirmed (TradeConfirmed* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeMatched_version                                      */
/*                                                            */
/**************************************************************/

#define TV_TradeMatched_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_18 = 0
} TradeMatched_version_Root;

typedef OSUINT32 TradeMatched_version;

EXTERN int asn1E_TradeMatched_version (OSCTXT* pctxt,
   TradeMatched_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeMatched_version (OSCTXT* pctxt, 
   TradeMatched_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeMatched_version (OSCTXT* pctxt, 
   TradeMatched_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeMatched_version (OSCTXT* pctxt, 
   TradeMatched_version* pvalue);

EXTERN const OSUTF8CHAR* TradeMatched_version_ToString (OSINT32 value);

EXTERN int TradeMatched_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeMatched_version* pvalue);

/**************************************************************/
/*                                                            */
/*  DifferenceTypeEnum                                        */
/*                                                            */
/**************************************************************/

#define TV_DifferenceTypeEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DifferenceTypeEnum_reference = 0,
   DifferenceTypeEnum_scheme = 1,
   DifferenceTypeEnum_structure = 2,
   DifferenceTypeEnum_value = 3
} DifferenceTypeEnum_Root;

typedef OSUINT32 DifferenceTypeEnum;

EXTERN int asn1E_DifferenceTypeEnum (OSCTXT* pctxt,
   DifferenceTypeEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DifferenceTypeEnum (OSCTXT* pctxt, 
   DifferenceTypeEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DifferenceTypeEnum (OSCTXT* pctxt, DifferenceTypeEnum value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DifferenceTypeEnum (OSCTXT* pctxt, 
   DifferenceTypeEnum* pvalue);

EXTERN const OSUTF8CHAR* DifferenceTypeEnum_ToString (OSINT32 value);

EXTERN int DifferenceTypeEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DifferenceTypeEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  DifferenceSeverityEnum                                    */
/*                                                            */
/**************************************************************/

#define TV_DifferenceSeverityEnum	(TM_UNIV|TM_PRIM|10)

typedef enum {
   DifferenceSeverityEnum_error = 0,
   DifferenceSeverityEnum_warning = 1
} DifferenceSeverityEnum_Root;

typedef OSUINT32 DifferenceSeverityEnum;

EXTERN int asn1E_DifferenceSeverityEnum (OSCTXT* pctxt,
   DifferenceSeverityEnum *pvalue, ASN1TagType tagging);

EXTERN int asn1D_DifferenceSeverityEnum (OSCTXT* pctxt, 
   DifferenceSeverityEnum *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_DifferenceSeverityEnum (OSCTXT* pctxt, 
   DifferenceSeverityEnum value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_DifferenceSeverityEnum (OSCTXT* pctxt, 
   DifferenceSeverityEnum* pvalue);

EXTERN const OSUTF8CHAR* DifferenceSeverityEnum_ToString (OSINT32 value);

EXTERN int DifferenceSeverityEnum_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, DifferenceSeverityEnum* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeDifference                                           */
/*                                                            */
/**************************************************************/

#define TV_TradeDifference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeDifference {
   struct {
      unsigned basePathPresent : 1;
      unsigned baseValuePresent : 1;
      unsigned otherPathPresent : 1;
      unsigned otherValuePresent : 1;
   } m;
   DifferenceTypeEnum differenceType;
   DifferenceSeverityEnum differenceSeverity;
   const OSUTF8CHAR* element;
   const OSUTF8CHAR* basePath;
   const OSUTF8CHAR* baseValue;
   const OSUTF8CHAR* otherPath;
   const OSUTF8CHAR* otherValue;
   /* List of const OSUTF8CHAR* */
   OSRTDList missingElement_list;
   /* List of const OSUTF8CHAR* */
   OSRTDList extraElement_list;
   const OSUTF8CHAR* message;
} TradeDifference;

EXTERN int asn1E_TradeDifference (OSCTXT* pctxt,
   TradeDifference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeDifference (OSCTXT* pctxt, TradeDifference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeDifference (OSCTXT* pctxt, TradeDifference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeDifference (OSCTXT* pctxt, TradeDifference* pvalue);

EXTERN int DOMTest_TradeDifference (OSCTXT* pctxt, TradeDifference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeDifference (TradeDifference* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeMatched                                              */
/*                                                            */
/**************************************************************/

#define TV_TradeMatched	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeMatched {
   TradeMatched_version version;
   /* List of TradeIdentifier_derivations */
   OSRTDList tradeIdentifier_list;
   /* List of TradeDifference */
   OSRTDList differences_list;
   /* List of Party */
   OSRTDList party_list;
} TradeMatched;

EXTERN int asn1E_TradeMatched (OSCTXT* pctxt,
   TradeMatched *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeMatched (OSCTXT* pctxt, TradeMatched *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeMatched (OSCTXT* pctxt, TradeMatched* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeMatched (OSCTXT* pctxt, TradeMatched* pvalue);

EXTERN int DOMTest_TradeMatched (OSCTXT* pctxt, TradeMatched* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeMatched (TradeMatched* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeMismatched_version                                   */
/*                                                            */
/**************************************************************/

#define TV_TradeMismatched_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_19 = 0
} TradeMismatched_version_Root;

typedef OSUINT32 TradeMismatched_version;

EXTERN int asn1E_TradeMismatched_version (OSCTXT* pctxt,
   TradeMismatched_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeMismatched_version (OSCTXT* pctxt, 
   TradeMismatched_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeMismatched_version (OSCTXT* pctxt, 
   TradeMismatched_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeMismatched_version (OSCTXT* pctxt, 
   TradeMismatched_version* pvalue);

EXTERN const OSUTF8CHAR* TradeMismatched_version_ToString (OSINT32 value);

EXTERN int TradeMismatched_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeMismatched_version* pvalue);

/**************************************************************/
/*                                                            */
/*  BestFitTrade                                              */
/*                                                            */
/**************************************************************/

#define TV_BestFitTrade	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN BestFitTrade {
   TradeIdentifier_derivations tradeIdentifier;
   /* List of TradeDifference */
   OSRTDList differences_list;
} BestFitTrade;

EXTERN int asn1E_BestFitTrade (OSCTXT* pctxt,
   BestFitTrade *pvalue, ASN1TagType tagging);

EXTERN int asn1D_BestFitTrade (OSCTXT* pctxt, BestFitTrade *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_BestFitTrade (OSCTXT* pctxt, BestFitTrade* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_BestFitTrade (OSCTXT* pctxt, BestFitTrade* pvalue);

EXTERN int DOMTest_BestFitTrade (OSCTXT* pctxt, BestFitTrade* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_BestFitTrade (BestFitTrade* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeMismatched                                           */
/*                                                            */
/**************************************************************/

#define TV_TradeMismatched	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeMismatched {
   TradeMismatched_version version;
   TradeIdentifier_derivations tradeIdentifier;
   /* List of BestFitTrade */
   OSRTDList bestFitTrade_list;
   /* List of Party */
   OSRTDList party_list;
} TradeMismatched;

EXTERN int asn1E_TradeMismatched (OSCTXT* pctxt,
   TradeMismatched *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeMismatched (OSCTXT* pctxt, TradeMismatched *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeMismatched (OSCTXT* pctxt, TradeMismatched* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeMismatched (OSCTXT* pctxt, TradeMismatched* pvalue);

EXTERN int DOMTest_TradeMismatched (OSCTXT* pctxt, TradeMismatched* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeMismatched (TradeMismatched* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeUnmatched_version                                    */
/*                                                            */
/**************************************************************/

#define TV_TradeUnmatched_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_22 = 0
} TradeUnmatched_version_Root;

typedef OSUINT32 TradeUnmatched_version;

EXTERN int asn1E_TradeUnmatched_version (OSCTXT* pctxt,
   TradeUnmatched_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeUnmatched_version (OSCTXT* pctxt, 
   TradeUnmatched_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeUnmatched_version (OSCTXT* pctxt, 
   TradeUnmatched_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeUnmatched_version (OSCTXT* pctxt, 
   TradeUnmatched_version* pvalue);

EXTERN const OSUTF8CHAR* TradeUnmatched_version_ToString (OSINT32 value);

EXTERN int TradeUnmatched_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeUnmatched_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeUnmatched                                            */
/*                                                            */
/**************************************************************/

#define TV_TradeUnmatched	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeUnmatched {
   TradeUnmatched_version version;
   TradeIdentifier_derivations tradeIdentifier;
   /* List of TradeIdentifier_derivations */
   OSRTDList bestFitTradeId_list;
   /* List of Party */
   OSRTDList party_list;
} TradeUnmatched;

EXTERN int asn1E_TradeUnmatched (OSCTXT* pctxt,
   TradeUnmatched *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeUnmatched (OSCTXT* pctxt, TradeUnmatched *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeUnmatched (OSCTXT* pctxt, TradeUnmatched* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeUnmatched (OSCTXT* pctxt, TradeUnmatched* pvalue);

EXTERN int DOMTest_TradeUnmatched (OSCTXT* pctxt, TradeUnmatched* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeUnmatched (TradeUnmatched* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeCreated_version                                      */
/*                                                            */
/**************************************************************/

#define TV_TradeCreated_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_27 = 0
} TradeCreated_version_Root;

typedef OSUINT32 TradeCreated_version;

EXTERN int asn1E_TradeCreated_version (OSCTXT* pctxt,
   TradeCreated_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeCreated_version (OSCTXT* pctxt, 
   TradeCreated_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeCreated_version (OSCTXT* pctxt, 
   TradeCreated_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeCreated_version (OSCTXT* pctxt, 
   TradeCreated_version* pvalue);

EXTERN const OSUTF8CHAR* TradeCreated_version_ToString (OSINT32 value);

EXTERN int TradeCreated_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeCreated_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeCreated                                              */
/*                                                            */
/**************************************************************/

#define TV_TradeCreated	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeCreated {
   TradeCreated_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} TradeCreated;

EXTERN int asn1E_TradeCreated (OSCTXT* pctxt,
   TradeCreated *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeCreated (OSCTXT* pctxt, TradeCreated *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeCreated (OSCTXT* pctxt, TradeCreated* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeCreated (OSCTXT* pctxt, TradeCreated* pvalue);

EXTERN int DOMTest_TradeCreated (OSCTXT* pctxt, TradeCreated* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeCreated (TradeCreated* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAmended_version                                      */
/*                                                            */
/**************************************************************/

#define TV_TradeAmended_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_28 = 0
} TradeAmended_version_Root;

typedef OSUINT32 TradeAmended_version;

EXTERN int asn1E_TradeAmended_version (OSCTXT* pctxt,
   TradeAmended_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAmended_version (OSCTXT* pctxt, 
   TradeAmended_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAmended_version (OSCTXT* pctxt, 
   TradeAmended_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAmended_version (OSCTXT* pctxt, 
   TradeAmended_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAmended_version_ToString (OSINT32 value);

EXTERN int TradeAmended_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAmended_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAmended                                              */
/*                                                            */
/**************************************************************/

#define TV_TradeAmended	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAmended {
   TradeAmended_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} TradeAmended;

EXTERN int asn1E_TradeAmended (OSCTXT* pctxt,
   TradeAmended *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAmended (OSCTXT* pctxt, TradeAmended *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAmended (OSCTXT* pctxt, TradeAmended* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAmended (OSCTXT* pctxt, TradeAmended* pvalue);

EXTERN int DOMTest_TradeAmended (OSCTXT* pctxt, TradeAmended* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAmended (TradeAmended* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeCancelled_version                                    */
/*                                                            */
/**************************************************************/

#define TV_TradeCancelled_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_29 = 0
} TradeCancelled_version_Root;

typedef OSUINT32 TradeCancelled_version;

EXTERN int asn1E_TradeCancelled_version (OSCTXT* pctxt,
   TradeCancelled_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeCancelled_version (OSCTXT* pctxt, 
   TradeCancelled_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeCancelled_version (OSCTXT* pctxt, 
   TradeCancelled_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeCancelled_version (OSCTXT* pctxt, 
   TradeCancelled_version* pvalue);

EXTERN const OSUTF8CHAR* TradeCancelled_version_ToString (OSINT32 value);

EXTERN int TradeCancelled_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeCancelled_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeCancelled                                            */
/*                                                            */
/**************************************************************/

#define TV_TradeCancelled	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeCancelled {
   TradeCancelled_version version;
   /* List of TradeIdentifier_derivations */
   OSRTDList tradeIdentifier_list;
   /* List of Party */
   OSRTDList party_list;
} TradeCancelled;

EXTERN int asn1E_TradeCancelled (OSCTXT* pctxt,
   TradeCancelled *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeCancelled (OSCTXT* pctxt, TradeCancelled *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeCancelled (OSCTXT* pctxt, TradeCancelled* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeCancelled (OSCTXT* pctxt, TradeCancelled* pvalue);

EXTERN int DOMTest_TradeCancelled (OSCTXT* pctxt, TradeCancelled* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeCancelled (TradeCancelled* pvalue);

/**************************************************************/
/*                                                            */
/*  NotificationMessage_derivations                           */
/*                                                            */
/**************************************************************/

#define TV_NotificationMessage_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_NotificationMessage_derivations_notificationMessage 1
#define T_NotificationMessage_derivations_messageRejected 2
#define T_NotificationMessage_derivations_tradeAffirmation 3
#define T_NotificationMessage_derivations_tradeAlleged 4
#define T_NotificationMessage_derivations_tradeConfirmed 5
#define T_NotificationMessage_derivations_tradeMatched 6
#define T_NotificationMessage_derivations_tradeMismatched 7
#define T_NotificationMessage_derivations_tradeUnmatched 8
#define T_NotificationMessage_derivations_tradeCreated 9
#define T_NotificationMessage_derivations_tradeAmended 10
#define T_NotificationMessage_derivations_tradeCancelled 11

typedef struct EXTERN NotificationMessage_derivations {
   int t;
   union {
      /* t = 1 */
      NotificationMessage *notificationMessage;
      /* t = 2 */
      MessageRejected *messageRejected;
      /* t = 3 */
      TradeAffirmation *tradeAffirmation;
      /* t = 4 */
      TradeAlleged *tradeAlleged;
      /* t = 5 */
      TradeConfirmed *tradeConfirmed;
      /* t = 6 */
      TradeMatched *tradeMatched;
      /* t = 7 */
      TradeMismatched *tradeMismatched;
      /* t = 8 */
      TradeUnmatched *tradeUnmatched;
      /* t = 9 */
      TradeCreated *tradeCreated;
      /* t = 10 */
      TradeAmended *tradeAmended;
      /* t = 11 */
      TradeCancelled *tradeCancelled;
   } u;
} NotificationMessage_derivations;

EXTERN int asn1E_NotificationMessage_derivations (OSCTXT* pctxt,
   NotificationMessage_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_NotificationMessage_derivations (OSCTXT* pctxt, 
   NotificationMessage_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_NotificationMessage_derivations (OSCTXT* pctxt, 
   NotificationMessage_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_NotificationMessage_derivations (OSCTXT* pctxt, 
   NotificationMessage_derivations* pvalue);

EXTERN int DOMTest_NotificationMessage_derivations (OSCTXT* pctxt, 
   NotificationMessage_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_NotificationMessage_derivations (
   NotificationMessage_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyTradeConfirmation_version                           */
/*                                                            */
/**************************************************************/

#define TV_ModifyTradeConfirmation_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_6 = 0
} ModifyTradeConfirmation_version_Root;

typedef OSUINT32 ModifyTradeConfirmation_version;

EXTERN int asn1E_ModifyTradeConfirmation_version (OSCTXT* pctxt,
   ModifyTradeConfirmation_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ModifyTradeConfirmation_version (OSCTXT* pctxt, 
   ModifyTradeConfirmation_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ModifyTradeConfirmation_version (OSCTXT* pctxt, 
   ModifyTradeConfirmation_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ModifyTradeConfirmation_version (OSCTXT* pctxt, 
   ModifyTradeConfirmation_version* pvalue);

EXTERN const OSUTF8CHAR* ModifyTradeConfirmation_version_ToString (OSINT32 value);

EXTERN int ModifyTradeConfirmation_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ModifyTradeConfirmation_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyTradeConfirmation                                   */
/*                                                            */
/**************************************************************/

#define TV_ModifyTradeConfirmation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ModifyTradeConfirmation {
   ModifyTradeConfirmation_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} ModifyTradeConfirmation;

EXTERN int asn1E_ModifyTradeConfirmation (OSCTXT* pctxt,
   ModifyTradeConfirmation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ModifyTradeConfirmation (OSCTXT* pctxt, 
   ModifyTradeConfirmation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ModifyTradeConfirmation (OSCTXT* pctxt, 
   ModifyTradeConfirmation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ModifyTradeConfirmation (OSCTXT* pctxt, 
   ModifyTradeConfirmation* pvalue);

EXTERN int DOMTest_ModifyTradeConfirmation (OSCTXT* pctxt, 
   ModifyTradeConfirmation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ModifyTradeConfirmation (ModifyTradeConfirmation* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyTradeMatch_version                                  */
/*                                                            */
/**************************************************************/

#define TV_ModifyTradeMatch_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_7 = 0
} ModifyTradeMatch_version_Root;

typedef OSUINT32 ModifyTradeMatch_version;

EXTERN int asn1E_ModifyTradeMatch_version (OSCTXT* pctxt,
   ModifyTradeMatch_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ModifyTradeMatch_version (OSCTXT* pctxt, 
   ModifyTradeMatch_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ModifyTradeMatch_version (OSCTXT* pctxt, 
   ModifyTradeMatch_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ModifyTradeMatch_version (OSCTXT* pctxt, 
   ModifyTradeMatch_version* pvalue);

EXTERN const OSUTF8CHAR* ModifyTradeMatch_version_ToString (OSINT32 value);

EXTERN int ModifyTradeMatch_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ModifyTradeMatch_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ModifyTradeMatch                                          */
/*                                                            */
/**************************************************************/

#define TV_ModifyTradeMatch	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ModifyTradeMatch {
   ModifyTradeMatch_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} ModifyTradeMatch;

EXTERN int asn1E_ModifyTradeMatch (OSCTXT* pctxt,
   ModifyTradeMatch *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ModifyTradeMatch (OSCTXT* pctxt, ModifyTradeMatch *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ModifyTradeMatch (OSCTXT* pctxt, ModifyTradeMatch* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ModifyTradeMatch (OSCTXT* pctxt, ModifyTradeMatch* pvalue);

EXTERN int DOMTest_ModifyTradeMatch (OSCTXT* pctxt, ModifyTradeMatch* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ModifyTradeMatch (ModifyTradeMatch* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeConfirmation_version                          */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeConfirmation_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_9 = 0
} RequestTradeConfirmation_version_Root;

typedef OSUINT32 RequestTradeConfirmation_version;

EXTERN int asn1E_RequestTradeConfirmation_version (OSCTXT* pctxt,
   RequestTradeConfirmation_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeConfirmation_version (OSCTXT* pctxt, 
   RequestTradeConfirmation_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeConfirmation_version (OSCTXT* pctxt, 
   RequestTradeConfirmation_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeConfirmation_version (OSCTXT* pctxt, 
   RequestTradeConfirmation_version* pvalue);

EXTERN const OSUTF8CHAR* RequestTradeConfirmation_version_ToString (OSINT32 value);

EXTERN int RequestTradeConfirmation_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestTradeConfirmation_version* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeConfirmation                                  */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeConfirmation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestTradeConfirmation {
   RequestTradeConfirmation_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} RequestTradeConfirmation;

EXTERN int asn1E_RequestTradeConfirmation (OSCTXT* pctxt,
   RequestTradeConfirmation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeConfirmation (OSCTXT* pctxt, 
   RequestTradeConfirmation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeConfirmation (OSCTXT* pctxt, 
   RequestTradeConfirmation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeConfirmation (OSCTXT* pctxt, 
   RequestTradeConfirmation* pvalue);

EXTERN int DOMTest_RequestTradeConfirmation (OSCTXT* pctxt, 
   RequestTradeConfirmation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestTradeConfirmation (RequestTradeConfirmation* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeMatch_version                                 */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeMatch_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_10 = 0
} RequestTradeMatch_version_Root;

typedef OSUINT32 RequestTradeMatch_version;

EXTERN int asn1E_RequestTradeMatch_version (OSCTXT* pctxt,
   RequestTradeMatch_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeMatch_version (OSCTXT* pctxt, 
   RequestTradeMatch_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeMatch_version (OSCTXT* pctxt, 
   RequestTradeMatch_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeMatch_version (OSCTXT* pctxt, 
   RequestTradeMatch_version* pvalue);

EXTERN const OSUTF8CHAR* RequestTradeMatch_version_ToString (OSINT32 value);

EXTERN int RequestTradeMatch_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestTradeMatch_version* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeMatch                                         */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeMatch	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestTradeMatch {
   RequestTradeMatch_version version;
   Trade trade;
   /* List of Party */
   OSRTDList party_list;
} RequestTradeMatch;

EXTERN int asn1E_RequestTradeMatch (OSCTXT* pctxt,
   RequestTradeMatch *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeMatch (OSCTXT* pctxt, RequestTradeMatch *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeMatch (OSCTXT* pctxt, RequestTradeMatch* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeMatch (OSCTXT* pctxt, RequestTradeMatch* pvalue)
   ;

EXTERN int DOMTest_RequestTradeMatch (OSCTXT* pctxt, RequestTradeMatch* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestTradeMatch (RequestTradeMatch* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeStatus_version                                */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeStatus_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_11 = 0
} RequestTradeStatus_version_Root;

typedef OSUINT32 RequestTradeStatus_version;

EXTERN int asn1E_RequestTradeStatus_version (OSCTXT* pctxt,
   RequestTradeStatus_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeStatus_version (OSCTXT* pctxt, 
   RequestTradeStatus_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeStatus_version (OSCTXT* pctxt, 
   RequestTradeStatus_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeStatus_version (OSCTXT* pctxt, 
   RequestTradeStatus_version* pvalue);

EXTERN const OSUTF8CHAR* RequestTradeStatus_version_ToString (OSINT32 value);

EXTERN int RequestTradeStatus_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestTradeStatus_version* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestTradeStatus                                        */
/*                                                            */
/**************************************************************/

#define TV_RequestTradeStatus	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestTradeStatus {
   RequestTradeStatus_version version;
   /* List of TradeIdentifier_derivations */
   OSRTDList tradeIdentifier_list;
   /* List of Party */
   OSRTDList party_list;
} RequestTradeStatus;

EXTERN int asn1E_RequestTradeStatus (OSCTXT* pctxt,
   RequestTradeStatus *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestTradeStatus (OSCTXT* pctxt, 
   RequestTradeStatus *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestTradeStatus (OSCTXT* pctxt, 
   RequestTradeStatus* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestTradeStatus (OSCTXT* pctxt, 
   RequestTradeStatus* pvalue);

EXTERN int DOMTest_RequestTradeStatus (OSCTXT* pctxt, RequestTradeStatus* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestTradeStatus (RequestTradeStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelTradeMatch_version                                  */
/*                                                            */
/**************************************************************/

#define TV_CancelTradeMatch_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_23 = 0
} CancelTradeMatch_version_Root;

typedef OSUINT32 CancelTradeMatch_version;

EXTERN int asn1E_CancelTradeMatch_version (OSCTXT* pctxt,
   CancelTradeMatch_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelTradeMatch_version (OSCTXT* pctxt, 
   CancelTradeMatch_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelTradeMatch_version (OSCTXT* pctxt, 
   CancelTradeMatch_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelTradeMatch_version (OSCTXT* pctxt, 
   CancelTradeMatch_version* pvalue);

EXTERN const OSUTF8CHAR* CancelTradeMatch_version_ToString (OSINT32 value);

EXTERN int CancelTradeMatch_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CancelTradeMatch_version* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelTradeMatch                                          */
/*                                                            */
/**************************************************************/

#define TV_CancelTradeMatch	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CancelTradeMatch {
   CancelTradeMatch_version version;
   PartyTradeIdentifier partyTradeIdentifier;
   Party party;
} CancelTradeMatch;

EXTERN int asn1E_CancelTradeMatch (OSCTXT* pctxt,
   CancelTradeMatch *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelTradeMatch (OSCTXT* pctxt, CancelTradeMatch *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelTradeMatch (OSCTXT* pctxt, CancelTradeMatch* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelTradeMatch (OSCTXT* pctxt, CancelTradeMatch* pvalue);

EXTERN int DOMTest_CancelTradeMatch (OSCTXT* pctxt, CancelTradeMatch* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CancelTradeMatch (CancelTradeMatch* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelTradeConfirmation_version                           */
/*                                                            */
/**************************************************************/

#define TV_CancelTradeConfirmation_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_24 = 0
} CancelTradeConfirmation_version_Root;

typedef OSUINT32 CancelTradeConfirmation_version;

EXTERN int asn1E_CancelTradeConfirmation_version (OSCTXT* pctxt,
   CancelTradeConfirmation_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelTradeConfirmation_version (OSCTXT* pctxt, 
   CancelTradeConfirmation_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelTradeConfirmation_version (OSCTXT* pctxt, 
   CancelTradeConfirmation_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelTradeConfirmation_version (OSCTXT* pctxt, 
   CancelTradeConfirmation_version* pvalue);

EXTERN const OSUTF8CHAR* CancelTradeConfirmation_version_ToString (OSINT32 value);

EXTERN int CancelTradeConfirmation_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, CancelTradeConfirmation_version* pvalue);

/**************************************************************/
/*                                                            */
/*  CancelTradeConfirmation                                   */
/*                                                            */
/**************************************************************/

#define TV_CancelTradeConfirmation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN CancelTradeConfirmation {
   CancelTradeConfirmation_version version;
   PartyTradeIdentifier partyTradeIdentifier;
   Party party;
} CancelTradeConfirmation;

EXTERN int asn1E_CancelTradeConfirmation (OSCTXT* pctxt,
   CancelTradeConfirmation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_CancelTradeConfirmation (OSCTXT* pctxt, 
   CancelTradeConfirmation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_CancelTradeConfirmation (OSCTXT* pctxt, 
   CancelTradeConfirmation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_CancelTradeConfirmation (OSCTXT* pctxt, 
   CancelTradeConfirmation* pvalue);

EXTERN int DOMTest_CancelTradeConfirmation (OSCTXT* pctxt, 
   CancelTradeConfirmation* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_CancelTradeConfirmation (CancelTradeConfirmation* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfirmTrade_version                                      */
/*                                                            */
/**************************************************************/

#define TV_ConfirmTrade_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_26 = 0
} ConfirmTrade_version_Root;

typedef OSUINT32 ConfirmTrade_version;

EXTERN int asn1E_ConfirmTrade_version (OSCTXT* pctxt,
   ConfirmTrade_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfirmTrade_version (OSCTXT* pctxt, 
   ConfirmTrade_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfirmTrade_version (OSCTXT* pctxt, 
   ConfirmTrade_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfirmTrade_version (OSCTXT* pctxt, 
   ConfirmTrade_version* pvalue);

EXTERN const OSUTF8CHAR* ConfirmTrade_version_ToString (OSINT32 value);

EXTERN int ConfirmTrade_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ConfirmTrade_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfirmTrade                                              */
/*                                                            */
/**************************************************************/

#define TV_ConfirmTrade	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConfirmTrade {
   ConfirmTrade_version version;
   PartyTradeIdentifier partyTradeIdentifier;
   Party party;
} ConfirmTrade;

EXTERN int asn1E_ConfirmTrade (OSCTXT* pctxt,
   ConfirmTrade *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfirmTrade (OSCTXT* pctxt, ConfirmTrade *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfirmTrade (OSCTXT* pctxt, ConfirmTrade* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfirmTrade (OSCTXT* pctxt, ConfirmTrade* pvalue);

EXTERN int DOMTest_ConfirmTrade (OSCTXT* pctxt, ConfirmTrade* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConfirmTrade (ConfirmTrade* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestQuote_version                                      */
/*                                                            */
/**************************************************************/

#define TV_RequestQuote_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_30 = 0
} RequestQuote_version_Root;

typedef OSUINT32 RequestQuote_version;

EXTERN int asn1E_RequestQuote_version (OSCTXT* pctxt,
   RequestQuote_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestQuote_version (OSCTXT* pctxt, 
   RequestQuote_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestQuote_version (OSCTXT* pctxt, 
   RequestQuote_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestQuote_version (OSCTXT* pctxt, 
   RequestQuote_version* pvalue);

EXTERN const OSUTF8CHAR* RequestQuote_version_ToString (OSINT32 value);

EXTERN int RequestQuote_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestQuote_version* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableProduct_1                                         */
/*                                                            */
/**************************************************************/

#define TV_QuotableProduct_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuotableProduct_1 {
   struct {
      unsigned productTypePresent : 1;
   } m;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
} QuotableProduct_1;

EXTERN int asn1E_QuotableProduct_1 (OSCTXT* pctxt,
   QuotableProduct_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableProduct_1 (OSCTXT* pctxt, QuotableProduct_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableProduct_1 (OSCTXT* pctxt, QuotableProduct_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableProduct_1 (OSCTXT* pctxt, QuotableProduct_1* pvalue)
   ;

EXTERN int DOMTest_QuotableProduct_1 (OSCTXT* pctxt, QuotableProduct_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableProduct_1 (QuotableProduct_1* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableProduct_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_QuotableProduct_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_QuotableProduct_derivations_quotableProduct 1
#define T_QuotableProduct_derivations_quotableFXLeg 2

typedef struct EXTERN QuotableProduct_derivations {
   int t;
   union {
      /* t = 1 */
      QuotableProduct_1 *quotableProduct;
      /* t = 2 */
      QuotableFXLeg *quotableFXLeg;
   } u;
} QuotableProduct_derivations;

EXTERN int asn1E_QuotableProduct_derivations (OSCTXT* pctxt,
   QuotableProduct_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableProduct_derivations (OSCTXT* pctxt, 
   QuotableProduct_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableProduct_derivations (OSCTXT* pctxt, 
   QuotableProduct_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableProduct_derivations (OSCTXT* pctxt, 
   QuotableProduct_derivations* pvalue);

EXTERN int DOMTest_QuotableProduct_derivations (OSCTXT* pctxt, 
   QuotableProduct_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableProduct_derivations (QuotableProduct_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableProduct                                           */
/*                                                            */
/**************************************************************/

#define TV_QuotableProduct	(TM_UNIV|TM_CONS|0)

typedef QuotableProduct_derivations QuotableProduct;

EXTERN int asn1E_QuotableProduct (OSCTXT* pctxt,
   QuotableProduct *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableProduct (OSCTXT* pctxt, QuotableProduct *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableProduct (OSCTXT* pctxt, QuotableProduct* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableProduct (OSCTXT* pctxt, QuotableProduct* pvalue);

EXTERN int DOMTest_QuotableProduct (OSCTXT* pctxt, QuotableProduct* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableProduct (QuotableProduct* pvalue);

/**************************************************************/
/*                                                            */
/*  QuotableProduct_group                                     */
/*                                                            */
/**************************************************************/

#define TV_QuotableProduct_group	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_QuotableProduct_group_quotableProduct 1
#define T_QuotableProduct_group_quotableFxSingleLeg 2

typedef struct EXTERN QuotableProduct_group {
   int t;
   union {
      /* t = 1 */
      QuotableProduct *quotableProduct;
      /* t = 2 */
      QuotableFxSingleLeg *quotableFxSingleLeg;
   } u;
} QuotableProduct_group;

EXTERN int asn1E_QuotableProduct_group (OSCTXT* pctxt,
   QuotableProduct_group *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuotableProduct_group (OSCTXT* pctxt, 
   QuotableProduct_group *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuotableProduct_group (OSCTXT* pctxt, 
   QuotableProduct_group* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuotableProduct_group (OSCTXT* pctxt, 
   QuotableProduct_group* pvalue);

EXTERN int DOMTest_QuotableProduct_group (OSCTXT* pctxt, 
   QuotableProduct_group* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuotableProduct_group (QuotableProduct_group* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestQuote                                              */
/*                                                            */
/**************************************************************/

#define TV_RequestQuote	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestQuote {
   RequestQuote_version version;
   /* List of QuotableProduct_group */
   OSRTDList quotableProduct_list;
   /* List of Party */
   OSRTDList party_list;
} RequestQuote;

EXTERN int asn1E_RequestQuote (OSCTXT* pctxt,
   RequestQuote *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestQuote (OSCTXT* pctxt, RequestQuote *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestQuote (OSCTXT* pctxt, RequestQuote* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestQuote (OSCTXT* pctxt, RequestQuote* pvalue);

EXTERN int DOMTest_RequestQuote (OSCTXT* pctxt, RequestQuote* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestQuote (RequestQuote* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestMessage_derivations                                */
/*                                                            */
/**************************************************************/

#define TV_RequestMessage_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_RequestMessage_derivations_modifyTradeConfirmation 1
#define T_RequestMessage_derivations_modifyTradeMatch 2
#define T_RequestMessage_derivations_requestTradeConfirmation 3
#define T_RequestMessage_derivations_requestTradeMatch 4
#define T_RequestMessage_derivations_requestTradeStatus 5
#define T_RequestMessage_derivations_cancelTradeMatch 6
#define T_RequestMessage_derivations_cancelTradeConfirmation 7
#define T_RequestMessage_derivations_confirmTrade 8
#define T_RequestMessage_derivations_requestQuote 9

typedef struct EXTERN RequestMessage_derivations {
   int t;
   union {
      /* t = 1 */
      ModifyTradeConfirmation *modifyTradeConfirmation;
      /* t = 2 */
      ModifyTradeMatch *modifyTradeMatch;
      /* t = 3 */
      RequestTradeConfirmation *requestTradeConfirmation;
      /* t = 4 */
      RequestTradeMatch *requestTradeMatch;
      /* t = 5 */
      RequestTradeStatus *requestTradeStatus;
      /* t = 6 */
      CancelTradeMatch *cancelTradeMatch;
      /* t = 7 */
      CancelTradeConfirmation *cancelTradeConfirmation;
      /* t = 8 */
      ConfirmTrade *confirmTrade;
      /* t = 9 */
      RequestQuote *requestQuote;
   } u;
} RequestMessage_derivations;

EXTERN int asn1E_RequestMessage_derivations (OSCTXT* pctxt,
   RequestMessage_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestMessage_derivations (OSCTXT* pctxt, 
   RequestMessage_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestMessage_derivations (OSCTXT* pctxt, 
   RequestMessage_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestMessage_derivations (OSCTXT* pctxt, 
   RequestMessage_derivations* pvalue);

EXTERN int DOMTest_RequestMessage_derivations (OSCTXT* pctxt, 
   RequestMessage_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestMessage_derivations (RequestMessage_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  ResponseMessage_version                                   */
/*                                                            */
/**************************************************************/

#define TV_ResponseMessage_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_8 = 0
} ResponseMessage_version_Root;

typedef OSUINT32 ResponseMessage_version;

EXTERN int asn1E_ResponseMessage_version (OSCTXT* pctxt,
   ResponseMessage_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResponseMessage_version (OSCTXT* pctxt, 
   ResponseMessage_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResponseMessage_version (OSCTXT* pctxt, 
   ResponseMessage_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResponseMessage_version (OSCTXT* pctxt, 
   ResponseMessage_version* pvalue);

EXTERN const OSUTF8CHAR* ResponseMessage_version_ToString (OSINT32 value);

EXTERN int ResponseMessage_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ResponseMessage_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ResponseMessageHeader                                     */
/*                                                            */
/**************************************************************/

#define TV_ResponseMessageHeader	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ResponseMessageHeader {
   struct {
      unsigned conversationIdPresent : 1;
      unsigned expiryTimestampPresent : 1;
   } m;
   ConversationId conversationId;
   MessageId messageId;
   MessageId inReplyTo;
   PartyId sentBy;
   /* List of PartyId */
   OSRTDList sendTo_list;
   /* List of PartyId */
   OSRTDList copyTo_list;
   const char* creationTimestamp;
   const char* expiryTimestamp;
   /* List of Signature */
   OSRTDList signature_list;
} ResponseMessageHeader;

EXTERN int asn1E_ResponseMessageHeader (OSCTXT* pctxt,
   ResponseMessageHeader *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResponseMessageHeader (OSCTXT* pctxt, 
   ResponseMessageHeader *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResponseMessageHeader (OSCTXT* pctxt, 
   ResponseMessageHeader* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResponseMessageHeader (OSCTXT* pctxt, 
   ResponseMessageHeader* pvalue);

EXTERN int DOMTest_ResponseMessageHeader (OSCTXT* pctxt, 
   ResponseMessageHeader* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResponseMessageHeader (ResponseMessageHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  ResponseMessage                                           */
/*                                                            */
/**************************************************************/

#define TV_ResponseMessage	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ResponseMessage {
   struct {
      unsigned validation_modelPresent : 1;
   } m;
   ResponseMessage_version version;
   ResponseMessageHeader header;
   Validation_model validation_model;
} ResponseMessage;

EXTERN int asn1E_ResponseMessage (OSCTXT* pctxt,
   ResponseMessage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResponseMessage (OSCTXT* pctxt, ResponseMessage *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResponseMessage (OSCTXT* pctxt, ResponseMessage* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResponseMessage (OSCTXT* pctxt, ResponseMessage* pvalue);

EXTERN int DOMTest_ResponseMessage (OSCTXT* pctxt, ResponseMessage* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResponseMessage (ResponseMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAffirmed_version                                     */
/*                                                            */
/**************************************************************/

#define TV_TradeAffirmed_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_13 = 0
} TradeAffirmed_version_Root;

typedef OSUINT32 TradeAffirmed_version;

EXTERN int asn1E_TradeAffirmed_version (OSCTXT* pctxt,
   TradeAffirmed_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAffirmed_version (OSCTXT* pctxt, 
   TradeAffirmed_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAffirmed_version (OSCTXT* pctxt, 
   TradeAffirmed_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAffirmed_version (OSCTXT* pctxt, 
   TradeAffirmed_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAffirmed_version_ToString (OSINT32 value);

EXTERN int TradeAffirmed_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAffirmed_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAffirmed                                             */
/*                                                            */
/**************************************************************/

#define TV_TradeAffirmed	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAffirmed {
   TradeAffirmed_version version;
   /* List of TradeIdentifier_derivations */
   OSRTDList tradeIdentifier_list;
   /* List of Party */
   OSRTDList party_list;
} TradeAffirmed;

EXTERN int asn1E_TradeAffirmed (OSCTXT* pctxt,
   TradeAffirmed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAffirmed (OSCTXT* pctxt, TradeAffirmed *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAffirmed (OSCTXT* pctxt, TradeAffirmed* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAffirmed (OSCTXT* pctxt, TradeAffirmed* pvalue);

EXTERN int DOMTest_TradeAffirmed (OSCTXT* pctxt, TradeAffirmed* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAffirmed (TradeAffirmed* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlreadyMatched_version                               */
/*                                                            */
/**************************************************************/

#define TV_TradeAlreadyMatched_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_15 = 0
} TradeAlreadyMatched_version_Root;

typedef OSUINT32 TradeAlreadyMatched_version;

EXTERN int asn1E_TradeAlreadyMatched_version (OSCTXT* pctxt,
   TradeAlreadyMatched_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlreadyMatched_version (OSCTXT* pctxt, 
   TradeAlreadyMatched_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlreadyMatched_version (OSCTXT* pctxt, 
   TradeAlreadyMatched_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlreadyMatched_version (OSCTXT* pctxt, 
   TradeAlreadyMatched_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAlreadyMatched_version_ToString (OSINT32 value);

EXTERN int TradeAlreadyMatched_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAlreadyMatched_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlreadyMatched                                       */
/*                                                            */
/**************************************************************/

#define TV_TradeAlreadyMatched	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAlreadyMatched {
   TradeAlreadyMatched_version version;
   TradeIdentifier_derivations tradeIdentifier;
   Party party;
} TradeAlreadyMatched;

EXTERN int asn1E_TradeAlreadyMatched (OSCTXT* pctxt,
   TradeAlreadyMatched *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlreadyMatched (OSCTXT* pctxt, 
   TradeAlreadyMatched *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlreadyMatched (OSCTXT* pctxt, 
   TradeAlreadyMatched* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlreadyMatched (OSCTXT* pctxt, 
   TradeAlreadyMatched* pvalue);

EXTERN int DOMTest_TradeAlreadyMatched (OSCTXT* pctxt, TradeAlreadyMatched* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAlreadyMatched (TradeAlreadyMatched* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlreadySubmitted_version                             */
/*                                                            */
/**************************************************************/

#define TV_TradeAlreadySubmitted_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_16 = 0
} TradeAlreadySubmitted_version_Root;

typedef OSUINT32 TradeAlreadySubmitted_version;

EXTERN int asn1E_TradeAlreadySubmitted_version (OSCTXT* pctxt,
   TradeAlreadySubmitted_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlreadySubmitted_version (OSCTXT* pctxt, 
   TradeAlreadySubmitted_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlreadySubmitted_version (OSCTXT* pctxt, 
   TradeAlreadySubmitted_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlreadySubmitted_version (OSCTXT* pctxt, 
   TradeAlreadySubmitted_version* pvalue);

EXTERN const OSUTF8CHAR* TradeAlreadySubmitted_version_ToString (OSINT32 value);

EXTERN int TradeAlreadySubmitted_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeAlreadySubmitted_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeAlreadySubmitted                                     */
/*                                                            */
/**************************************************************/

#define TV_TradeAlreadySubmitted	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeAlreadySubmitted {
   TradeAlreadySubmitted_version version;
   TradeIdentifier_derivations tradeIdentifier;
   Party party;
} TradeAlreadySubmitted;

EXTERN int asn1E_TradeAlreadySubmitted (OSCTXT* pctxt,
   TradeAlreadySubmitted *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeAlreadySubmitted (OSCTXT* pctxt, 
   TradeAlreadySubmitted *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeAlreadySubmitted (OSCTXT* pctxt, 
   TradeAlreadySubmitted* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeAlreadySubmitted (OSCTXT* pctxt, 
   TradeAlreadySubmitted* pvalue);

EXTERN int DOMTest_TradeAlreadySubmitted (OSCTXT* pctxt, 
   TradeAlreadySubmitted* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeAlreadySubmitted (TradeAlreadySubmitted* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeNotFound_version                                     */
/*                                                            */
/**************************************************************/

#define TV_TradeNotFound_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_20 = 0
} TradeNotFound_version_Root;

typedef OSUINT32 TradeNotFound_version;

EXTERN int asn1E_TradeNotFound_version (OSCTXT* pctxt,
   TradeNotFound_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeNotFound_version (OSCTXT* pctxt, 
   TradeNotFound_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeNotFound_version (OSCTXT* pctxt, 
   TradeNotFound_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeNotFound_version (OSCTXT* pctxt, 
   TradeNotFound_version* pvalue);

EXTERN const OSUTF8CHAR* TradeNotFound_version_ToString (OSINT32 value);

EXTERN int TradeNotFound_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeNotFound_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeNotFound                                             */
/*                                                            */
/**************************************************************/

#define TV_TradeNotFound	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeNotFound {
   TradeNotFound_version version;
   TradeIdentifier_derivations tradeIdentifier;
   Party party;
} TradeNotFound;

EXTERN int asn1E_TradeNotFound (OSCTXT* pctxt,
   TradeNotFound *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeNotFound (OSCTXT* pctxt, TradeNotFound *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeNotFound (OSCTXT* pctxt, TradeNotFound* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeNotFound (OSCTXT* pctxt, TradeNotFound* pvalue);

EXTERN int DOMTest_TradeNotFound (OSCTXT* pctxt, TradeNotFound* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeNotFound (TradeNotFound* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeStatus_version                                       */
/*                                                            */
/**************************************************************/

#define TV_TradeStatus_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_21 = 0
} TradeStatus_version_Root;

typedef OSUINT32 TradeStatus_version;

EXTERN int asn1E_TradeStatus_version (OSCTXT* pctxt,
   TradeStatus_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeStatus_version (OSCTXT* pctxt, 
   TradeStatus_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeStatus_version (OSCTXT* pctxt, 
   TradeStatus_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeStatus_version (OSCTXT* pctxt, 
   TradeStatus_version* pvalue);

EXTERN const OSUTF8CHAR* TradeStatus_version_ToString (OSINT32 value);

EXTERN int TradeStatus_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, TradeStatus_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeStatusValue                                          */
/*                                                            */
/**************************************************************/

#define TV_TradeStatusValue	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeStatusValue {
   struct {
      unsigned tradeStatusSchemePresent : 1;
   } m;
   const OSUTF8CHAR* tradeStatusScheme;
   const OSUTF8CHAR* base;
} TradeStatusValue;

EXTERN int asn1E_TradeStatusValue (OSCTXT* pctxt,
   TradeStatusValue *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeStatusValue (OSCTXT* pctxt, TradeStatusValue *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeStatusValue (OSCTXT* pctxt, TradeStatusValue* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeStatusValue (OSCTXT* pctxt, TradeStatusValue* pvalue);

EXTERN int DOMTest_TradeStatusValue (OSCTXT* pctxt, TradeStatusValue* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeStatusValue (TradeStatusValue* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeStatusItem                                           */
/*                                                            */
/**************************************************************/

#define TV_TradeStatusItem	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeStatusItem {
   TradeIdentifier_derivations tradeIdentifier;
   TradeStatusValue tradeStatusValue;
} TradeStatusItem;

EXTERN int asn1E_TradeStatusItem (OSCTXT* pctxt,
   TradeStatusItem *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeStatusItem (OSCTXT* pctxt, TradeStatusItem *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeStatusItem (OSCTXT* pctxt, TradeStatusItem* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeStatusItem (OSCTXT* pctxt, TradeStatusItem* pvalue);

EXTERN int DOMTest_TradeStatusItem (OSCTXT* pctxt, TradeStatusItem* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeStatusItem (TradeStatusItem* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeStatus                                               */
/*                                                            */
/**************************************************************/

#define TV_TradeStatus	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeStatus {
   TradeStatus_version version;
   /* List of TradeStatusItem */
   OSRTDList tradeStatusItem_list;
   /* List of Party */
   OSRTDList party_list;
} TradeStatus;

EXTERN int asn1E_TradeStatus (OSCTXT* pctxt,
   TradeStatus *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeStatus (OSCTXT* pctxt, TradeStatus *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeStatus (OSCTXT* pctxt, TradeStatus* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeStatus (OSCTXT* pctxt, TradeStatus* pvalue);

EXTERN int DOMTest_TradeStatus (OSCTXT* pctxt, TradeStatus* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeStatus (TradeStatus* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfirmationCancelled_version                             */
/*                                                            */
/**************************************************************/

#define TV_ConfirmationCancelled_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_25 = 0
} ConfirmationCancelled_version_Root;

typedef OSUINT32 ConfirmationCancelled_version;

EXTERN int asn1E_ConfirmationCancelled_version (OSCTXT* pctxt,
   ConfirmationCancelled_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfirmationCancelled_version (OSCTXT* pctxt, 
   ConfirmationCancelled_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfirmationCancelled_version (OSCTXT* pctxt, 
   ConfirmationCancelled_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfirmationCancelled_version (OSCTXT* pctxt, 
   ConfirmationCancelled_version* pvalue);

EXTERN const OSUTF8CHAR* ConfirmationCancelled_version_ToString (OSINT32 value);

EXTERN int ConfirmationCancelled_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, ConfirmationCancelled_version* pvalue);

/**************************************************************/
/*                                                            */
/*  ConfirmationCancelled                                     */
/*                                                            */
/**************************************************************/

#define TV_ConfirmationCancelled	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN ConfirmationCancelled {
   ConfirmationCancelled_version version;
   TradeIdentifier_derivations tradeIdentifier;
   Party party;
} ConfirmationCancelled;

EXTERN int asn1E_ConfirmationCancelled (OSCTXT* pctxt,
   ConfirmationCancelled *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ConfirmationCancelled (OSCTXT* pctxt, 
   ConfirmationCancelled *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ConfirmationCancelled (OSCTXT* pctxt, 
   ConfirmationCancelled* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ConfirmationCancelled (OSCTXT* pctxt, 
   ConfirmationCancelled* pvalue);

EXTERN int DOMTest_ConfirmationCancelled (OSCTXT* pctxt, 
   ConfirmationCancelled* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ConfirmationCancelled (ConfirmationCancelled* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestQuoteResponse_version                              */
/*                                                            */
/**************************************************************/

#define TV_RequestQuoteResponse_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_31 = 0
} RequestQuoteResponse_version_Root;

typedef OSUINT32 RequestQuoteResponse_version;

EXTERN int asn1E_RequestQuoteResponse_version (OSCTXT* pctxt,
   RequestQuoteResponse_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestQuoteResponse_version (OSCTXT* pctxt, 
   RequestQuoteResponse_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestQuoteResponse_version (OSCTXT* pctxt, 
   RequestQuoteResponse_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestQuoteResponse_version (OSCTXT* pctxt, 
   RequestQuoteResponse_version* pvalue);

EXTERN const OSUTF8CHAR* RequestQuoteResponse_version_ToString (OSINT32 value);

EXTERN int RequestQuoteResponse_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestQuoteResponse_version* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestQuoteResponse                                      */
/*                                                            */
/**************************************************************/

#define TV_RequestQuoteResponse	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestQuoteResponse {
   RequestQuoteResponse_version version;
   /* List of Product_group */
   OSRTDList product_list;
   /* List of Party */
   OSRTDList party_list;
} RequestQuoteResponse;

EXTERN int asn1E_RequestQuoteResponse (OSCTXT* pctxt,
   RequestQuoteResponse *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestQuoteResponse (OSCTXT* pctxt, 
   RequestQuoteResponse *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestQuoteResponse (OSCTXT* pctxt, 
   RequestQuoteResponse* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestQuoteResponse (OSCTXT* pctxt, 
   RequestQuoteResponse* pvalue);

EXTERN int DOMTest_RequestQuoteResponse (OSCTXT* pctxt, RequestQuoteResponse* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestQuoteResponse (RequestQuoteResponse* pvalue);

/**************************************************************/
/*                                                            */
/*  AcceptQuote_version                                       */
/*                                                            */
/**************************************************************/

#define TV_AcceptQuote_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_32 = 0
} AcceptQuote_version_Root;

typedef OSUINT32 AcceptQuote_version;

EXTERN int asn1E_AcceptQuote_version (OSCTXT* pctxt,
   AcceptQuote_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AcceptQuote_version (OSCTXT* pctxt, 
   AcceptQuote_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_AcceptQuote_version (OSCTXT* pctxt, 
   AcceptQuote_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AcceptQuote_version (OSCTXT* pctxt, 
   AcceptQuote_version* pvalue);

EXTERN const OSUTF8CHAR* AcceptQuote_version_ToString (OSINT32 value);

EXTERN int AcceptQuote_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, AcceptQuote_version* pvalue);

/**************************************************************/
/*                                                            */
/*  AcceptQuote                                               */
/*                                                            */
/**************************************************************/

#define TV_AcceptQuote	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN AcceptQuote {
   AcceptQuote_version version;
   /* List of Trade */
   OSRTDList trade_list;
   /* List of Party */
   OSRTDList party_list;
} AcceptQuote;

EXTERN int asn1E_AcceptQuote (OSCTXT* pctxt,
   AcceptQuote *pvalue, ASN1TagType tagging);

EXTERN int asn1D_AcceptQuote (OSCTXT* pctxt, AcceptQuote *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_AcceptQuote (OSCTXT* pctxt, AcceptQuote* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_AcceptQuote (OSCTXT* pctxt, AcceptQuote* pvalue);

EXTERN int DOMTest_AcceptQuote (OSCTXT* pctxt, AcceptQuote* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_AcceptQuote (AcceptQuote* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteAcceptanceConfirmed_version                          */
/*                                                            */
/**************************************************************/

#define TV_QuoteAcceptanceConfirmed_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_33 = 0
} QuoteAcceptanceConfirmed_version_Root;

typedef OSUINT32 QuoteAcceptanceConfirmed_version;

EXTERN int asn1E_QuoteAcceptanceConfirmed_version (OSCTXT* pctxt,
   QuoteAcceptanceConfirmed_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteAcceptanceConfirmed_version (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteAcceptanceConfirmed_version (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteAcceptanceConfirmed_version (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed_version* pvalue);

EXTERN const OSUTF8CHAR* QuoteAcceptanceConfirmed_version_ToString (OSINT32 value);

EXTERN int QuoteAcceptanceConfirmed_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QuoteAcceptanceConfirmed_version* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteAcceptanceConfirmed                                  */
/*                                                            */
/**************************************************************/

#define TV_QuoteAcceptanceConfirmed	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuoteAcceptanceConfirmed {
   QuoteAcceptanceConfirmed_version version;
   /* List of Trade */
   OSRTDList trade_list;
   /* List of Party */
   OSRTDList party_list;
} QuoteAcceptanceConfirmed;

EXTERN int asn1E_QuoteAcceptanceConfirmed (OSCTXT* pctxt,
   QuoteAcceptanceConfirmed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteAcceptanceConfirmed (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteAcceptanceConfirmed (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteAcceptanceConfirmed (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed* pvalue);

EXTERN int DOMTest_QuoteAcceptanceConfirmed (OSCTXT* pctxt, 
   QuoteAcceptanceConfirmed* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuoteAcceptanceConfirmed (QuoteAcceptanceConfirmed* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteUpdated_version                                      */
/*                                                            */
/**************************************************************/

#define TV_QuoteUpdated_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_34 = 0
} QuoteUpdated_version_Root;

typedef OSUINT32 QuoteUpdated_version;

EXTERN int asn1E_QuoteUpdated_version (OSCTXT* pctxt,
   QuoteUpdated_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteUpdated_version (OSCTXT* pctxt, 
   QuoteUpdated_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteUpdated_version (OSCTXT* pctxt, 
   QuoteUpdated_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteUpdated_version (OSCTXT* pctxt, 
   QuoteUpdated_version* pvalue);

EXTERN const OSUTF8CHAR* QuoteUpdated_version_ToString (OSINT32 value);

EXTERN int QuoteUpdated_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QuoteUpdated_version* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteUpdated                                              */
/*                                                            */
/**************************************************************/

#define TV_QuoteUpdated	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuoteUpdated {
   QuoteUpdated_version version;
   /* List of QuotableProduct_group */
   OSRTDList quotableProduct_list;
   /* List of Party */
   OSRTDList party_list;
} QuoteUpdated;

EXTERN int asn1E_QuoteUpdated (OSCTXT* pctxt,
   QuoteUpdated *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteUpdated (OSCTXT* pctxt, QuoteUpdated *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteUpdated (OSCTXT* pctxt, QuoteUpdated* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteUpdated (OSCTXT* pctxt, QuoteUpdated* pvalue);

EXTERN int DOMTest_QuoteUpdated (OSCTXT* pctxt, QuoteUpdated* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuoteUpdated (QuoteUpdated* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteAlreadyExpired_version                               */
/*                                                            */
/**************************************************************/

#define TV_QuoteAlreadyExpired_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_35 = 0
} QuoteAlreadyExpired_version_Root;

typedef OSUINT32 QuoteAlreadyExpired_version;

EXTERN int asn1E_QuoteAlreadyExpired_version (OSCTXT* pctxt,
   QuoteAlreadyExpired_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteAlreadyExpired_version (OSCTXT* pctxt, 
   QuoteAlreadyExpired_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteAlreadyExpired_version (OSCTXT* pctxt, 
   QuoteAlreadyExpired_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteAlreadyExpired_version (OSCTXT* pctxt, 
   QuoteAlreadyExpired_version* pvalue);

EXTERN const OSUTF8CHAR* QuoteAlreadyExpired_version_ToString (OSINT32 value);

EXTERN int QuoteAlreadyExpired_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, QuoteAlreadyExpired_version* pvalue);

/**************************************************************/
/*                                                            */
/*  QuoteAlreadyExpired                                       */
/*                                                            */
/**************************************************************/

#define TV_QuoteAlreadyExpired	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN QuoteAlreadyExpired {
   QuoteAlreadyExpired_version version;
} QuoteAlreadyExpired;

EXTERN int asn1E_QuoteAlreadyExpired (OSCTXT* pctxt,
   QuoteAlreadyExpired *pvalue, ASN1TagType tagging);

EXTERN int asn1D_QuoteAlreadyExpired (OSCTXT* pctxt, 
   QuoteAlreadyExpired *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_QuoteAlreadyExpired (OSCTXT* pctxt, 
   QuoteAlreadyExpired* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_QuoteAlreadyExpired (OSCTXT* pctxt, 
   QuoteAlreadyExpired* pvalue);

EXTERN int DOMTest_QuoteAlreadyExpired (OSCTXT* pctxt, QuoteAlreadyExpired* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_QuoteAlreadyExpired (QuoteAlreadyExpired* pvalue);

/**************************************************************/
/*                                                            */
/*  ResponseMessage_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_ResponseMessage_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_ResponseMessage_derivations_responseMessage 1
#define T_ResponseMessage_derivations_tradeAffirmed 2
#define T_ResponseMessage_derivations_tradeAlreadyMatched 3
#define T_ResponseMessage_derivations_tradeAlreadySubmitted 4
#define T_ResponseMessage_derivations_tradeNotFound 5
#define T_ResponseMessage_derivations_tradeStatus 6
#define T_ResponseMessage_derivations_confirmationCancelled 7
#define T_ResponseMessage_derivations_requestQuoteResponse 8
#define T_ResponseMessage_derivations_acceptQuote 9
#define T_ResponseMessage_derivations_quoteAcceptanceConfirmed 10
#define T_ResponseMessage_derivations_quoteUpdated 11
#define T_ResponseMessage_derivations_quoteAlreadyExpired 12

typedef struct EXTERN ResponseMessage_derivations {
   int t;
   union {
      /* t = 1 */
      ResponseMessage *responseMessage;
      /* t = 2 */
      TradeAffirmed *tradeAffirmed;
      /* t = 3 */
      TradeAlreadyMatched *tradeAlreadyMatched;
      /* t = 4 */
      TradeAlreadySubmitted *tradeAlreadySubmitted;
      /* t = 5 */
      TradeNotFound *tradeNotFound;
      /* t = 6 */
      TradeStatus *tradeStatus;
      /* t = 7 */
      ConfirmationCancelled *confirmationCancelled;
      /* t = 8 */
      RequestQuoteResponse *requestQuoteResponse;
      /* t = 9 */
      AcceptQuote *acceptQuote;
      /* t = 10 */
      QuoteAcceptanceConfirmed *quoteAcceptanceConfirmed;
      /* t = 11 */
      QuoteUpdated *quoteUpdated;
      /* t = 12 */
      QuoteAlreadyExpired *quoteAlreadyExpired;
   } u;
} ResponseMessage_derivations;

EXTERN int asn1E_ResponseMessage_derivations (OSCTXT* pctxt,
   ResponseMessage_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_ResponseMessage_derivations (OSCTXT* pctxt, 
   ResponseMessage_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_ResponseMessage_derivations (OSCTXT* pctxt, 
   ResponseMessage_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ResponseMessage_derivations (OSCTXT* pctxt, 
   ResponseMessage_derivations* pvalue);

EXTERN int DOMTest_ResponseMessage_derivations (OSCTXT* pctxt, 
   ResponseMessage_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_ResponseMessage_derivations (ResponseMessage_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Message_derivations                                       */
/*                                                            */
/**************************************************************/

#define TV_Message_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Message_derivations_notificationMessage 1
#define T_Message_derivations_requestMessage 2
#define T_Message_derivations_responseMessage 3

typedef struct EXTERN Message_derivations {
   int t;
   union {
      /* t = 1 */
      NotificationMessage_derivations *notificationMessage;
      /* t = 2 */
      RequestMessage_derivations *requestMessage;
      /* t = 3 */
      ResponseMessage_derivations *responseMessage;
   } u;
} Message_derivations;

EXTERN int asn1E_Message_derivations (OSCTXT* pctxt,
   Message_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Message_derivations (OSCTXT* pctxt, 
   Message_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Message_derivations (OSCTXT* pctxt, 
   Message_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Message_derivations (OSCTXT* pctxt, 
   Message_derivations* pvalue);

EXTERN int DOMTest_Message_derivations (OSCTXT* pctxt, Message_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Message_derivations (Message_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Document_derivations                                      */
/*                                                            */
/**************************************************************/

#define TV_Document_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Document_derivations_dataDocument 1
#define T_Document_derivations_message  2

typedef struct EXTERN Document_derivations {
   int t;
   union {
      /* t = 1 */
      DataDocument *dataDocument;
      /* t = 2 */
      Message_derivations *message;
   } u;
} Document_derivations;

EXTERN int asn1E_Document_derivations (OSCTXT* pctxt,
   Document_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Document_derivations (OSCTXT* pctxt, 
   Document_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Document_derivations (OSCTXT* pctxt, 
   Document_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Document_derivations (OSCTXT* pctxt, 
   Document_derivations* pvalue);

EXTERN int DOMTest_Document_derivations (OSCTXT* pctxt, Document_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Document_derivations (Document_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  FpML                                                      */
/*                                                            */
/**************************************************************/

#define TV_FpML	(TM_UNIV|TM_CONS|0)

typedef Document_derivations FpML;

EXTERN int asn1E_FpML (OSCTXT* pctxt,
   FpML *pvalue, ASN1TagType tagging);

EXTERN int asn1D_FpML (OSCTXT* pctxt, FpML *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_FpML (OSCTXT* pctxt, FpML* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_FpML (OSCTXT* pctxt, FpML* pvalue);

EXTERN int DOMTest_FpML (OSCTXT* pctxt, FpML* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_FpML (FpML* pvalue);

/**************************************************************/
/*                                                            */
/*  Exercise_1                                                */
/*                                                            */
/**************************************************************/

#define TV_Exercise_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Exercise_1 {
   struct {
      unsigned idPresent : 1;
   } m;
   const OSUTF8CHAR* id;
} Exercise_1;

EXTERN int asn1E_Exercise_1 (OSCTXT* pctxt,
   Exercise_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Exercise_1 (OSCTXT* pctxt, Exercise_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Exercise_1 (OSCTXT* pctxt, Exercise_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Exercise_1 (OSCTXT* pctxt, Exercise_1* pvalue);

EXTERN int DOMTest_Exercise_1 (OSCTXT* pctxt, Exercise_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Exercise_1 (Exercise_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Exercise                                                  */
/*                                                            */
/**************************************************************/

#define TV_Exercise	(TM_UNIV|TM_CONS|16)

typedef Exercise_1 Exercise;

EXTERN int asn1E_Exercise (OSCTXT* pctxt,
   Exercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Exercise (OSCTXT* pctxt, Exercise *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Exercise (OSCTXT* pctxt, Exercise* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Exercise (OSCTXT* pctxt, Exercise* pvalue);

EXTERN int DOMTest_Exercise (OSCTXT* pctxt, Exercise* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Exercise (Exercise* pvalue);

/**************************************************************/
/*                                                            */
/*  Product_1                                                 */
/*                                                            */
/**************************************************************/

#define TV_Product_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Product_1 {
   struct {
      unsigned idPresent : 1;
      unsigned productTypePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   ProductType productType;
   /* List of ProductId */
   OSRTDList productId_list;
} Product_1;

EXTERN int asn1E_Product_1 (OSCTXT* pctxt,
   Product_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Product_1 (OSCTXT* pctxt, Product_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Product_1 (OSCTXT* pctxt, Product_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Product_1 (OSCTXT* pctxt, Product_1* pvalue);

EXTERN int DOMTest_Product_1 (OSCTXT* pctxt, Product_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Product_1 (Product_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Product                                                   */
/*                                                            */
/**************************************************************/

#define TV_Product	(TM_UNIV|TM_CONS|16)

typedef Product_1 Product;

EXTERN int asn1E_Product (OSCTXT* pctxt,
   Product *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Product (OSCTXT* pctxt, Product *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Product (OSCTXT* pctxt, Product* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Product (OSCTXT* pctxt, Product* pvalue);

EXTERN int DOMTest_Product (OSCTXT* pctxt, Product* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Product (Product* pvalue);

/**************************************************************/
/*                                                            */
/*  UnderlyingAsset                                           */
/*                                                            */
/**************************************************************/

#define TV_UnderlyingAsset	(TM_UNIV|TM_CONS|16)

typedef UnderlyingAsset_1 UnderlyingAsset;

EXTERN int asn1E_UnderlyingAsset (OSCTXT* pctxt,
   UnderlyingAsset *pvalue, ASN1TagType tagging);

EXTERN int asn1D_UnderlyingAsset (OSCTXT* pctxt, UnderlyingAsset *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_UnderlyingAsset (OSCTXT* pctxt, UnderlyingAsset* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_UnderlyingAsset (OSCTXT* pctxt, UnderlyingAsset* pvalue);

EXTERN int DOMTest_UnderlyingAsset (OSCTXT* pctxt, UnderlyingAsset* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_UnderlyingAsset (UnderlyingAsset* pvalue);

/**************************************************************/
/*                                                            */
/*  LinkId                                                    */
/*                                                            */
/**************************************************************/

#define TV_LinkId	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* LinkId;

EXTERN int asn1E_LinkId (OSCTXT* pctxt,
   LinkId pvalue, ASN1TagType tagging);

EXTERN int asn1D_LinkId (OSCTXT* pctxt, LinkId *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_LinkId (OSCTXT* pctxt, LinkId value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_LinkId (OSCTXT* pctxt, LinkId* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementTerms_1                                         */
/*                                                            */
/**************************************************************/

#define TV_SettlementTerms_1	(TM_UNIV|TM_CONS|16)

typedef Currency SettlementTerms_1;

EXTERN int asn1E_SettlementTerms_1 (OSCTXT* pctxt,
   SettlementTerms_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementTerms_1 (OSCTXT* pctxt, SettlementTerms_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementTerms_1 (OSCTXT* pctxt, SettlementTerms_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementTerms_1 (OSCTXT* pctxt, SettlementTerms_1* pvalue)
   ;

EXTERN int DOMTest_SettlementTerms_1 (OSCTXT* pctxt, SettlementTerms_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementTerms_1 (SettlementTerms_1* pvalue);

/**************************************************************/
/*                                                            */
/*  ValidationRuleId                                          */
/*                                                            */
/**************************************************************/

#define TV_ValidationRuleId	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* ValidationRuleId;

EXTERN int asn1E_ValidationRuleId (OSCTXT* pctxt,
   ValidationRuleId pvalue, ASN1TagType tagging);

EXTERN int asn1D_ValidationRuleId (OSCTXT* pctxt, ValidationRuleId *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_ValidationRuleId (OSCTXT* pctxt, ValidationRuleId value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_ValidationRuleId (OSCTXT* pctxt, ValidationRuleId* pvalue);

/**************************************************************/
/*                                                            */
/*  Document_version                                          */
/*                                                            */
/**************************************************************/

#define TV_Document_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0 = 0
} Document_version_Root;

typedef OSUINT32 Document_version;

EXTERN int asn1E_Document_version (OSCTXT* pctxt,
   Document_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Document_version (OSCTXT* pctxt, Document_version *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Document_version (OSCTXT* pctxt, Document_version value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Document_version (OSCTXT* pctxt, Document_version* pvalue);

EXTERN const OSUTF8CHAR* Document_version_ToString (OSINT32 value);

EXTERN int Document_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Document_version* pvalue);

/**************************************************************/
/*                                                            */
/*  Message_version                                           */
/*                                                            */
/**************************************************************/

#define TV_Message_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_2 = 0
} Message_version_Root;

typedef OSUINT32 Message_version;

EXTERN int asn1E_Message_version (OSCTXT* pctxt,
   Message_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Message_version (OSCTXT* pctxt, Message_version *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Message_version (OSCTXT* pctxt, Message_version value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Message_version (OSCTXT* pctxt, Message_version* pvalue);

EXTERN const OSUTF8CHAR* Message_version_ToString (OSINT32 value);

EXTERN int Message_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Message_version* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestMessage_version                                    */
/*                                                            */
/**************************************************************/

#define TV_RequestMessage_version	(TM_UNIV|TM_PRIM|10)

typedef enum {
   version_x4_0_5 = 0
} RequestMessage_version_Root;

typedef OSUINT32 RequestMessage_version;

EXTERN int asn1E_RequestMessage_version (OSCTXT* pctxt,
   RequestMessage_version *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestMessage_version (OSCTXT* pctxt, 
   RequestMessage_version *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestMessage_version (OSCTXT* pctxt, 
   RequestMessage_version value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestMessage_version (OSCTXT* pctxt, 
   RequestMessage_version* pvalue);

EXTERN const OSUTF8CHAR* RequestMessage_version_ToString (OSINT32 value);

EXTERN int RequestMessage_version_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, RequestMessage_version* pvalue);

/**************************************************************/
/*                                                            */
/*  TradeReference                                            */
/*                                                            */
/**************************************************************/

#define TV_TradeReference	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN TradeReference {
   const OSUTF8CHAR* href;
} TradeReference;

EXTERN int asn1E_TradeReference (OSCTXT* pctxt,
   TradeReference *pvalue, ASN1TagType tagging);

EXTERN int asn1D_TradeReference (OSCTXT* pctxt, TradeReference *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_TradeReference (OSCTXT* pctxt, TradeReference* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_TradeReference (OSCTXT* pctxt, TradeReference* pvalue);

EXTERN int DOMTest_TradeReference (OSCTXT* pctxt, TradeReference* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_TradeReference (TradeReference* pvalue);

/**************************************************************/
/*                                                            */
/*  Document                                                  */
/*                                                            */
/**************************************************************/

#define TV_Document	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Document {
   Document_version version;
} Document;

EXTERN int asn1E_Document (OSCTXT* pctxt,
   Document *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Document (OSCTXT* pctxt, Document *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Document (OSCTXT* pctxt, Document* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Document (OSCTXT* pctxt, Document* pvalue);

EXTERN int DOMTest_Document (OSCTXT* pctxt, Document* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Document (Document* pvalue);

/**************************************************************/
/*                                                            */
/*  SharedAmericanExercise                                    */
/*                                                            */
/**************************************************************/

#define TV_SharedAmericanExercise	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN SharedAmericanExercise {
   struct {
      unsigned idPresent : 1;
      unsigned latestExerciseTimePresent : 1;
   } m;
   const OSUTF8CHAR* id;
   AdjustableOrRelativeDate commencementDate;
   AdjustableOrRelativeDate expirationDate;
   BusinessCenterTime latestExerciseTime;
} SharedAmericanExercise;

EXTERN int asn1E_SharedAmericanExercise (OSCTXT* pctxt,
   SharedAmericanExercise *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SharedAmericanExercise (OSCTXT* pctxt, 
   SharedAmericanExercise *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SharedAmericanExercise (OSCTXT* pctxt, 
   SharedAmericanExercise* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SharedAmericanExercise (OSCTXT* pctxt, 
   SharedAmericanExercise* pvalue);

EXTERN int DOMTest_SharedAmericanExercise (OSCTXT* pctxt, 
   SharedAmericanExercise* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SharedAmericanExercise (SharedAmericanExercise* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_initialPrice_sequence_fxConversion    */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_initialPrice_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_initialPrice_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_initialPrice_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_initialPrice_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_initialPrice_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_initialPrice_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_initialPrice_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquitySwapValuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_initialPrice_sequence_fxConversion (
   EquitySwapValuation_initialPrice_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_initialPrice_sequence                 */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_initialPrice_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_initialPrice_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_initialPrice_sequence_fxConversion fxConversion;
} EquitySwapValuation_initialPrice_sequence;

EXTERN int asn1E_EquitySwapValuation_initialPrice_sequence (OSCTXT* pctxt,
   EquitySwapValuation_initialPrice_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquitySwapValuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence* pvalue);

EXTERN int DOMTest_EquitySwapValuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_initialPrice_sequence (
   EquitySwapValuation_initialPrice_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_initialPrice_choice                   */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_initialPrice_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_initialPrice_choice_determinationMethod 1
#define T_EquitySwapValuation_initialPrice_choice_amountRelativeTo 2
#define T_EquitySwapValuation_initialPrice_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_initialPrice_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_initialPrice_sequence *sequence;
   } u;
} EquitySwapValuation_initialPrice_choice;

EXTERN int asn1E_EquitySwapValuation_initialPrice_choice (OSCTXT* pctxt,
   EquitySwapValuation_initialPrice_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_initialPrice_choice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_choice *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquitySwapValuation_initialPrice_choice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_initialPrice_choice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_choice* pvalue);

EXTERN int DOMTest_EquitySwapValuation_initialPrice_choice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_initialPrice_choice (
   EquitySwapValuation_initialPrice_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_initialPrice_equityValuationDate      */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_initialPrice_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_initialPrice_equityValuationDate_adjustableDate 1
#define T_EquitySwapValuation_initialPrice_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquitySwapValuation_initialPrice_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquitySwapValuation_initialPrice_equityValuationDate;

EXTERN int asn1E_EquitySwapValuation_initialPrice_equityValuationDate (OSCTXT* pctxt,
   EquitySwapValuation_initialPrice_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_initialPrice_equityValuationDate (
   OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_equityValuationDate* pvalue);

EXTERN int DOMTest_EquitySwapValuation_initialPrice_equityValuationDate (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_initialPrice_equityValuationDate (
   EquitySwapValuation_initialPrice_equityValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_initialPrice                          */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_initialPrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_initialPrice {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned equityValuationDatePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_initialPrice_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquitySwapValuation_initialPrice_equityValuationDate equityValuationDate;
} EquitySwapValuation_initialPrice;

EXTERN int asn1E_EquitySwapValuation_initialPrice (OSCTXT* pctxt,
   EquitySwapValuation_initialPrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_initialPrice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_initialPrice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_initialPrice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice* pvalue);

EXTERN int DOMTest_EquitySwapValuation_initialPrice (OSCTXT* pctxt, 
   EquitySwapValuation_initialPrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_initialPrice (
   EquitySwapValuation_initialPrice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceInterim_sequence_fxCon  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_valuationPriceInterim_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_valuationPriceInterim_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceInterim_sequence_fxConversion (
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceInterim_sequence        */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceInterim_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_valuationPriceInterim_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_valuationPriceInterim_sequence_fxConversion fxConversion;
} EquitySwapValuation_valuationPriceInterim_sequence;

EXTERN int asn1E_EquitySwapValuation_valuationPriceInterim_sequence (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceInterim_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceInterim_sequence (
   OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_sequence* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_valuationPriceInterim_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceInterim_sequence (
   EquitySwapValuation_valuationPriceInterim_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceInterim_choice          */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceInterim_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_valuationPriceInterim_choice_determinationMethod 1
#define T_EquitySwapValuation_valuationPriceInterim_choice_amountRelativeTo 2
#define T_EquitySwapValuation_valuationPriceInterim_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_valuationPriceInterim_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_valuationPriceInterim_sequence *sequence;
   } u;
} EquitySwapValuation_valuationPriceInterim_choice;

EXTERN int asn1E_EquitySwapValuation_valuationPriceInterim_choice (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceInterim_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceInterim_choice (
   OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceInterim_choice* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceInterim_choice (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceInterim_choice (
   EquitySwapValuation_valuationPriceInterim_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceInterim                 */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceInterim	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_valuationPriceInterim {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_valuationPriceInterim_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   AdjustableRelativeOrPeriodicDates equityValuationDates;
} EquitySwapValuation_valuationPriceInterim;

EXTERN int asn1E_EquitySwapValuation_valuationPriceInterim (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceInterim *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceInterim* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceInterim (
   EquitySwapValuation_valuationPriceInterim* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceFinal_sequence_fxConve  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_valuationPriceFinal_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_valuationPriceFinal_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceFinal_sequence_fxConversion (
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceFinal_sequence          */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceFinal_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_valuationPriceFinal_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_valuationPriceFinal_sequence_fxConversion fxConversion;
} EquitySwapValuation_valuationPriceFinal_sequence;

EXTERN int asn1E_EquitySwapValuation_valuationPriceFinal_sequence (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceFinal_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceFinal_sequence (
   OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_sequence* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceFinal_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceFinal_sequence (
   EquitySwapValuation_valuationPriceFinal_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceFinal_choice            */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceFinal_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_valuationPriceFinal_choice_determinationMethod 1
#define T_EquitySwapValuation_valuationPriceFinal_choice_amountRelativeTo 2
#define T_EquitySwapValuation_valuationPriceFinal_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_valuationPriceFinal_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_valuationPriceFinal_sequence *sequence;
   } u;
} EquitySwapValuation_valuationPriceFinal_choice;

EXTERN int asn1E_EquitySwapValuation_valuationPriceFinal_choice (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceFinal_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceFinal_choice (
   OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, EquitySwapValuation_valuationPriceFinal_choice* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceFinal_choice (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceFinal_choice (
   EquitySwapValuation_valuationPriceFinal_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceFinal_equityValuationD  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceFinal_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_valuationPriceFinal_equityValuationDate_adjustableDate 1
#define T_EquitySwapValuation_valuationPriceFinal_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquitySwapValuation_valuationPriceFinal_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquitySwapValuation_valuationPriceFinal_equityValuationDate;

EXTERN int asn1E_EquitySwapValuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceFinal_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceFinal_equityValuationDate (
   OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceFinal_equityValuationDate (
   EquitySwapValuation_valuationPriceFinal_equityValuationDate* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_valuationPriceFinal                   */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_valuationPriceFinal	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_valuationPriceFinal {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_valuationPriceFinal_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquitySwapValuation_valuationPriceFinal_equityValuationDate equityValuationDate;
} EquitySwapValuation_valuationPriceFinal;

EXTERN int asn1E_EquitySwapValuation_valuationPriceFinal (OSCTXT* pctxt,
   EquitySwapValuation_valuationPriceFinal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_EquitySwapValuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal* pvalue);

EXTERN int DOMTest_EquitySwapValuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquitySwapValuation_valuationPriceFinal* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_valuationPriceFinal (
   EquitySwapValuation_valuationPriceFinal* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation                                       */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation {
   struct {
      unsigned valuationPriceInterimPresent : 1;
   } m;
   EquitySwapValuation_initialPrice initialPrice;
   OSBOOL equityNotionalReset;
   EquitySwapValuation_valuationPriceInterim valuationPriceInterim;
   EquitySwapValuation_valuationPriceFinal valuationPriceFinal;
   EquityPaymentDates equityPaymentDates;
} EquitySwapValuation;

EXTERN int asn1E_EquitySwapValuation (OSCTXT* pctxt,
   EquitySwapValuation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation (OSCTXT* pctxt, 
   EquitySwapValuation *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation (OSCTXT* pctxt, 
   EquitySwapValuation* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation (OSCTXT* pctxt, 
   EquitySwapValuation* pvalue);

EXTERN int DOMTest_EquitySwapValuation (OSCTXT* pctxt, EquitySwapValuation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation (EquitySwapValuation* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestAccrualsMethod                                    */
/*                                                            */
/**************************************************************/

#define TV_InterestAccrualsMethod	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestAccrualsMethod_floatingRateCalculation 1
#define T_InterestAccrualsMethod_fixedRate 2

typedef struct EXTERN InterestAccrualsMethod {
   int t;
   union {
      /* t = 1 */
      FloatingRateCalculation *floatingRateCalculation;
      /* t = 2 */
      OSREAL fixedRate;
   } u;
} InterestAccrualsMethod;

EXTERN int asn1E_InterestAccrualsMethod (OSCTXT* pctxt,
   InterestAccrualsMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestAccrualsMethod (OSCTXT* pctxt, 
   InterestAccrualsMethod *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestAccrualsMethod (OSCTXT* pctxt, 
   InterestAccrualsMethod* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestAccrualsMethod (OSCTXT* pctxt, 
   InterestAccrualsMethod* pvalue);

EXTERN int DOMTest_InterestAccrualsMethod (OSCTXT* pctxt, 
   InterestAccrualsMethod* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestAccrualsMethod (InterestAccrualsMethod* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageHeader                                             */
/*                                                            */
/**************************************************************/

#define TV_MessageHeader	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN MessageHeader {
   struct {
      unsigned conversationIdPresent : 1;
      unsigned inReplyToPresent : 1;
      unsigned expiryTimestampPresent : 1;
   } m;
   ConversationId conversationId;
   MessageId messageId;
   MessageId inReplyTo;
   PartyId sentBy;
   /* List of PartyId */
   OSRTDList sendTo_list;
   /* List of PartyId */
   OSRTDList copyTo_list;
   const char* creationTimestamp;
   const char* expiryTimestamp;
   /* List of Signature */
   OSRTDList signature_list;
} MessageHeader;

EXTERN int asn1E_MessageHeader (OSCTXT* pctxt,
   MessageHeader *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageHeader (OSCTXT* pctxt, MessageHeader *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageHeader (OSCTXT* pctxt, MessageHeader* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageHeader (OSCTXT* pctxt, MessageHeader* pvalue);

EXTERN int DOMTest_MessageHeader (OSCTXT* pctxt, MessageHeader* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageHeader (MessageHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  Equity_1                                                  */
/*                                                            */
/**************************************************************/

#define TV_Equity_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Equity_1 {
   struct {
      unsigned currencyPresent : 1;
      unsigned clearanceSystemPresent : 1;
   } m;
   const OSUTF8CHAR* description;
   /* List of InstrumentId */
   OSRTDList instrumentId_list;
   Currency currency;
   /* List of ExchangeId */
   OSRTDList exchangeId_list;
   /* List of ExchangeId */
   OSRTDList relatedExchangeId_list;
   ClearanceSystem clearanceSystem;
} Equity_1;

EXTERN int asn1E_Equity_1 (OSCTXT* pctxt,
   Equity_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Equity_1 (OSCTXT* pctxt, Equity_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Equity_1 (OSCTXT* pctxt, Equity_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Equity_1 (OSCTXT* pctxt, Equity_1* pvalue);

EXTERN int DOMTest_Equity_1 (OSCTXT* pctxt, Equity_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Equity_1 (Equity_1* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestMessageHeader                                      */
/*                                                            */
/**************************************************************/

#define TV_RequestMessageHeader	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestMessageHeader {
   struct {
      unsigned conversationIdPresent : 1;
      unsigned expiryTimestampPresent : 1;
   } m;
   ConversationId conversationId;
   MessageId messageId;
   PartyId sentBy;
   /* List of PartyId */
   OSRTDList sendTo_list;
   /* List of PartyId */
   OSRTDList copyTo_list;
   const char* creationTimestamp;
   const char* expiryTimestamp;
   /* List of Signature */
   OSRTDList signature_list;
} RequestMessageHeader;

EXTERN int asn1E_RequestMessageHeader (OSCTXT* pctxt,
   RequestMessageHeader *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestMessageHeader (OSCTXT* pctxt, 
   RequestMessageHeader *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestMessageHeader (OSCTXT* pctxt, 
   RequestMessageHeader* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestMessageHeader (OSCTXT* pctxt, 
   RequestMessageHeader* pvalue);

EXTERN int DOMTest_RequestMessageHeader (OSCTXT* pctxt, RequestMessageHeader* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestMessageHeader (RequestMessageHeader* pvalue);

/**************************************************************/
/*                                                            */
/*  MessageHeader_derivations                                 */
/*                                                            */
/**************************************************************/

#define TV_MessageHeader_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_MessageHeader_derivations_messageHeader 1
#define T_MessageHeader_derivations_notificationMessageHeader 2
#define T_MessageHeader_derivations_requestMessageHeader 3
#define T_MessageHeader_derivations_responseMessageHeader 4

typedef struct EXTERN MessageHeader_derivations {
   int t;
   union {
      /* t = 1 */
      MessageHeader *messageHeader;
      /* t = 2 */
      NotificationMessageHeader *notificationMessageHeader;
      /* t = 3 */
      RequestMessageHeader *requestMessageHeader;
      /* t = 4 */
      ResponseMessageHeader *responseMessageHeader;
   } u;
} MessageHeader_derivations;

EXTERN int asn1E_MessageHeader_derivations (OSCTXT* pctxt,
   MessageHeader_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_MessageHeader_derivations (OSCTXT* pctxt, 
   MessageHeader_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_MessageHeader_derivations (OSCTXT* pctxt, 
   MessageHeader_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_MessageHeader_derivations (OSCTXT* pctxt, 
   MessageHeader_derivations* pvalue);

EXTERN int DOMTest_MessageHeader_derivations (OSCTXT* pctxt, 
   MessageHeader_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_MessageHeader_derivations (MessageHeader_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Message                                                   */
/*                                                            */
/**************************************************************/

#define TV_Message	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Message {
   struct {
      unsigned validation_modelPresent : 1;
   } m;
   Message_version version;
   MessageHeader_derivations header;
   Validation_model validation_model;
} Message;

EXTERN int asn1E_Message (OSCTXT* pctxt,
   Message *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Message (OSCTXT* pctxt, Message *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Message (OSCTXT* pctxt, Message* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Message (OSCTXT* pctxt, Message* pvalue);

EXTERN int DOMTest_Message (OSCTXT* pctxt, Message* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Message (Message* pvalue);

/**************************************************************/
/*                                                            */
/*  RequestMessage                                            */
/*                                                            */
/**************************************************************/

#define TV_RequestMessage	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN RequestMessage {
   struct {
      unsigned validation_modelPresent : 1;
   } m;
   RequestMessage_version version;
   RequestMessageHeader header;
   Validation_model validation_model;
} RequestMessage;

EXTERN int asn1E_RequestMessage (OSCTXT* pctxt,
   RequestMessage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_RequestMessage (OSCTXT* pctxt, RequestMessage *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_RequestMessage (OSCTXT* pctxt, RequestMessage* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_RequestMessage (OSCTXT* pctxt, RequestMessage* pvalue);

EXTERN int DOMTest_RequestMessage (OSCTXT* pctxt, RequestMessage* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_RequestMessage (RequestMessage* pvalue);

/**************************************************************/
/*                                                            */
/*  Product_derivations                                       */
/*                                                            */
/**************************************************************/

#define TV_Product_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Product_derivations_product   1
#define T_Product_derivations_strategy  2
#define T_Product_derivations_fXAverageRateOption 3
#define T_Product_derivations_fXOptionLeg 4
#define T_Product_derivations_fXDigitalOption 5
#define T_Product_derivations_fXLeg     6
#define T_Product_derivations_fXSwap    7
#define T_Product_derivations_termDeposit 8
#define T_Product_derivations_bulletPayment 9
#define T_Product_derivations_capFloor  10
#define T_Product_derivations_fra       11
#define T_Product_derivations_swap      12
#define T_Product_derivations_swaption  13
#define T_Product_derivations_equityOption 14
#define T_Product_derivations_equitySwap 15
#define T_Product_derivations_creditDefaultSwap 16

typedef struct EXTERN Product_derivations {
   int t;
   union {
      /* t = 1 */
      Product_1 *product;
      /* t = 2 */
      Strategy *strategy;
      /* t = 3 */
      FXAverageRateOption *fXAverageRateOption;
      /* t = 4 */
      FXOptionLeg_derivations *fXOptionLeg;
      /* t = 5 */
      FXDigitalOption *fXDigitalOption;
      /* t = 6 */
      FXLeg *fXLeg;
      /* t = 7 */
      FXSwap *fXSwap;
      /* t = 8 */
      TermDeposit *termDeposit;
      /* t = 9 */
      BulletPayment *bulletPayment;
      /* t = 10 */
      CapFloor *capFloor;
      /* t = 11 */
      Fra *fra;
      /* t = 12 */
      Swap *swap;
      /* t = 13 */
      Swaption *swaption;
      /* t = 14 */
      EquityOption *equityOption;
      /* t = 15 */
      EquitySwap *equitySwap;
      /* t = 16 */
      CreditDefaultSwap *creditDefaultSwap;
   } u;
} Product_derivations;

EXTERN int asn1E_Product_derivations (OSCTXT* pctxt,
   Product_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Product_derivations (OSCTXT* pctxt, 
   Product_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Product_derivations (OSCTXT* pctxt, 
   Product_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Product_derivations (OSCTXT* pctxt, 
   Product_derivations* pvalue);

EXTERN int DOMTest_Product_derivations (OSCTXT* pctxt, Product_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Product_derivations (Product_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  SharedAmericanExercise_derivations                        */
/*                                                            */
/**************************************************************/

#define TV_SharedAmericanExercise_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SharedAmericanExercise_derivations_sharedAmericanExercise 1
#define T_SharedAmericanExercise_derivations_equityAmericanExercise 2

typedef struct EXTERN SharedAmericanExercise_derivations {
   int t;
   union {
      /* t = 1 */
      SharedAmericanExercise *sharedAmericanExercise;
      /* t = 2 */
      EquityAmericanExercise *equityAmericanExercise;
   } u;
} SharedAmericanExercise_derivations;

EXTERN int asn1E_SharedAmericanExercise_derivations (OSCTXT* pctxt,
   SharedAmericanExercise_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SharedAmericanExercise_derivations (OSCTXT* pctxt, 
   SharedAmericanExercise_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SharedAmericanExercise_derivations (OSCTXT* pctxt, 
   SharedAmericanExercise_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SharedAmericanExercise_derivations (OSCTXT* pctxt, 
   SharedAmericanExercise_derivations* pvalue);

EXTERN int DOMTest_SharedAmericanExercise_derivations (OSCTXT* pctxt, 
   SharedAmericanExercise_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SharedAmericanExercise_derivations (
   SharedAmericanExercise_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  Exercise_derivations                                      */
/*                                                            */
/**************************************************************/

#define TV_Exercise_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Exercise_derivations_exercise 1
#define T_Exercise_derivations_americanExercise 2
#define T_Exercise_derivations_bermudaExercise 3
#define T_Exercise_derivations_europeanExercise 4
#define T_Exercise_derivations_equityEuropeanExercise 5
#define T_Exercise_derivations_sharedAmericanExercise 6

typedef struct EXTERN Exercise_derivations {
   int t;
   union {
      /* t = 1 */
      Exercise_1 *exercise;
      /* t = 2 */
      AmericanExercise *americanExercise;
      /* t = 3 */
      BermudaExercise *bermudaExercise;
      /* t = 4 */
      EuropeanExercise *europeanExercise;
      /* t = 5 */
      EquityEuropeanExercise *equityEuropeanExercise;
      /* t = 6 */
      SharedAmericanExercise_derivations *sharedAmericanExercise;
   } u;
} Exercise_derivations;

EXTERN int asn1E_Exercise_derivations (OSCTXT* pctxt,
   Exercise_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Exercise_derivations (OSCTXT* pctxt, 
   Exercise_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Exercise_derivations (OSCTXT* pctxt, 
   Exercise_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Exercise_derivations (OSCTXT* pctxt, 
   Exercise_derivations* pvalue);

EXTERN int DOMTest_Exercise_derivations (OSCTXT* pctxt, Exercise_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Exercise_derivations (Exercise_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_init  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion (
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_init  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence_fxConversion fxConversion;
} EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence (
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_init  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice_determinationMethod 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice_amountRelativeTo 2
#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_sequence *sequence;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice (
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_init  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate_adjustableDate 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate (
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_init  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_initialPrice {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
      unsigned equityValuationDatePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice_equityValuationDate equityValuationDate;
} EquitySwapValuation_derivations_equityLeg_valuation_initialPrice;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice* pvalue);

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_initialPrice (
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence_fxConversion fxConversion;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice_determinationMethod 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice_amountRelativeTo 2
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_sequence *sequence;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   AdjustableRelativeOrPeriodicDates equityValuationDates;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion_amountRelativeTo 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion_fxRate_list 2

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion {
   int t;
   union {
      /* t = 1 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 2 */
      /* List of FxRate_derivations */
      OSRTDList *fxRate_list;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence {
   struct {
      unsigned grossPricePresent : 1;
      unsigned accruedInterestPricePresent : 1;
      unsigned fxConversionPresent : 1;
   } m;
   ActualPrice grossPrice;
   ActualPrice netPrice;
   OSREAL accruedInterestPrice;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence_fxConversion fxConversion;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice_determinationMethod 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice_amountRelativeTo 2
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice_sequence 3

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* determinationMethod;
      /* t = 2 */
      AmountRelativeTo *amountRelativeTo;
      /* t = 3 */
      EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_sequence *sequence;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate_adjustableDate 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate_relativeDateSequence 2

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate {
   int t;
   union {
      /* t = 1 */
      AdjustableDate *adjustableDate;
      /* t = 2 */
      RelativeDateSequence *relativeDateSequence;
   } u;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation_valu  */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal {
   struct {
      unsigned commissionPresent : 1;
      unsigned valuationTimeTypePresent : 1;
      unsigned valuationTimePresent : 1;
   } m;
   Commission commission;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_choice choice;
   TimeTypeEnum valuationTimeType;
   BusinessCenterTime valuationTime;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal_equityValuationDate equityValuationDate;
} EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal (
   OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal (
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations_equityLeg_valuation       */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations_equityLeg_valuation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN EquitySwapValuation_derivations_equityLeg_valuation {
   struct {
      unsigned valuationPriceInterimPresent : 1;
   } m;
   EquitySwapValuation_derivations_equityLeg_valuation_initialPrice initialPrice;
   OSBOOL equityNotionalReset;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceInterim valuationPriceInterim;
   EquitySwapValuation_derivations_equityLeg_valuation_valuationPriceFinal valuationPriceFinal;
   EquityPaymentDates equityPaymentDates;
} EquitySwapValuation_derivations_equityLeg_valuation;

EXTERN int asn1E_EquitySwapValuation_derivations_equityLeg_valuation (OSCTXT* pctxt,
   EquitySwapValuation_derivations_equityLeg_valuation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations_equityLeg_valuation (
   OSCTXT* pctxt, EquitySwapValuation_derivations_equityLeg_valuation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_derivations_equityLeg_valuation 
   (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_derivations_equityLeg_valuation 
   (OSCTXT* pctxt, EquitySwapValuation_derivations_equityLeg_valuation* pvalue)
   ;

EXTERN int DOMTest_EquitySwapValuation_derivations_equityLeg_valuation (OSCTXT* pctxt, 
   EquitySwapValuation_derivations_equityLeg_valuation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations_equityLeg_valuation (
   EquitySwapValuation_derivations_equityLeg_valuation* pvalue);

/**************************************************************/
/*                                                            */
/*  EquitySwapValuation_derivations                           */
/*                                                            */
/**************************************************************/

#define TV_EquitySwapValuation_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_EquitySwapValuation_derivations_equitySwapValuation 1
#define T_EquitySwapValuation_derivations_equityLeg_valuation 2

typedef struct EXTERN EquitySwapValuation_derivations {
   int t;
   union {
      /* t = 1 */
      EquitySwapValuation *equitySwapValuation;
      /* t = 2 */
      EquitySwapValuation_derivations_equityLeg_valuation *equityLeg_valuation;
   } u;
} EquitySwapValuation_derivations;

EXTERN int asn1E_EquitySwapValuation_derivations (OSCTXT* pctxt,
   EquitySwapValuation_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_EquitySwapValuation_derivations (OSCTXT* pctxt, 
   EquitySwapValuation_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_EquitySwapValuation_derivations (OSCTXT* pctxt, 
   EquitySwapValuation_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_EquitySwapValuation_derivations (OSCTXT* pctxt, 
   EquitySwapValuation_derivations* pvalue);

EXTERN int DOMTest_EquitySwapValuation_derivations (OSCTXT* pctxt, 
   EquitySwapValuation_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_EquitySwapValuation_derivations (
   EquitySwapValuation_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  InterestAccrualsMethod_derivations_dividendConditions_in  */
/*                                                            */
/**************************************************************/

#define TV_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice_floatingRateCalculation 1
#define T_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice_fixedRate 2

typedef struct EXTERN InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice {
   int t;
   union {
      /* t = 1 */
      FloatingRateCalculation *floatingRateCalculation;
      /* t = 2 */
      OSREAL fixedRate;
   } u;
} InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice;

EXTERN int asn1E_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice (OSCTXT* pctxt,
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice (
   OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice 
   (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice 
   (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice* pvalue)
   ;

EXTERN int DOMTest_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice (
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  InterestAccrualsMethod_derivations_dividendConditions_in  */
/*                                                            */
/**************************************************************/

#define TV_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod {
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod_choice choice;
   CompoundingMethodEnum compoundingMethod;
} InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod;

EXTERN int asn1E_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod (OSCTXT* pctxt,
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod (
   OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod *pvalue, 
   ASN1TagType tagging, int length);

EXTERN 
   int XmlEnc_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod 
   (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN 
   int XmlDec_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod 
   (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod* pvalue)
   ;

EXTERN int DOMTest_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod (
   InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  InterestAccrualsMethod_derivations                        */
/*                                                            */
/**************************************************************/

#define TV_InterestAccrualsMethod_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_InterestAccrualsMethod_derivations_interestAccrualsMethod 1
#define T_InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod 2

typedef struct EXTERN InterestAccrualsMethod_derivations {
   int t;
   union {
      /* t = 1 */
      InterestAccrualsMethod *interestAccrualsMethod;
      /* t = 2 */
      InterestAccrualsMethod_derivations_dividendConditions_interestAccrualsMethod *dividendConditions_interestAccrualsMethod;
   } u;
} InterestAccrualsMethod_derivations;

EXTERN int asn1E_InterestAccrualsMethod_derivations (OSCTXT* pctxt,
   InterestAccrualsMethod_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_InterestAccrualsMethod_derivations (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_InterestAccrualsMethod_derivations (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_InterestAccrualsMethod_derivations (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations* pvalue);

EXTERN int DOMTest_InterestAccrualsMethod_derivations (OSCTXT* pctxt, 
   InterestAccrualsMethod_derivations* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_InterestAccrualsMethod_derivations (
   InterestAccrualsMethod_derivations* pvalue);

/**************************************************************/
/*                                                            */
/*  SettlementTerms_derivations                               */
/*                                                            */
/**************************************************************/

#define TV_SettlementTerms_derivations	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_SettlementTerms_derivations_settlementTerms 1
#define T_SettlementTerms_derivations_cashSettlementTerms 2
#define T_SettlementTerms_derivations_physicalSettlementTerms 3

typedef struct EXTERN SettlementTerms_derivations {
   int t;
   union {
      /* t = 1 */
      SettlementTerms_1 *settlementTerms;
      /* t = 2 */
      CashSettlementTerms *cashSettlementTerms;
      /* t = 3 */
      PhysicalSettlementTerms *physicalSettlementTerms;
   } u;
} SettlementTerms_derivations;

EXTERN int asn1E_SettlementTerms_derivations (OSCTXT* pctxt,
   SettlementTerms_derivations *pvalue, ASN1TagType tagging);

EXTERN int asn1D_SettlementTerms_derivations (OSCTXT* pctxt, 
   SettlementTerms_derivations *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_SettlementTerms_derivations (OSCTXT* pctxt, 
   SettlementTerms_derivations* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_SettlementTerms_derivations (OSCTXT* pctxt, 
   SettlementTerms_derivations* pvalue);

EXTERN int DOMTest_SettlementTerms_derivations (OSCTXT* pctxt, 
   SettlementTerms_derivations* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_SettlementTerms_derivations (SettlementTerms_derivations* pvalue);

/**
 * Global element functions.  These functions encode or decode complete
 * XML documents.  They are generated for XSD global elements and/or
 * ASN.1 type definitions that are either:
 *
 * 1) not referenced by any other types, or
 * 2) explicitly declared to be a PDU using the -pdu command line
 *    option, or
 * 3) explicitly declared to be a PDU using the <isPDU/> 
 *    configuration file element.
 */
EXTERN int XmlEnc_FpML_PDU (OSCTXT* pctxt, FpML* pvalue);

EXTERN int XmlDec_FpML_PDU (OSCTXT* pctxt, FpML* pvalue);

EXTERN int XmlEnc_Exercise_PDU (OSCTXT* pctxt, Exercise* pvalue);

EXTERN int XmlDec_Exercise_PDU (OSCTXT* pctxt, Exercise* pvalue);

EXTERN int XmlEnc_Product_PDU (OSCTXT* pctxt, Product* pvalue);

EXTERN int XmlDec_Product_PDU (OSCTXT* pctxt, Product* pvalue);

EXTERN int XmlEnc_UnderlyingAsset_PDU (OSCTXT* pctxt, UnderlyingAsset* pvalue);

EXTERN int XmlDec_UnderlyingAsset_PDU (OSCTXT* pctxt, UnderlyingAsset* pvalue);

EXTERN int XmlEnc_LinkId_PDU (OSCTXT* pctxt, LinkId value);

EXTERN int XmlDec_LinkId_PDU (OSCTXT* pctxt, LinkId* pvalue);

EXTERN int XmlEnc_ValidationRuleId_PDU (OSCTXT* pctxt, ValidationRuleId value);

EXTERN int XmlDec_ValidationRuleId_PDU (OSCTXT* pctxt, ValidationRuleId* pvalue);

EXTERN int XmlEnc_TradeReference_PDU (OSCTXT* pctxt, TradeReference* pvalue);

EXTERN int XmlDec_TradeReference_PDU (OSCTXT* pctxt, TradeReference* pvalue);

EXTERN int XmlEnc_Document_PDU (OSCTXT* pctxt, Document* pvalue);

EXTERN int XmlDec_Document_PDU (OSCTXT* pctxt, Document* pvalue);

EXTERN int XmlEnc_Equity_1_PDU (OSCTXT* pctxt, Equity_1* pvalue);

EXTERN int XmlDec_Equity_1_PDU (OSCTXT* pctxt, Equity_1* pvalue);

EXTERN int XmlEnc_Message_PDU (OSCTXT* pctxt, Message* pvalue);

EXTERN int XmlDec_Message_PDU (OSCTXT* pctxt, Message* pvalue);

EXTERN int XmlEnc_RequestMessage_PDU (OSCTXT* pctxt, RequestMessage* pvalue);

EXTERN int XmlDec_RequestMessage_PDU (OSCTXT* pctxt, RequestMessage* pvalue);

#ifdef __cplusplus
}
#endif

#endif
