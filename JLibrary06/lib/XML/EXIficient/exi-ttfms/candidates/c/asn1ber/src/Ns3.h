/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef NS3_H
#define NS3_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"
#include "Xlink.h"
#include "Ns1.h"

/**
 * Header file for ASN.1 module Ns3
 */
/**************************************************************/
/*                                                            */
/*  Display_name                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Display_name	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Display_name;

EXTERN int asn1E_Ns3_Display_name (OSCTXT* pctxt,
   Ns3_Display_name pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Display_name (OSCTXT* pctxt, Ns3_Display_name *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Display_name (OSCTXT* pctxt, Ns3_Display_name value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Display_name (OSCTXT* pctxt, Ns3_Display_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Caption_point_x                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Caption_point_x	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Caption_point_x;

EXTERN int asn1E_Ns3_Caption_point_x (OSCTXT* pctxt,
   Ns3_Caption_point_x pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Caption_point_x (OSCTXT* pctxt, 
   Ns3_Caption_point_x *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Caption_point_x (OSCTXT* pctxt, 
   Ns3_Caption_point_x value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Caption_point_x (OSCTXT* pctxt, 
   Ns3_Caption_point_x* pvalue);

/**************************************************************/
/*                                                            */
/*  Caption_point_y                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Caption_point_y	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Caption_point_y;

EXTERN int asn1E_Ns3_Caption_point_y (OSCTXT* pctxt,
   Ns3_Caption_point_y pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Caption_point_y (OSCTXT* pctxt, 
   Ns3_Caption_point_y *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Caption_point_y (OSCTXT* pctxt, 
   Ns3_Caption_point_y value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Caption_point_y (OSCTXT* pctxt, 
   Ns3_Caption_point_y* pvalue);

/**************************************************************/
/*                                                            */
/*  Class_names                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Class_names	(TM_UNIV|TM_CONS|16)

/* List of const OSUTF8CHAR* */
typedef OSRTDList Ns3_Class_names;

EXTERN int asn1E_Ns3_Class_names (OSCTXT* pctxt,
   Ns3_Class_names *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Class_names (OSCTXT* pctxt, Ns3_Class_names *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Class_names (OSCTXT* pctxt, Ns3_Class_names* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Class_names (OSCTXT* pctxt, Ns3_Class_names* pvalue);

EXTERN int DOMTest_Ns3_Class_names (OSCTXT* pctxt, Ns3_Class_names* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Class_names (Ns3_Class_names* pvalue);

/**************************************************************/
/*                                                            */
/*  Corner_radius                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Corner_radius	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Corner_radius;

EXTERN int asn1E_Ns3_Corner_radius (OSCTXT* pctxt,
   Ns3_Corner_radius pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Corner_radius (OSCTXT* pctxt, Ns3_Corner_radius *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Corner_radius (OSCTXT* pctxt, Ns3_Corner_radius value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Corner_radius (OSCTXT* pctxt, Ns3_Corner_radius* pvalue)
   ;

/**************************************************************/
/*                                                            */
/*  Id                                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Id	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Id;

EXTERN int asn1E_Ns3_Id (OSCTXT* pctxt,
   Ns3_Id pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Id (OSCTXT* pctxt, Ns3_Id *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Id (OSCTXT* pctxt, Ns3_Id value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Id (OSCTXT* pctxt, Ns3_Id* pvalue);

/**************************************************************/
/*                                                            */
/*  Layer_1                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Layer_1	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Layer_1;

EXTERN int asn1E_Ns3_Layer_1 (OSCTXT* pctxt,
   Ns3_Layer_1 pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Layer_1 (OSCTXT* pctxt, Ns3_Layer_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Layer_1 (OSCTXT* pctxt, Ns3_Layer_1 value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Layer_1 (OSCTXT* pctxt, Ns3_Layer_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_name                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Style_name_alt            1
#define T_Ns3_Style_name_alt_1          2

typedef struct EXTERN Ns3_Style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Style_name;

EXTERN int asn1E_Ns3_Style_name (OSCTXT* pctxt,
   Ns3_Style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Style_name (OSCTXT* pctxt, Ns3_Style_name *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Style_name (OSCTXT* pctxt, Ns3_Style_name* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Style_name (OSCTXT* pctxt, Ns3_Style_name* pvalue);

EXTERN int DOMTest_Ns3_Style_name (OSCTXT* pctxt, Ns3_Style_name* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Style_name (Ns3_Style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Text_style_name                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Text_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Text_style_name_alt       1
#define T_Ns3_Text_style_name_alt_1     2

typedef struct EXTERN Ns3_Text_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Text_style_name;

EXTERN int asn1E_Ns3_Text_style_name (OSCTXT* pctxt,
   Ns3_Text_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Text_style_name (OSCTXT* pctxt, 
   Ns3_Text_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Text_style_name (OSCTXT* pctxt, 
   Ns3_Text_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Text_style_name (OSCTXT* pctxt, 
   Ns3_Text_style_name* pvalue);

EXTERN int DOMTest_Ns3_Text_style_name (OSCTXT* pctxt, Ns3_Text_style_name* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Text_style_name (Ns3_Text_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Transform                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Transform	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Transform;

EXTERN int asn1E_Ns3_Transform (OSCTXT* pctxt,
   Ns3_Transform pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Transform (OSCTXT* pctxt, Ns3_Transform *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Transform (OSCTXT* pctxt, Ns3_Transform value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Transform (OSCTXT* pctxt, Ns3_Transform* pvalue);

/**************************************************************/
/*                                                            */
/*  Z_index                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Z_index	(TM_UNIV|TM_PRIM|2)

typedef OSUINT32 Ns3_Z_index;

EXTERN int asn1E_Ns3_Z_index (OSCTXT* pctxt,
   Ns3_Z_index *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Z_index (OSCTXT* pctxt, Ns3_Z_index *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Z_index (OSCTXT* pctxt, Ns3_Z_index value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Z_index (OSCTXT* pctxt, Ns3_Z_index* pvalue);

/**************************************************************/
/*                                                            */
/*  Glue_point_align                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Glue_point_align	(TM_UNIV|TM_PRIM|10)

typedef enum {
   align_bottom_left = 0,
   align_bottom_right = 1,
   align_center = 2,
   align_left = 3,
   align_right = 4,
   align_top = 5,
   align_top_left = 6,
   align_top_right = 7
} Ns3_Glue_point_align_Root;

typedef OSUINT32 Ns3_Glue_point_align;

EXTERN int asn1E_Ns3_Glue_point_align (OSCTXT* pctxt,
   Ns3_Glue_point_align *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Glue_point_align (OSCTXT* pctxt, 
   Ns3_Glue_point_align *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Glue_point_align (OSCTXT* pctxt, 
   Ns3_Glue_point_align value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Glue_point_align (OSCTXT* pctxt, 
   Ns3_Glue_point_align* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Glue_point_align_ToString (OSINT32 value);

EXTERN int Ns3_Glue_point_align_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Glue_point_align* pvalue);

/**************************************************************/
/*                                                            */
/*  Glue_point_x                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Glue_point_x	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Glue_point_x_alt          1
#define T_Ns3_Glue_point_x_alt_1        2

typedef struct Ns3_Glue_point_x {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Glue_point_x;

EXTERN int asn1E_Ns3_Glue_point_x (OSCTXT* pctxt,
   Ns3_Glue_point_x *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Glue_point_x (OSCTXT* pctxt, Ns3_Glue_point_x *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Glue_point_x (OSCTXT* pctxt, Ns3_Glue_point_x* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Glue_point_x (OSCTXT* pctxt, Ns3_Glue_point_x* pvalue);

EXTERN int DOMTest_Ns3_Glue_point_x (OSCTXT* pctxt, Ns3_Glue_point_x* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Glue_point_x (Ns3_Glue_point_x* pvalue);

/**************************************************************/
/*                                                            */
/*  Glue_point_y                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Glue_point_y	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Glue_point_y_alt          1
#define T_Ns3_Glue_point_y_alt_1        2

typedef struct Ns3_Glue_point_y {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Glue_point_y;

EXTERN int asn1E_Ns3_Glue_point_y (OSCTXT* pctxt,
   Ns3_Glue_point_y *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Glue_point_y (OSCTXT* pctxt, Ns3_Glue_point_y *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Glue_point_y (OSCTXT* pctxt, Ns3_Glue_point_y* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Glue_point_y (OSCTXT* pctxt, Ns3_Glue_point_y* pvalue);

EXTERN int DOMTest_Ns3_Glue_point_y (OSCTXT* pctxt, Ns3_Glue_point_y* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Glue_point_y (Ns3_Glue_point_y* pvalue);

/**************************************************************/
/*                                                            */
/*  Glue_point                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Glue_point	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Glue_point {
   Ns3_Glue_point_align align;
   OSUINT32 id;
   Ns3_Glue_point_x x;
   Ns3_Glue_point_y y;
} Ns3_Glue_point;

EXTERN int asn1E_Ns3_Glue_point (OSCTXT* pctxt,
   Ns3_Glue_point *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Glue_point (OSCTXT* pctxt, Ns3_Glue_point *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Glue_point (OSCTXT* pctxt, Ns3_Glue_point* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Glue_point (OSCTXT* pctxt, Ns3_Glue_point* pvalue);

EXTERN int DOMTest_Ns3_Glue_point (OSCTXT* pctxt, Ns3_Glue_point* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Glue_point (Ns3_Glue_point* pvalue);

/**************************************************************/
/*                                                            */
/*  Rect_element                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Rect_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Rect_element_p            1
#define T_Ns3_Rect_element_list         2

typedef struct EXTERN Ns3_Rect_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Rect_element;

EXTERN int asn1E_Ns3_Rect_element (OSCTXT* pctxt,
   Ns3_Rect_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Rect_element (OSCTXT* pctxt, Ns3_Rect_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Rect_element (OSCTXT* pctxt, Ns3_Rect_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Rect_element (OSCTXT* pctxt, Ns3_Rect_element* pvalue);

EXTERN int DOMTest_Ns3_Rect_element (OSCTXT* pctxt, Ns3_Rect_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Rect_element (Ns3_Rect_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Rect                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Rect	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Rect {
   struct {
      unsigned class_namesPresent : 1;
      unsigned corner_radiusPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Corner_radius corner_radius;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Rect_element */
   OSRTDList choice_list;
} Ns3_Rect;

EXTERN int asn1E_Ns3_Rect (OSCTXT* pctxt,
   Ns3_Rect *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Rect (OSCTXT* pctxt, Ns3_Rect *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Rect (OSCTXT* pctxt, Ns3_Rect* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Rect (OSCTXT* pctxt, Ns3_Rect* pvalue);

EXTERN int DOMTest_Ns3_Rect (OSCTXT* pctxt, Ns3_Rect* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Rect (Ns3_Rect* pvalue);

/**************************************************************/
/*                                                            */
/*  Line_element                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Line_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Line_element_p            1
#define T_Ns3_Line_element_list         2

typedef struct EXTERN Ns3_Line_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Line_element;

EXTERN int asn1E_Ns3_Line_element (OSCTXT* pctxt,
   Ns3_Line_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Line_element (OSCTXT* pctxt, Ns3_Line_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Line_element (OSCTXT* pctxt, Ns3_Line_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Line_element (OSCTXT* pctxt, Ns3_Line_element* pvalue);

EXTERN int DOMTest_Ns3_Line_element (OSCTXT* pctxt, Ns3_Line_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Line_element (Ns3_Line_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Line                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Line	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Line {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* x1;
   const OSUTF8CHAR* x2;
   const OSUTF8CHAR* y1;
   const OSUTF8CHAR* y2;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Line_element */
   OSRTDList choice_list;
} Ns3_Line;

EXTERN int asn1E_Ns3_Line (OSCTXT* pctxt,
   Ns3_Line *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Line (OSCTXT* pctxt, Ns3_Line *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Line (OSCTXT* pctxt, Ns3_Line* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Line (OSCTXT* pctxt, Ns3_Line* pvalue);

EXTERN int DOMTest_Ns3_Line (OSCTXT* pctxt, Ns3_Line* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Line (Ns3_Line* pvalue);

/**************************************************************/
/*                                                            */
/*  Polyline_element                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Polyline_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Polyline_element_p        1
#define T_Ns3_Polyline_element_list     2

typedef struct EXTERN Ns3_Polyline_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Polyline_element;

EXTERN int asn1E_Ns3_Polyline_element (OSCTXT* pctxt,
   Ns3_Polyline_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Polyline_element (OSCTXT* pctxt, 
   Ns3_Polyline_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Polyline_element (OSCTXT* pctxt, 
   Ns3_Polyline_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Polyline_element (OSCTXT* pctxt, 
   Ns3_Polyline_element* pvalue);

EXTERN int DOMTest_Ns3_Polyline_element (OSCTXT* pctxt, Ns3_Polyline_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Polyline_element (Ns3_Polyline_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Polyline                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Polyline	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Polyline {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* points;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Polyline_element */
   OSRTDList choice_list;
} Ns3_Polyline;

EXTERN int asn1E_Ns3_Polyline (OSCTXT* pctxt,
   Ns3_Polyline *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Polyline (OSCTXT* pctxt, Ns3_Polyline *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Polyline (OSCTXT* pctxt, Ns3_Polyline* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Polyline (OSCTXT* pctxt, Ns3_Polyline* pvalue);

EXTERN int DOMTest_Ns3_Polyline (OSCTXT* pctxt, Ns3_Polyline* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Polyline (Ns3_Polyline* pvalue);

/**************************************************************/
/*                                                            */
/*  Polygon_element                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Polygon_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Polygon_element_p         1
#define T_Ns3_Polygon_element_list      2

typedef struct EXTERN Ns3_Polygon_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Polygon_element;

EXTERN int asn1E_Ns3_Polygon_element (OSCTXT* pctxt,
   Ns3_Polygon_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Polygon_element (OSCTXT* pctxt, 
   Ns3_Polygon_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Polygon_element (OSCTXT* pctxt, 
   Ns3_Polygon_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Polygon_element (OSCTXT* pctxt, 
   Ns3_Polygon_element* pvalue);

EXTERN int DOMTest_Ns3_Polygon_element (OSCTXT* pctxt, Ns3_Polygon_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Polygon_element (Ns3_Polygon_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Polygon                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Polygon	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Polygon {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* points;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Polygon_element */
   OSRTDList choice_list;
} Ns3_Polygon;

EXTERN int asn1E_Ns3_Polygon (OSCTXT* pctxt,
   Ns3_Polygon *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Polygon (OSCTXT* pctxt, Ns3_Polygon *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Polygon (OSCTXT* pctxt, Ns3_Polygon* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Polygon (OSCTXT* pctxt, Ns3_Polygon* pvalue);

EXTERN int DOMTest_Ns3_Polygon (OSCTXT* pctxt, Ns3_Polygon* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Polygon (Ns3_Polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Regular_polygon_concave                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Regular_polygon_concave	(TM_UNIV|TM_PRIM|10)

typedef enum {
   concave_false_ = 0,
   concave_true_ = 1
} Ns3_Regular_polygon_concave_Root;

typedef OSUINT32 Ns3_Regular_polygon_concave;

EXTERN int asn1E_Ns3_Regular_polygon_concave (OSCTXT* pctxt,
   Ns3_Regular_polygon_concave *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Regular_polygon_concave (OSCTXT* pctxt, 
   Ns3_Regular_polygon_concave *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Regular_polygon_concave (OSCTXT* pctxt, 
   Ns3_Regular_polygon_concave value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Regular_polygon_concave (OSCTXT* pctxt, 
   Ns3_Regular_polygon_concave* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Regular_polygon_concave_ToString (OSINT32 value);

EXTERN int Ns3_Regular_polygon_concave_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Regular_polygon_concave* pvalue);

/**************************************************************/
/*                                                            */
/*  Regular_polygon_element                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Regular_polygon_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Regular_polygon_element_p 1
#define T_Ns3_Regular_polygon_element_list 2

typedef struct EXTERN Ns3_Regular_polygon_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Regular_polygon_element;

EXTERN int asn1E_Ns3_Regular_polygon_element (OSCTXT* pctxt,
   Ns3_Regular_polygon_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Regular_polygon_element (OSCTXT* pctxt, 
   Ns3_Regular_polygon_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Regular_polygon_element (OSCTXT* pctxt, 
   Ns3_Regular_polygon_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Regular_polygon_element (OSCTXT* pctxt, 
   Ns3_Regular_polygon_element* pvalue);

EXTERN int DOMTest_Ns3_Regular_polygon_element (OSCTXT* pctxt, 
   Ns3_Regular_polygon_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Regular_polygon_element (Ns3_Regular_polygon_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Regular_polygon                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Regular_polygon	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Regular_polygon {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned sharpnessPresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Regular_polygon_concave concave;
   OSUINT32 corners;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* sharpness;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Regular_polygon_element */
   OSRTDList choice_list;
} Ns3_Regular_polygon;

EXTERN int asn1E_Ns3_Regular_polygon (OSCTXT* pctxt,
   Ns3_Regular_polygon *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Regular_polygon (OSCTXT* pctxt, 
   Ns3_Regular_polygon *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Regular_polygon (OSCTXT* pctxt, 
   Ns3_Regular_polygon* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Regular_polygon (OSCTXT* pctxt, 
   Ns3_Regular_polygon* pvalue);

EXTERN int DOMTest_Ns3_Regular_polygon (OSCTXT* pctxt, Ns3_Regular_polygon* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Regular_polygon (Ns3_Regular_polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Path_element                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Path_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Path_element_p            1
#define T_Ns3_Path_element_list         2

typedef struct EXTERN Ns3_Path_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Path_element;

EXTERN int asn1E_Ns3_Path_element (OSCTXT* pctxt,
   Ns3_Path_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Path_element (OSCTXT* pctxt, Ns3_Path_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Path_element (OSCTXT* pctxt, Ns3_Path_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Path_element (OSCTXT* pctxt, Ns3_Path_element* pvalue);

EXTERN int DOMTest_Ns3_Path_element (OSCTXT* pctxt, Ns3_Path_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Path_element (Ns3_Path_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Path                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Path	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Path {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* d;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Path_element */
   OSRTDList choice_list;
} Ns3_Path;

EXTERN int asn1E_Ns3_Path (OSCTXT* pctxt,
   Ns3_Path *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Path (OSCTXT* pctxt, Ns3_Path *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Path (OSCTXT* pctxt, Ns3_Path* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Path (OSCTXT* pctxt, Ns3_Path* pvalue);

EXTERN int DOMTest_Ns3_Path (OSCTXT* pctxt, Ns3_Path* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Path (Ns3_Path* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle_kind                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Circle_kind	(TM_UNIV|TM_PRIM|10)

typedef enum {
   kind_arc = 0,
   kind_cut = 1,
   kind_full = 2,
   kind_section = 3
} Ns3_Circle_kind_Root;

typedef OSUINT32 Ns3_Circle_kind;

EXTERN int asn1E_Ns3_Circle_kind (OSCTXT* pctxt,
   Ns3_Circle_kind *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Circle_kind (OSCTXT* pctxt, Ns3_Circle_kind *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Circle_kind (OSCTXT* pctxt, Ns3_Circle_kind value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Circle_kind (OSCTXT* pctxt, Ns3_Circle_kind* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Circle_kind_ToString (OSINT32 value);

EXTERN int Ns3_Circle_kind_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Circle_kind* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle_element                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Circle_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Circle_element_p          1
#define T_Ns3_Circle_element_list       2

typedef struct EXTERN Ns3_Circle_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Circle_element;

EXTERN int asn1E_Ns3_Circle_element (OSCTXT* pctxt,
   Ns3_Circle_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Circle_element (OSCTXT* pctxt, 
   Ns3_Circle_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Circle_element (OSCTXT* pctxt, 
   Ns3_Circle_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Circle_element (OSCTXT* pctxt, 
   Ns3_Circle_element* pvalue);

EXTERN int DOMTest_Ns3_Circle_element (OSCTXT* pctxt, Ns3_Circle_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Circle_element (Ns3_Circle_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Circle                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Circle	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Circle {
   struct {
      unsigned class_namesPresent : 1;
      unsigned end_anglePresent : 1;
      unsigned idPresent : 1;
      unsigned kindPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned start_anglePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned cxPresent : 1;
      unsigned cyPresent : 1;
      unsigned heightPresent : 1;
      unsigned rPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   OSREAL end_angle;
   Ns3_Id id;
   Ns3_Circle_kind kind;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   OSREAL start_angle;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* cx;
   const OSUTF8CHAR* cy;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* r;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Circle_element */
   OSRTDList choice_list;
} Ns3_Circle;

EXTERN int asn1E_Ns3_Circle (OSCTXT* pctxt,
   Ns3_Circle *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Circle (OSCTXT* pctxt, Ns3_Circle *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Circle (OSCTXT* pctxt, Ns3_Circle* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Circle (OSCTXT* pctxt, Ns3_Circle* pvalue);

EXTERN int DOMTest_Ns3_Circle (OSCTXT* pctxt, Ns3_Circle* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Circle (Ns3_Circle* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse_kind                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Ellipse_kind	(TM_UNIV|TM_PRIM|10)

typedef enum {
   kind_arc_1 = 0,
   kind_cut_1 = 1,
   kind_full_1 = 2,
   kind_section_1 = 3
} Ns3_Ellipse_kind_Root;

typedef OSUINT32 Ns3_Ellipse_kind;

EXTERN int asn1E_Ns3_Ellipse_kind (OSCTXT* pctxt,
   Ns3_Ellipse_kind *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Ellipse_kind (OSCTXT* pctxt, Ns3_Ellipse_kind *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Ellipse_kind (OSCTXT* pctxt, Ns3_Ellipse_kind value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Ellipse_kind (OSCTXT* pctxt, Ns3_Ellipse_kind* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Ellipse_kind_ToString (OSINT32 value);

EXTERN int Ns3_Ellipse_kind_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Ellipse_kind* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse_element                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Ellipse_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Ellipse_element_p         1
#define T_Ns3_Ellipse_element_list      2

typedef struct EXTERN Ns3_Ellipse_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Ellipse_element;

EXTERN int asn1E_Ns3_Ellipse_element (OSCTXT* pctxt,
   Ns3_Ellipse_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Ellipse_element (OSCTXT* pctxt, 
   Ns3_Ellipse_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Ellipse_element (OSCTXT* pctxt, 
   Ns3_Ellipse_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Ellipse_element (OSCTXT* pctxt, 
   Ns3_Ellipse_element* pvalue);

EXTERN int DOMTest_Ns3_Ellipse_element (OSCTXT* pctxt, Ns3_Ellipse_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Ellipse_element (Ns3_Ellipse_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Ellipse                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Ellipse	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Ellipse {
   struct {
      unsigned class_namesPresent : 1;
      unsigned end_anglePresent : 1;
      unsigned idPresent : 1;
      unsigned kindPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned start_anglePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned cxPresent : 1;
      unsigned cyPresent : 1;
      unsigned heightPresent : 1;
      unsigned rxPresent : 1;
      unsigned ryPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   OSREAL end_angle;
   Ns3_Id id;
   Ns3_Ellipse_kind kind;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   OSREAL start_angle;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* cx;
   const OSUTF8CHAR* cy;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* rx;
   const OSUTF8CHAR* ry;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Ellipse_element */
   OSRTDList choice_list;
} Ns3_Ellipse;

EXTERN int asn1E_Ns3_Ellipse (OSCTXT* pctxt,
   Ns3_Ellipse *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Ellipse (OSCTXT* pctxt, Ns3_Ellipse *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Ellipse (OSCTXT* pctxt, Ns3_Ellipse* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Ellipse (OSCTXT* pctxt, Ns3_Ellipse* pvalue);

EXTERN int DOMTest_Ns3_Ellipse (OSCTXT* pctxt, Ns3_Ellipse* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Ellipse (Ns3_Ellipse* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_thumbnail                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Page_thumbnail	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Page_thumbnail {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned page_numberPresent : 1;
      unsigned style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_Present : 1;
      unsigned class_names_1Present : 1;
      unsigned placeholderPresent : 1;
      unsigned style_name_1Present : 1;
      unsigned user_transformedPresent : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   OSUINT32 page_number;
   Ns3_Style_name style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   OSUINT32 class_;
   Ns3_Class_names class_names_1;
   OSUINT32 placeholder;
   Ns3_Style_name style_name_1;
   OSUINT32 user_transformed;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
} Ns3_Page_thumbnail;

EXTERN int asn1E_Ns3_Page_thumbnail (OSCTXT* pctxt,
   Ns3_Page_thumbnail *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Page_thumbnail (OSCTXT* pctxt, 
   Ns3_Page_thumbnail *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Page_thumbnail (OSCTXT* pctxt, 
   Ns3_Page_thumbnail* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Page_thumbnail (OSCTXT* pctxt, 
   Ns3_Page_thumbnail* pvalue);

EXTERN int DOMTest_Ns3_Page_thumbnail (OSCTXT* pctxt, Ns3_Page_thumbnail* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Page_thumbnail (Ns3_Page_thumbnail* pvalue);

/**************************************************************/
/*                                                            */
/*  Measure_element                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Measure_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Measure_element_p         1
#define T_Ns3_Measure_element_list      2

typedef struct EXTERN Ns3_Measure_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Measure_element;

EXTERN int asn1E_Ns3_Measure_element (OSCTXT* pctxt,
   Ns3_Measure_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Measure_element (OSCTXT* pctxt, 
   Ns3_Measure_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Measure_element (OSCTXT* pctxt, 
   Ns3_Measure_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Measure_element (OSCTXT* pctxt, 
   Ns3_Measure_element* pvalue);

EXTERN int DOMTest_Ns3_Measure_element (OSCTXT* pctxt, Ns3_Measure_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Measure_element (Ns3_Measure_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Measure                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Measure	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Measure {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* x1;
   const OSUTF8CHAR* x2;
   const OSUTF8CHAR* y1;
   const OSUTF8CHAR* y2;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Measure_element */
   OSRTDList choice_list;
} Ns3_Measure;

EXTERN int asn1E_Ns3_Measure (OSCTXT* pctxt,
   Ns3_Measure *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Measure (OSCTXT* pctxt, Ns3_Measure *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Measure (OSCTXT* pctxt, Ns3_Measure* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Measure (OSCTXT* pctxt, Ns3_Measure* pvalue);

EXTERN int DOMTest_Ns3_Measure (OSCTXT* pctxt, Ns3_Measure* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Measure (Ns3_Measure* pvalue);

/**************************************************************/
/*                                                            */
/*  Caption_element                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Caption_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Caption_element_p         1
#define T_Ns3_Caption_element_list      2

typedef struct EXTERN Ns3_Caption_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Caption_element;

EXTERN int asn1E_Ns3_Caption_element (OSCTXT* pctxt,
   Ns3_Caption_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Caption_element (OSCTXT* pctxt, 
   Ns3_Caption_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Caption_element (OSCTXT* pctxt, 
   Ns3_Caption_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Caption_element (OSCTXT* pctxt, 
   Ns3_Caption_element* pvalue);

EXTERN int DOMTest_Ns3_Caption_element (OSCTXT* pctxt, Ns3_Caption_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Caption_element (Ns3_Caption_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Caption                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Caption	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Caption {
   struct {
      unsigned caption_point_xPresent : 1;
      unsigned caption_point_yPresent : 1;
      unsigned class_namesPresent : 1;
      unsigned corner_radiusPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Caption_point_x caption_point_x;
   Ns3_Caption_point_y caption_point_y;
   Ns3_Class_names class_names;
   Ns3_Corner_radius corner_radius;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Caption_element */
   OSRTDList choice_list;
} Ns3_Caption;

EXTERN int asn1E_Ns3_Caption (OSCTXT* pctxt,
   Ns3_Caption *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Caption (OSCTXT* pctxt, Ns3_Caption *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Caption (OSCTXT* pctxt, Ns3_Caption* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Caption (OSCTXT* pctxt, Ns3_Caption* pvalue);

EXTERN int DOMTest_Ns3_Caption (OSCTXT* pctxt, Ns3_Caption* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Caption (Ns3_Caption* pvalue);

/**************************************************************/
/*                                                            */
/*  Connector_line_skew_element                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Connector_line_skew_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Connector_line_skew_element_alt 1
#define T_Ns3_Connector_line_skew_element_alt_1 2
#define T_Ns3_Connector_line_skew_element_alt_2 3

typedef struct EXTERN Ns3_Connector_line_skew_element {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
      /* t = 3 */
      const OSUTF8CHAR* alt_2;
   } u;
} Ns3_Connector_line_skew_element;

EXTERN int asn1E_Ns3_Connector_line_skew_element (OSCTXT* pctxt,
   Ns3_Connector_line_skew_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Connector_line_skew_element (OSCTXT* pctxt, 
   Ns3_Connector_line_skew_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Connector_line_skew_element (OSCTXT* pctxt, 
   Ns3_Connector_line_skew_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Connector_line_skew_element (OSCTXT* pctxt, 
   Ns3_Connector_line_skew_element* pvalue);

EXTERN int DOMTest_Ns3_Connector_line_skew_element (OSCTXT* pctxt, 
   Ns3_Connector_line_skew_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Connector_line_skew_element (
   Ns3_Connector_line_skew_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Connector_type                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Connector_type	(TM_UNIV|TM_PRIM|10)

typedef enum {
   type_curve = 0,
   type_line = 1,
   type_lines = 2,
   type_standard = 3
} Ns3_Connector_type_Root;

typedef OSUINT32 Ns3_Connector_type;

EXTERN int asn1E_Ns3_Connector_type (OSCTXT* pctxt,
   Ns3_Connector_type *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Connector_type (OSCTXT* pctxt, 
   Ns3_Connector_type *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Connector_type (OSCTXT* pctxt, Ns3_Connector_type value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Connector_type (OSCTXT* pctxt, 
   Ns3_Connector_type* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Connector_type_ToString (OSINT32 value);

EXTERN int Ns3_Connector_type_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Connector_type* pvalue);

/**************************************************************/
/*                                                            */
/*  Connector_element                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Connector_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Connector_element_p       1
#define T_Ns3_Connector_element_list    2

typedef struct EXTERN Ns3_Connector_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Connector_element;

EXTERN int asn1E_Ns3_Connector_element (OSCTXT* pctxt,
   Ns3_Connector_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Connector_element (OSCTXT* pctxt, 
   Ns3_Connector_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Connector_element (OSCTXT* pctxt, 
   Ns3_Connector_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Connector_element (OSCTXT* pctxt, 
   Ns3_Connector_element* pvalue);

EXTERN int DOMTest_Ns3_Connector_element (OSCTXT* pctxt, 
   Ns3_Connector_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Connector_element (Ns3_Connector_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Connector                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Connector	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Connector {
   struct {
      unsigned class_namesPresent : 1;
      unsigned end_glue_pointPresent : 1;
      unsigned end_shapePresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned line_skewPresent : 1;
      unsigned namePresent : 1;
      unsigned start_glue_pointPresent : 1;
      unsigned start_shapePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned typePresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned x1Present : 1;
      unsigned x2Present : 1;
      unsigned y1Present : 1;
      unsigned y2Present : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   OSUINT32 end_glue_point;
   const OSUTF8CHAR* end_shape;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   /* List of Ns3_Connector_line_skew_element */
   OSRTDList line_skew;
   const OSUTF8CHAR* name;
   OSUINT32 start_glue_point;
   const OSUTF8CHAR* start_shape;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Connector_type type;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* x1;
   const OSUTF8CHAR* x2;
   const OSUTF8CHAR* y1;
   const OSUTF8CHAR* y2;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Connector_element */
   OSRTDList choice_list;
} Ns3_Connector;

EXTERN int asn1E_Ns3_Connector (OSCTXT* pctxt,
   Ns3_Connector *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Connector (OSCTXT* pctxt, Ns3_Connector *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Connector (OSCTXT* pctxt, Ns3_Connector* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Connector (OSCTXT* pctxt, Ns3_Connector* pvalue);

EXTERN int DOMTest_Ns3_Connector (OSCTXT* pctxt, Ns3_Connector* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Connector (Ns3_Connector* pvalue);

/**************************************************************/
/*                                                            */
/*  Control                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Control	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Control {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
   } m;
   Ns3_Class_names class_names;
   const OSUTF8CHAR* control;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
} Ns3_Control;

EXTERN int asn1E_Ns3_Control (OSCTXT* pctxt,
   Ns3_Control *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Control (OSCTXT* pctxt, Ns3_Control *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Control (OSCTXT* pctxt, Ns3_Control* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Control (OSCTXT* pctxt, Ns3_Control* pvalue);

EXTERN int DOMTest_Ns3_Control (OSCTXT* pctxt, Ns3_Control* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Control (Ns3_Control* pvalue);

/**************************************************************/
/*                                                            */
/*  Custom_shape_element                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Custom_shape_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Custom_shape_element_p    1
#define T_Ns3_Custom_shape_element_list 2

typedef struct EXTERN Ns3_Custom_shape_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Custom_shape_element;

EXTERN int asn1E_Ns3_Custom_shape_element (OSCTXT* pctxt,
   Ns3_Custom_shape_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Custom_shape_element (OSCTXT* pctxt, 
   Ns3_Custom_shape_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Custom_shape_element (OSCTXT* pctxt, 
   Ns3_Custom_shape_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Custom_shape_element (OSCTXT* pctxt, 
   Ns3_Custom_shape_element* pvalue);

EXTERN int DOMTest_Ns3_Custom_shape_element (OSCTXT* pctxt, 
   Ns3_Custom_shape_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Custom_shape_element (Ns3_Custom_shape_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_concentric_gradient_fill_allowed        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_concentric_gradient_fill_allowed	(TM_UNIV|TM_PRIM|10)

typedef enum {
   concentric_gradient_fill_allowed_false_ = 0,
   concentric_gradient_fill_allowed_true_ = 1
} Ns3_Enhanced_geometry_concentric_gradient_fill_allowed_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_concentric_gradient_fill_allowed;

EXTERN int asn1E_Ns3_Enhanced_geometry_concentric_gradient_fill_allowed (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_concentric_gradient_fill_allowed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_concentric_gradient_fill_allowed (
   OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_concentric_gradient_fill_allowed *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_concentric_gradient_fill_allowed 
   (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_concentric_gradient_fill_allowed value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_concentric_gradient_fill_allowed 
   (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_concentric_gradient_fill_allowed* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_concentric_gradient_fill_allowed_ToString (OSINT32 value);

EXTERN 
   int Ns3_Enhanced_geometry_concentric_gradient_fill_allowed_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      Ns3_Enhanced_geometry_concentric_gradient_fill_allowed* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_false_ = 0,
   extrusion_true_ = 1
} Ns3_Enhanced_geometry_extrusion_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_extrusion_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_extrusion* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_allowed                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_allowed	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_allowed_false_ = 0,
   extrusion_allowed_true_ = 1
} Ns3_Enhanced_geometry_extrusion_allowed_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_allowed;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_allowed (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_allowed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_allowed *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_allowed value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_allowed* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_allowed_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_extrusion_allowed_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_extrusion_allowed* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_color                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_color	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_color_false_ = 0,
   extrusion_color_true_ = 1
} Ns3_Enhanced_geometry_extrusion_color_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_color;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_color (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_color *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_color (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_color *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_color (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_color value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_color (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_color* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_color_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_extrusion_color_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_extrusion_color* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_depth_element                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_depth_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Enhanced_geometry_extrusion_depth_element_alt 1
#define T_Ns3_Enhanced_geometry_extrusion_depth_element_alt_1 2

typedef struct EXTERN Ns3_Enhanced_geometry_extrusion_depth_element {
   int t;
   union {
      /* t = 1 */
      OSREAL alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Enhanced_geometry_extrusion_depth_element;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_depth_element (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_depth_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_depth_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_depth_element *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_depth_element 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_depth_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_depth_element 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_depth_element* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry_extrusion_depth_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_depth_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry_extrusion_depth_element (
   Ns3_Enhanced_geometry_extrusion_depth_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_first_light_harsh             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_first_light_harsh	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_first_light_harsh_false_ = 0,
   extrusion_first_light_harsh_true_ = 1
} Ns3_Enhanced_geometry_extrusion_first_light_harsh_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_first_light_harsh;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_first_light_harsh (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_first_light_harsh *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_first_light_harsh (
   OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_first_light_harsh *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_first_light_harsh 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_first_light_harsh value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_first_light_harsh 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_first_light_harsh* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_first_light_harsh_ToString (OSINT32 value);

EXTERN 
   int Ns3_Enhanced_geometry_extrusion_first_light_harsh_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      Ns3_Enhanced_geometry_extrusion_first_light_harsh* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_light_face                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_light_face	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_light_face_false_ = 0,
   extrusion_light_face_true_ = 1
} Ns3_Enhanced_geometry_extrusion_light_face_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_light_face;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_light_face (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_light_face *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_light_face (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_light_face *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_light_face (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_light_face value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_light_face (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_light_face* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_light_face_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_extrusion_light_face_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_extrusion_light_face* pvalue)
      ;

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_metal                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_metal	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_metal_false_ = 0,
   extrusion_metal_true_ = 1
} Ns3_Enhanced_geometry_extrusion_metal_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_metal;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_metal (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_metal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_metal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_metal *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_metal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_metal value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_metal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_metal* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_metal_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_extrusion_metal_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_extrusion_metal* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_origin_element                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_origin_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Enhanced_geometry_extrusion_origin_element_alt 1

typedef struct EXTERN Ns3_Enhanced_geometry_extrusion_origin_element {
   int t;
   union {
      /* t = 1 */
      OSREAL alt;
   } u;
} Ns3_Enhanced_geometry_extrusion_origin_element;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_origin_element (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_origin_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_origin_element (
   OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_origin_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_origin_element 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_origin_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_origin_element 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_origin_element* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry_extrusion_origin_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_origin_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry_extrusion_origin_element (
   Ns3_Enhanced_geometry_extrusion_origin_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_rotation_angle_element        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_rotation_angle_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Enhanced_geometry_extrusion_rotation_angle_element_alt 1

typedef struct EXTERN Ns3_Enhanced_geometry_extrusion_rotation_angle_element {
   int t;
   union {
      /* t = 1 */
      OSREAL alt;
   } u;
} Ns3_Enhanced_geometry_extrusion_rotation_angle_element;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_rotation_angle_element (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_rotation_angle_element (
   OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_rotation_angle_element 
   (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_rotation_angle_element 
   (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry_extrusion_rotation_angle_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry_extrusion_rotation_angle_element (
   Ns3_Enhanced_geometry_extrusion_rotation_angle_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_second_light_harsh            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_second_light_harsh	(TM_UNIV|TM_PRIM|10)

typedef enum {
   extrusion_second_light_harsh_false_ = 0,
   extrusion_second_light_harsh_true_ = 1
} Ns3_Enhanced_geometry_extrusion_second_light_harsh_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_extrusion_second_light_harsh;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_second_light_harsh (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_second_light_harsh *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_second_light_harsh (
   OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_second_light_harsh *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_second_light_harsh 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_second_light_harsh value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_second_light_harsh 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_extrusion_second_light_harsh* pvalue)
   ;

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_extrusion_second_light_harsh_ToString (OSINT32 value);

EXTERN 
   int Ns3_Enhanced_geometry_extrusion_second_light_harsh_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      Ns3_Enhanced_geometry_extrusion_second_light_harsh* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_extrusion_skew_element                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_extrusion_skew_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Enhanced_geometry_extrusion_skew_element_alt 1

typedef struct EXTERN Ns3_Enhanced_geometry_extrusion_skew_element {
   int t;
   union {
      /* t = 1 */
      OSREAL alt;
   } u;
} Ns3_Enhanced_geometry_extrusion_skew_element;

EXTERN int asn1E_Ns3_Enhanced_geometry_extrusion_skew_element (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_extrusion_skew_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_extrusion_skew_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_skew_element *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_extrusion_skew_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_skew_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_extrusion_skew_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_skew_element* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry_extrusion_skew_element (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_extrusion_skew_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry_extrusion_skew_element (
   Ns3_Enhanced_geometry_extrusion_skew_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_glue_point_type                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_glue_point_type	(TM_UNIV|TM_PRIM|10)

typedef enum {
   glue_point_type_none = 0,
   glue_point_type_rectangle = 1,
   glue_point_type_segments = 2
} Ns3_Enhanced_geometry_glue_point_type_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_glue_point_type;

EXTERN int asn1E_Ns3_Enhanced_geometry_glue_point_type (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_glue_point_type *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_glue_point_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_glue_point_type *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_glue_point_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_glue_point_type value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_glue_point_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_glue_point_type* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_glue_point_type_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_glue_point_type_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_glue_point_type* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_mirror_horizontal                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_mirror_horizontal	(TM_UNIV|TM_PRIM|10)

typedef enum {
   mirror_horizontal_false_ = 0,
   mirror_horizontal_true_ = 1
} Ns3_Enhanced_geometry_mirror_horizontal_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_mirror_horizontal;

EXTERN int asn1E_Ns3_Enhanced_geometry_mirror_horizontal (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_mirror_horizontal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_horizontal *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_horizontal value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_horizontal* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_mirror_horizontal_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_mirror_horizontal_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_mirror_horizontal* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_mirror_vertical                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_mirror_vertical	(TM_UNIV|TM_PRIM|10)

typedef enum {
   mirror_vertical_false_ = 0,
   mirror_vertical_true_ = 1
} Ns3_Enhanced_geometry_mirror_vertical_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_mirror_vertical;

EXTERN int asn1E_Ns3_Enhanced_geometry_mirror_vertical (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_mirror_vertical *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_vertical *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_vertical value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_mirror_vertical* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_mirror_vertical_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_mirror_vertical_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_mirror_vertical* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_text_path                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_text_path	(TM_UNIV|TM_PRIM|10)

typedef enum {
   text_path_false_ = 0,
   text_path_true_ = 1
} Ns3_Enhanced_geometry_text_path_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_text_path;

EXTERN int asn1E_Ns3_Enhanced_geometry_text_path (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_text_path *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_text_path (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_text_path (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_text_path (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_text_path_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_text_path_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_text_path* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_text_path_allowed                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_text_path_allowed	(TM_UNIV|TM_PRIM|10)

typedef enum {
   text_path_allowed_false_ = 0,
   text_path_allowed_true_ = 1
} Ns3_Enhanced_geometry_text_path_allowed_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_text_path_allowed;

EXTERN int asn1E_Ns3_Enhanced_geometry_text_path_allowed (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_text_path_allowed *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_text_path_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_allowed *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_text_path_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_allowed value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_text_path_allowed (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_allowed* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_text_path_allowed_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_text_path_allowed_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_text_path_allowed* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_text_path_mode                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_text_path_mode	(TM_UNIV|TM_PRIM|10)

typedef enum {
   text_path_mode_normal = 0,
   text_path_mode_path = 1,
   text_path_mode_shape = 2
} Ns3_Enhanced_geometry_text_path_mode_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_text_path_mode;

EXTERN int asn1E_Ns3_Enhanced_geometry_text_path_mode (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_text_path_mode *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_text_path_mode (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_mode *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_text_path_mode (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_mode value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_text_path_mode (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_mode* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_text_path_mode_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_text_path_mode_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_text_path_mode* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_text_path_same_letter_heights           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_text_path_same_letter_heights	(TM_UNIV|TM_PRIM|10)

typedef enum {
   text_path_same_letter_heights_false_ = 0,
   text_path_same_letter_heights_true_ = 1
} Ns3_Enhanced_geometry_text_path_same_letter_heights_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_text_path_same_letter_heights;

EXTERN int asn1E_Ns3_Enhanced_geometry_text_path_same_letter_heights (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_text_path_same_letter_heights *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_text_path_same_letter_heights (
   OSCTXT* pctxt, Ns3_Enhanced_geometry_text_path_same_letter_heights *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_text_path_same_letter_heights 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_text_path_same_letter_heights value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_text_path_same_letter_heights 
   (OSCTXT* pctxt, Ns3_Enhanced_geometry_text_path_same_letter_heights* pvalue)
   ;

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_text_path_same_letter_heights_ToString (OSINT32 value);

EXTERN 
   int Ns3_Enhanced_geometry_text_path_same_letter_heights_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, 
      Ns3_Enhanced_geometry_text_path_same_letter_heights* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_text_path_scale                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_text_path_scale	(TM_UNIV|TM_PRIM|10)

typedef enum {
   text_path_scale_path = 0,
   text_path_scale_shape = 1
} Ns3_Enhanced_geometry_text_path_scale_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_text_path_scale;

EXTERN int asn1E_Ns3_Enhanced_geometry_text_path_scale (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_text_path_scale *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_text_path_scale (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_scale *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_text_path_scale (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_scale value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_text_path_scale (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_text_path_scale* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_text_path_scale_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_text_path_scale_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_text_path_scale* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_type_alt_1                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_type_alt_1	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_1_non_primitive = 0
} Ns3_Enhanced_geometry_type_alt_1_Root;

typedef OSUINT32 Ns3_Enhanced_geometry_type_alt_1;

EXTERN int asn1E_Ns3_Enhanced_geometry_type_alt_1 (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_type_alt_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_type_alt_1 (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type_alt_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_type_alt_1 (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type_alt_1 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_type_alt_1 (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type_alt_1* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Enhanced_geometry_type_alt_1_ToString (OSINT32 value);

EXTERN int Ns3_Enhanced_geometry_type_alt_1_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Enhanced_geometry_type_alt_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry_type                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry_type	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Enhanced_geometry_type_alt 1
#define T_Ns3_Enhanced_geometry_type_alt_1 2

typedef struct Ns3_Enhanced_geometry_type {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      Ns3_Enhanced_geometry_type_alt_1 alt_1;
   } u;
} Ns3_Enhanced_geometry_type;

EXTERN int asn1E_Ns3_Enhanced_geometry_type (OSCTXT* pctxt,
   Ns3_Enhanced_geometry_type *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry_type (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry_type* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry_type (Ns3_Enhanced_geometry_type* pvalue);

/**************************************************************/
/*                                                            */
/*  Equation                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Equation	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Equation {
   struct {
      unsigned formulaPresent : 1;
      unsigned namePresent : 1;
   } m;
   const OSUTF8CHAR* formula;
   const OSUTF8CHAR* name;
} Ns3_Equation;

EXTERN int asn1E_Ns3_Equation (OSCTXT* pctxt,
   Ns3_Equation *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Equation (OSCTXT* pctxt, Ns3_Equation *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Equation (OSCTXT* pctxt, Ns3_Equation* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Equation (OSCTXT* pctxt, Ns3_Equation* pvalue);

EXTERN int DOMTest_Ns3_Equation (OSCTXT* pctxt, Ns3_Equation* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Equation (Ns3_Equation* pvalue);

/**************************************************************/
/*                                                            */
/*  Handle_handle_mirror_horizontal                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Handle_handle_mirror_horizontal	(TM_UNIV|TM_PRIM|10)

typedef enum {
   handle_mirror_horizontal_false_ = 0,
   handle_mirror_horizontal_true_ = 1
} Ns3_Handle_handle_mirror_horizontal_Root;

typedef OSUINT32 Ns3_Handle_handle_mirror_horizontal;

EXTERN int asn1E_Ns3_Handle_handle_mirror_horizontal (OSCTXT* pctxt,
   Ns3_Handle_handle_mirror_horizontal *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Handle_handle_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_horizontal *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Handle_handle_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_horizontal value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Handle_handle_mirror_horizontal (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_horizontal* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Handle_handle_mirror_horizontal_ToString (OSINT32 value);

EXTERN int Ns3_Handle_handle_mirror_horizontal_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Handle_handle_mirror_horizontal* pvalue);

/**************************************************************/
/*                                                            */
/*  Handle_handle_mirror_vertical                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Handle_handle_mirror_vertical	(TM_UNIV|TM_PRIM|10)

typedef enum {
   handle_mirror_vertical_false_ = 0,
   handle_mirror_vertical_true_ = 1
} Ns3_Handle_handle_mirror_vertical_Root;

typedef OSUINT32 Ns3_Handle_handle_mirror_vertical;

EXTERN int asn1E_Ns3_Handle_handle_mirror_vertical (OSCTXT* pctxt,
   Ns3_Handle_handle_mirror_vertical *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Handle_handle_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_vertical *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Handle_handle_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_vertical value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Handle_handle_mirror_vertical (OSCTXT* pctxt, 
   Ns3_Handle_handle_mirror_vertical* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Handle_handle_mirror_vertical_ToString (OSINT32 value);

EXTERN int Ns3_Handle_handle_mirror_vertical_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Handle_handle_mirror_vertical* pvalue);

/**************************************************************/
/*                                                            */
/*  Handle_handle_switched                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Handle_handle_switched	(TM_UNIV|TM_PRIM|10)

typedef enum {
   handle_switched_false_ = 0,
   handle_switched_true_ = 1
} Ns3_Handle_handle_switched_Root;

typedef OSUINT32 Ns3_Handle_handle_switched;

EXTERN int asn1E_Ns3_Handle_handle_switched (OSCTXT* pctxt,
   Ns3_Handle_handle_switched *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Handle_handle_switched (OSCTXT* pctxt, 
   Ns3_Handle_handle_switched *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Handle_handle_switched (OSCTXT* pctxt, 
   Ns3_Handle_handle_switched value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Handle_handle_switched (OSCTXT* pctxt, 
   Ns3_Handle_handle_switched* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Handle_handle_switched_ToString (OSINT32 value);

EXTERN int Ns3_Handle_handle_switched_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Handle_handle_switched* pvalue);

/**************************************************************/
/*                                                            */
/*  Handle                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Handle	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Handle {
   struct {
      unsigned handle_mirror_horizontalPresent : 1;
      unsigned handle_mirror_verticalPresent : 1;
      unsigned handle_polarPresent : 1;
      unsigned handle_radius_range_maximumPresent : 1;
      unsigned handle_radius_range_minimumPresent : 1;
      unsigned handle_range_x_maximumPresent : 1;
      unsigned handle_range_x_minimumPresent : 1;
      unsigned handle_range_y_maximumPresent : 1;
      unsigned handle_range_y_minimumPresent : 1;
      unsigned handle_switchedPresent : 1;
   } m;
   Ns3_Handle_handle_mirror_horizontal handle_mirror_horizontal;
   Ns3_Handle_handle_mirror_vertical handle_mirror_vertical;
   const OSUTF8CHAR* handle_polar;
   const OSUTF8CHAR* handle_position;
   const OSUTF8CHAR* handle_radius_range_maximum;
   const OSUTF8CHAR* handle_radius_range_minimum;
   const OSUTF8CHAR* handle_range_x_maximum;
   const OSUTF8CHAR* handle_range_x_minimum;
   const OSUTF8CHAR* handle_range_y_maximum;
   const OSUTF8CHAR* handle_range_y_minimum;
   Ns3_Handle_handle_switched handle_switched;
} Ns3_Handle;

EXTERN int asn1E_Ns3_Handle (OSCTXT* pctxt,
   Ns3_Handle *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Handle (OSCTXT* pctxt, Ns3_Handle *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Handle (OSCTXT* pctxt, Ns3_Handle* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Handle (OSCTXT* pctxt, Ns3_Handle* pvalue);

EXTERN int DOMTest_Ns3_Handle (OSCTXT* pctxt, Ns3_Handle* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Handle (Ns3_Handle* pvalue);

/**************************************************************/
/*                                                            */
/*  Enhanced_geometry                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Enhanced_geometry	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Enhanced_geometry {
   struct {
      unsigned projectionPresent : 1;
      unsigned shade_modePresent : 1;
      unsigned concentric_gradient_fill_allowedPresent : 1;
      unsigned enhanced_pathPresent : 1;
      unsigned extrusionPresent : 1;
      unsigned extrusion_allowedPresent : 1;
      unsigned extrusion_brightnessPresent : 1;
      unsigned extrusion_colorPresent : 1;
      unsigned extrusion_depthPresent : 1;
      unsigned extrusion_diffusionPresent : 1;
      unsigned extrusion_first_light_directionPresent : 1;
      unsigned extrusion_first_light_harshPresent : 1;
      unsigned extrusion_first_light_levelPresent : 1;
      unsigned extrusion_light_facePresent : 1;
      unsigned extrusion_metalPresent : 1;
      unsigned extrusion_number_of_line_segmentsPresent : 1;
      unsigned extrusion_originPresent : 1;
      unsigned extrusion_rotation_anglePresent : 1;
      unsigned extrusion_rotation_centerPresent : 1;
      unsigned extrusion_second_light_directionPresent : 1;
      unsigned extrusion_second_light_harshPresent : 1;
      unsigned extrusion_second_light_levelPresent : 1;
      unsigned extrusion_shininessPresent : 1;
      unsigned extrusion_skewPresent : 1;
      unsigned extrusion_specularityPresent : 1;
      unsigned extrusion_viewpointPresent : 1;
      unsigned glue_point_leaving_directionsPresent : 1;
      unsigned glue_point_typePresent : 1;
      unsigned glue_pointsPresent : 1;
      unsigned mirror_horizontalPresent : 1;
      unsigned mirror_verticalPresent : 1;
      unsigned modifiersPresent : 1;
      unsigned path_stretchpoint_xPresent : 1;
      unsigned path_stretchpoint_yPresent : 1;
      unsigned text_areasPresent : 1;
      unsigned text_pathPresent : 1;
      unsigned text_path_allowedPresent : 1;
      unsigned text_path_modePresent : 1;
      unsigned text_path_same_letter_heightsPresent : 1;
      unsigned text_path_scalePresent : 1;
      unsigned text_rotate_anglePresent : 1;
      unsigned typePresent : 1;
      unsigned viewBoxPresent : 1;
   } m;
   OSUINT32 projection;
   OSUINT32 shade_mode;
   Ns3_Enhanced_geometry_concentric_gradient_fill_allowed concentric_gradient_fill_allowed;
   const OSUTF8CHAR* enhanced_path;
   Ns3_Enhanced_geometry_extrusion extrusion;
   Ns3_Enhanced_geometry_extrusion_allowed extrusion_allowed;
   const OSUTF8CHAR* extrusion_brightness;
   Ns3_Enhanced_geometry_extrusion_color extrusion_color;
   /* List of Ns3_Enhanced_geometry_extrusion_depth_element */
   OSRTDList extrusion_depth;
   const OSUTF8CHAR* extrusion_diffusion;
   const OSUTF8CHAR* extrusion_first_light_direction;
   Ns3_Enhanced_geometry_extrusion_first_light_harsh extrusion_first_light_harsh;
   const OSUTF8CHAR* extrusion_first_light_level;
   Ns3_Enhanced_geometry_extrusion_light_face extrusion_light_face;
   Ns3_Enhanced_geometry_extrusion_metal extrusion_metal;
   OSINT32 extrusion_number_of_line_segments;
   /* List of Ns3_Enhanced_geometry_extrusion_origin_element */
   OSRTDList extrusion_origin;
   /* List of Ns3_Enhanced_geometry_extrusion_rotation_angle_element */
   OSRTDList extrusion_rotation_angle;
   const OSUTF8CHAR* extrusion_rotation_center;
   const OSUTF8CHAR* extrusion_second_light_direction;
   Ns3_Enhanced_geometry_extrusion_second_light_harsh extrusion_second_light_harsh;
   const OSUTF8CHAR* extrusion_second_light_level;
   const OSUTF8CHAR* extrusion_shininess;
   /* List of Ns3_Enhanced_geometry_extrusion_skew_element */
   OSRTDList extrusion_skew;
   const OSUTF8CHAR* extrusion_specularity;
   const OSUTF8CHAR* extrusion_viewpoint;
   const OSUTF8CHAR* glue_point_leaving_directions;
   Ns3_Enhanced_geometry_glue_point_type glue_point_type;
   const OSUTF8CHAR* glue_points;
   Ns3_Enhanced_geometry_mirror_horizontal mirror_horizontal;
   Ns3_Enhanced_geometry_mirror_vertical mirror_vertical;
   const OSUTF8CHAR* modifiers;
   OSREAL path_stretchpoint_x;
   OSREAL path_stretchpoint_y;
   const OSUTF8CHAR* text_areas;
   Ns3_Enhanced_geometry_text_path text_path;
   Ns3_Enhanced_geometry_text_path_allowed text_path_allowed;
   Ns3_Enhanced_geometry_text_path_mode text_path_mode;
   Ns3_Enhanced_geometry_text_path_same_letter_heights text_path_same_letter_heights;
   Ns3_Enhanced_geometry_text_path_scale text_path_scale;
   OSREAL text_rotate_angle;
   Ns3_Enhanced_geometry_type type;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   /* List of Ns3_Equation */
   OSRTDList equation_list;
   /* List of Ns3_Handle */
   OSRTDList handle_list;
} Ns3_Enhanced_geometry;

EXTERN int asn1E_Ns3_Enhanced_geometry (OSCTXT* pctxt,
   Ns3_Enhanced_geometry *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Enhanced_geometry (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Enhanced_geometry (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Enhanced_geometry (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry* pvalue);

EXTERN int DOMTest_Ns3_Enhanced_geometry (OSCTXT* pctxt, 
   Ns3_Enhanced_geometry* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Enhanced_geometry (Ns3_Enhanced_geometry* pvalue);

/**************************************************************/
/*                                                            */
/*  Custom_shape                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Custom_shape	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Custom_shape {
   struct {
      unsigned class_namesPresent : 1;
      unsigned dataPresent : 1;
      unsigned enginePresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
      unsigned enhanced_geometryPresent : 1;
   } m;
   Ns3_Class_names class_names;
   const OSUTF8CHAR* data;
   const OSUTF8CHAR* engine;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_Custom_shape_element */
   OSRTDList choice_list;
   Ns3_Enhanced_geometry enhanced_geometry;
} Ns3_Custom_shape;

EXTERN int asn1E_Ns3_Custom_shape (OSCTXT* pctxt,
   Ns3_Custom_shape *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Custom_shape (OSCTXT* pctxt, Ns3_Custom_shape *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Custom_shape (OSCTXT* pctxt, Ns3_Custom_shape* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Custom_shape (OSCTXT* pctxt, Ns3_Custom_shape* pvalue);

EXTERN int DOMTest_Ns3_Custom_shape (OSCTXT* pctxt, Ns3_Custom_shape* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Custom_shape (Ns3_Custom_shape* pvalue);

/**************************************************************/
/*                                                            */
/*  A_actuate                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_A_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onRequest_1 = 0
} Ns3_A_actuate_Root;

typedef OSUINT32 Ns3_A_actuate;

EXTERN int asn1E_Ns3_A_actuate (OSCTXT* pctxt,
   Ns3_A_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_A_actuate (OSCTXT* pctxt, Ns3_A_actuate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_A_actuate (OSCTXT* pctxt, Ns3_A_actuate value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_A_actuate (OSCTXT* pctxt, Ns3_A_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_A_actuate_ToString (OSINT32 value);

EXTERN int Ns3_A_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_A_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  A_show                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_A_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_new__1 = 0,
   show_replace_1 = 1
} Ns3_A_show_Root;

typedef OSUINT32 Ns3_A_show;

EXTERN int asn1E_Ns3_A_show (OSCTXT* pctxt,
   Ns3_A_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_A_show (OSCTXT* pctxt, Ns3_A_show *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_A_show (OSCTXT* pctxt, Ns3_A_show value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_A_show (OSCTXT* pctxt, Ns3_A_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_A_show_ToString (OSINT32 value);

EXTERN int Ns3_A_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_A_show* pvalue);

/**************************************************************/
/*                                                            */
/*  A                                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_A	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_A {
   struct {
      unsigned actuatePresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned namePresent : 1;
      unsigned server_mapPresent : 1;
      unsigned target_frame_namePresent : 1;
   } m;
   Ns3_A_actuate actuate;
   Xlink_Href href;
   Ns3_A_show show;
   Xlink_Type type;
   const OSUTF8CHAR* name;
   OSUINT32 server_map;
   struct Ns13_Target_frame_name *target_frame_name;
   struct Ns3_Frame *frame;
} Ns3_A;

EXTERN int asn1E_Ns3_A (OSCTXT* pctxt,
   Ns3_A *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_A (OSCTXT* pctxt, Ns3_A *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_A (OSCTXT* pctxt, Ns3_A* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_A (OSCTXT* pctxt, Ns3_A* pvalue);

EXTERN int DOMTest_Ns3_A (OSCTXT* pctxt, Ns3_A* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_A (Ns3_A* pvalue);

/**************************************************************/
/*                                                            */
/*  Text_box_element                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Text_box_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Text_box_element_h        1
#define T_Ns3_Text_box_element_p        2
#define T_Ns3_Text_box_element_list     3
#define T_Ns3_Text_box_element_numbered_paragraph 4
#define T_Ns3_Text_box_element_table    5
#define T_Ns3_Text_box_element_a        6
#define T_Ns3_Text_box_element_section  7
#define T_Ns3_Text_box_element_table_of_content 8
#define T_Ns3_Text_box_element_illustration_index 9
#define T_Ns3_Text_box_element_table_index 10
#define T_Ns3_Text_box_element_object_index 11
#define T_Ns3_Text_box_element_user_index 12
#define T_Ns3_Text_box_element_alphabetical_index 13
#define T_Ns3_Text_box_element_bibliography 14
#define T_Ns3_Text_box_element_rect     15
#define T_Ns3_Text_box_element_line     16
#define T_Ns3_Text_box_element_polyline 17
#define T_Ns3_Text_box_element_polygon  18
#define T_Ns3_Text_box_element_regular_polygon 19
#define T_Ns3_Text_box_element_path     20
#define T_Ns3_Text_box_element_circle   21
#define T_Ns3_Text_box_element_ellipse  22
#define T_Ns3_Text_box_element_g        23
#define T_Ns3_Text_box_element_page_thumbnail 24
#define T_Ns3_Text_box_element_frame    25
#define T_Ns3_Text_box_element_measure  26
#define T_Ns3_Text_box_element_caption  27
#define T_Ns3_Text_box_element_connector 28
#define T_Ns3_Text_box_element_control  29
#define T_Ns3_Text_box_element_scene    30
#define T_Ns3_Text_box_element_custom_shape 31
#define T_Ns3_Text_box_element_change   32
#define T_Ns3_Text_box_element_change_start 33
#define T_Ns3_Text_box_element_change_end 34

typedef struct EXTERN Ns3_Text_box_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_H *h;
      /* t = 2 */
      struct Odf_P *p;
      /* t = 3 */
      struct Odf_List *list;
      /* t = 4 */
      struct Odf_Numbered_paragraph *numbered_paragraph;
      /* t = 5 */
      struct Table *table;
      /* t = 6 */
      Ns3_A *a;
      /* t = 7 */
      struct Odf_Section *section;
      /* t = 8 */
      struct Odf_Table_of_content *table_of_content;
      /* t = 9 */
      struct Odf_Illustration_index *illustration_index;
      /* t = 10 */
      struct Odf_Table_index *table_index;
      /* t = 11 */
      struct Odf_Object_index *object_index;
      /* t = 12 */
      struct Odf_User_index *user_index;
      /* t = 13 */
      struct Odf_Alphabetical_index *alphabetical_index;
      /* t = 14 */
      struct Odf_Bibliography *bibliography;
      /* t = 15 */
      Ns3_Rect *rect;
      /* t = 16 */
      Ns3_Line *line;
      /* t = 17 */
      Ns3_Polyline *polyline;
      /* t = 18 */
      Ns3_Polygon *polygon;
      /* t = 19 */
      Ns3_Regular_polygon *regular_polygon;
      /* t = 20 */
      Ns3_Path *path;
      /* t = 21 */
      Ns3_Circle *circle;
      /* t = 22 */
      Ns3_Ellipse *ellipse;
      /* t = 23 */
      struct Ns3_G *g;
      /* t = 24 */
      Ns3_Page_thumbnail *page_thumbnail;
      /* t = 25 */
      struct Ns3_Frame *frame;
      /* t = 26 */
      Ns3_Measure *measure;
      /* t = 27 */
      Ns3_Caption *caption;
      /* t = 28 */
      Ns3_Connector *connector;
      /* t = 29 */
      Ns3_Control *control;
      /* t = 30 */
      struct Ns7_Scene *scene;
      /* t = 31 */
      Ns3_Custom_shape *custom_shape;
      /* t = 32 */
      struct Odf_Change *change;
      /* t = 33 */
      struct Odf_Change_start *change_start;
      /* t = 34 */
      struct Odf_Change_end *change_end;
   } u;
} Ns3_Text_box_element;

EXTERN int asn1E_Ns3_Text_box_element (OSCTXT* pctxt,
   Ns3_Text_box_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Text_box_element (OSCTXT* pctxt, 
   Ns3_Text_box_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Text_box_element (OSCTXT* pctxt, 
   Ns3_Text_box_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Text_box_element (OSCTXT* pctxt, 
   Ns3_Text_box_element* pvalue);

EXTERN int DOMTest_Ns3_Text_box_element (OSCTXT* pctxt, Ns3_Text_box_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Text_box_element (Ns3_Text_box_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Text_box                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Text_box	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Text_box {
   struct {
      unsigned chain_next_namePresent : 1;
      unsigned corner_radiusPresent : 1;
      unsigned max_heightPresent : 1;
      unsigned max_widthPresent : 1;
      unsigned min_heightPresent : 1;
      unsigned min_widthPresent : 1;
   } m;
   const OSUTF8CHAR* chain_next_name;
   Ns3_Corner_radius corner_radius;
   Ns1_Max_height max_height;
   Ns1_Max_width max_width;
   Ns1_Min_height min_height;
   Ns1_Min_width min_width;
   /* List of Ns3_Text_box_element */
   OSRTDList choice_list;
} Ns3_Text_box;

EXTERN int asn1E_Ns3_Text_box (OSCTXT* pctxt,
   Ns3_Text_box *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Text_box (OSCTXT* pctxt, Ns3_Text_box *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Text_box (OSCTXT* pctxt, Ns3_Text_box* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Text_box (OSCTXT* pctxt, Ns3_Text_box* pvalue);

EXTERN int DOMTest_Ns3_Text_box (OSCTXT* pctxt, Ns3_Text_box* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Text_box (Ns3_Text_box* pvalue);

/**************************************************************/
/*                                                            */
/*  Image_actuate                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_2 = 0
} Ns3_Image_actuate_Root;

typedef OSUINT32 Ns3_Image_actuate;

EXTERN int asn1E_Ns3_Image_actuate (OSCTXT* pctxt,
   Ns3_Image_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image_actuate (OSCTXT* pctxt, Ns3_Image_actuate *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image_actuate (OSCTXT* pctxt, Ns3_Image_actuate value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image_actuate (OSCTXT* pctxt, Ns3_Image_actuate* pvalue)
   ;

EXTERN const OSUTF8CHAR* Ns3_Image_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Image_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Image_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Image_show                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_3 = 0
} Ns3_Image_show_Root;

typedef OSUINT32 Ns3_Image_show;

EXTERN int asn1E_Ns3_Image_show (OSCTXT* pctxt,
   Ns3_Image_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image_show (OSCTXT* pctxt, Ns3_Image_show *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image_show (OSCTXT* pctxt, Ns3_Image_show value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image_show (OSCTXT* pctxt, Ns3_Image_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Image_show_ToString (OSINT32 value);

EXTERN int Ns3_Image_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Image_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Image_element                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Image_element_p           1
#define T_Ns3_Image_element_list        2

typedef struct EXTERN Ns3_Image_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_P *p;
      /* t = 2 */
      struct Odf_List *list;
   } u;
} Ns3_Image_element;

EXTERN int asn1E_Ns3_Image_element (OSCTXT* pctxt,
   Ns3_Image_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image_element (OSCTXT* pctxt, Ns3_Image_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image_element (OSCTXT* pctxt, Ns3_Image_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image_element (OSCTXT* pctxt, Ns3_Image_element* pvalue)
   ;

EXTERN int DOMTest_Ns3_Image_element (OSCTXT* pctxt, Ns3_Image_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Image_element (Ns3_Image_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Image                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Image {
   struct {
      unsigned actuatePresent : 1;
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned filter_namePresent : 1;
      unsigned binary_dataPresent : 1;
   } m;
   Ns3_Image_actuate actuate;
   Xlink_Href href;
   Ns3_Image_show show;
   Xlink_Type type;
   const OSUTF8CHAR* filter_name;
   ASN1DynOctStr binary_data;
   /* List of Ns3_Image_element */
   OSRTDList choice_list;
} Ns3_Image;

EXTERN int asn1E_Ns3_Image (OSCTXT* pctxt,
   Ns3_Image *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image (OSCTXT* pctxt, Ns3_Image *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image (OSCTXT* pctxt, Ns3_Image* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image (OSCTXT* pctxt, Ns3_Image* pvalue);

EXTERN int DOMTest_Ns3_Image (OSCTXT* pctxt, Ns3_Image* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Image (Ns3_Image* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_actuate                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_3 = 0
} Ns3_Object_actuate_Root;

typedef OSUINT32 Ns3_Object_actuate;

EXTERN int asn1E_Ns3_Object_actuate (OSCTXT* pctxt,
   Ns3_Object_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_actuate (OSCTXT* pctxt, 
   Ns3_Object_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_actuate (OSCTXT* pctxt, Ns3_Object_actuate value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_actuate (OSCTXT* pctxt, 
   Ns3_Object_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Object_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Object_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Object_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_show                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_4 = 0
} Ns3_Object_show_Root;

typedef OSUINT32 Ns3_Object_show;

EXTERN int asn1E_Ns3_Object_show (OSCTXT* pctxt,
   Ns3_Object_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_show (OSCTXT* pctxt, Ns3_Object_show *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_show (OSCTXT* pctxt, Ns3_Object_show value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_show (OSCTXT* pctxt, Ns3_Object_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Object_show_ToString (OSINT32 value);

EXTERN int Ns3_Object_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Object_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Gradient_style                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Gradient_style	(TM_UNIV|TM_PRIM|10)

typedef enum {
   style_axial = 0,
   style_ellipsoid = 1,
   style_linear = 2,
   style_radial = 3,
   style_rectangular = 4,
   style_square = 5
} Ns3_Gradient_style_Root;

typedef OSUINT32 Ns3_Gradient_style;

EXTERN int asn1E_Ns3_Gradient_style (OSCTXT* pctxt,
   Ns3_Gradient_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Gradient_style (OSCTXT* pctxt, 
   Ns3_Gradient_style *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Gradient_style (OSCTXT* pctxt, Ns3_Gradient_style value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Gradient_style (OSCTXT* pctxt, 
   Ns3_Gradient_style* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Gradient_style_ToString (OSINT32 value);

EXTERN int Ns3_Gradient_style_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Gradient_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Gradient                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Gradient	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Gradient {
   struct {
      unsigned anglePresent : 1;
      unsigned borderPresent : 1;
      unsigned cxPresent : 1;
      unsigned cyPresent : 1;
      unsigned display_namePresent : 1;
      unsigned end_colorPresent : 1;
      unsigned end_intensityPresent : 1;
      unsigned namePresent : 1;
      unsigned start_colorPresent : 1;
      unsigned start_intensityPresent : 1;
   } m;
   OSINT32 angle;
   const OSUTF8CHAR* border;
   const OSUTF8CHAR* cx;
   const OSUTF8CHAR* cy;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* end_color;
   const OSUTF8CHAR* end_intensity;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* start_color;
   const OSUTF8CHAR* start_intensity;
   Ns3_Gradient_style style;
} Ns3_Gradient;

EXTERN int asn1E_Ns3_Gradient (OSCTXT* pctxt,
   Ns3_Gradient *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Gradient (OSCTXT* pctxt, Ns3_Gradient *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Gradient (OSCTXT* pctxt, Ns3_Gradient* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Gradient (OSCTXT* pctxt, Ns3_Gradient* pvalue);

EXTERN int DOMTest_Ns3_Gradient (OSCTXT* pctxt, Ns3_Gradient* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Gradient (Ns3_Gradient* pvalue);

/**************************************************************/
/*                                                            */
/*  Color                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Color	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Color;

EXTERN int asn1E_Ns3_Color (OSCTXT* pctxt,
   Ns3_Color pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Color (OSCTXT* pctxt, Ns3_Color *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Color (OSCTXT* pctxt, Ns3_Color value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Color (OSCTXT* pctxt, Ns3_Color* pvalue);

/**************************************************************/
/*                                                            */
/*  Hatch_style                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Hatch_style	(TM_UNIV|TM_PRIM|10)

typedef enum {
   style_double_ = 0,
   style_single = 1,
   style_triple = 2
} Ns3_Hatch_style_Root;

typedef OSUINT32 Ns3_Hatch_style;

EXTERN int asn1E_Ns3_Hatch_style (OSCTXT* pctxt,
   Ns3_Hatch_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Hatch_style (OSCTXT* pctxt, Ns3_Hatch_style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Hatch_style (OSCTXT* pctxt, Ns3_Hatch_style value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Hatch_style (OSCTXT* pctxt, Ns3_Hatch_style* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Hatch_style_ToString (OSINT32 value);

EXTERN int Ns3_Hatch_style_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Hatch_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Hatch                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Hatch	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Hatch {
   struct {
      unsigned colorPresent : 1;
      unsigned display_namePresent : 1;
      unsigned distancePresent : 1;
      unsigned rotationPresent : 1;
   } m;
   Ns3_Color color;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* distance;
   const OSUTF8CHAR* name;
   OSINT32 rotation;
   Ns3_Hatch_style style;
} Ns3_Hatch;

EXTERN int asn1E_Ns3_Hatch (OSCTXT* pctxt,
   Ns3_Hatch *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Hatch (OSCTXT* pctxt, Ns3_Hatch *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Hatch (OSCTXT* pctxt, Ns3_Hatch* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Hatch (OSCTXT* pctxt, Ns3_Hatch* pvalue);

EXTERN int DOMTest_Ns3_Hatch (OSCTXT* pctxt, Ns3_Hatch* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Hatch (Ns3_Hatch* pvalue);

/**************************************************************/
/*                                                            */
/*  Fill_image_actuate                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Fill_image_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_1 = 0
} Ns3_Fill_image_actuate_Root;

typedef OSUINT32 Ns3_Fill_image_actuate;

EXTERN int asn1E_Ns3_Fill_image_actuate (OSCTXT* pctxt,
   Ns3_Fill_image_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Fill_image_actuate (OSCTXT* pctxt, 
   Ns3_Fill_image_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Fill_image_actuate (OSCTXT* pctxt, 
   Ns3_Fill_image_actuate value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Fill_image_actuate (OSCTXT* pctxt, 
   Ns3_Fill_image_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Fill_image_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Fill_image_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Fill_image_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Fill_image_show                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Fill_image_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_2 = 0
} Ns3_Fill_image_show_Root;

typedef OSUINT32 Ns3_Fill_image_show;

EXTERN int asn1E_Ns3_Fill_image_show (OSCTXT* pctxt,
   Ns3_Fill_image_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Fill_image_show (OSCTXT* pctxt, 
   Ns3_Fill_image_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Fill_image_show (OSCTXT* pctxt, 
   Ns3_Fill_image_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Fill_image_show (OSCTXT* pctxt, 
   Ns3_Fill_image_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Fill_image_show_ToString (OSINT32 value);

EXTERN int Ns3_Fill_image_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Fill_image_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Fill_image                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Fill_image	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Fill_image {
   struct {
      unsigned actuatePresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned display_namePresent : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
   } m;
   Ns3_Fill_image_actuate actuate;
   Xlink_Href href;
   Ns3_Fill_image_show show;
   Xlink_Type type;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
} Ns3_Fill_image;

EXTERN int asn1E_Ns3_Fill_image (OSCTXT* pctxt,
   Ns3_Fill_image *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Fill_image (OSCTXT* pctxt, Ns3_Fill_image *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Fill_image (OSCTXT* pctxt, Ns3_Fill_image* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Fill_image (OSCTXT* pctxt, Ns3_Fill_image* pvalue);

EXTERN int DOMTest_Ns3_Fill_image (OSCTXT* pctxt, Ns3_Fill_image* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Fill_image (Ns3_Fill_image* pvalue);

/**************************************************************/
/*                                                            */
/*  Marker                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Marker	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Marker {
   struct {
      unsigned display_namePresent : 1;
   } m;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* d;
   /* List of ViewBox_element */
   OSRTDList viewBox;
} Ns3_Marker;

EXTERN int asn1E_Ns3_Marker (OSCTXT* pctxt,
   Ns3_Marker *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Marker (OSCTXT* pctxt, Ns3_Marker *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Marker (OSCTXT* pctxt, Ns3_Marker* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Marker (OSCTXT* pctxt, Ns3_Marker* pvalue);

EXTERN int DOMTest_Ns3_Marker (OSCTXT* pctxt, Ns3_Marker* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Marker (Ns3_Marker* pvalue);

/**************************************************************/
/*                                                            */
/*  Stroke_dash_style                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Stroke_dash_style	(TM_UNIV|TM_PRIM|10)

typedef enum {
   style_rect = 0,
   style_round = 1
} Ns3_Stroke_dash_style_Root;

typedef OSUINT32 Ns3_Stroke_dash_style;

EXTERN int asn1E_Ns3_Stroke_dash_style (OSCTXT* pctxt,
   Ns3_Stroke_dash_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Stroke_dash_style (OSCTXT* pctxt, 
   Ns3_Stroke_dash_style *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Stroke_dash_style (OSCTXT* pctxt, 
   Ns3_Stroke_dash_style value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Stroke_dash_style (OSCTXT* pctxt, 
   Ns3_Stroke_dash_style* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Stroke_dash_style_ToString (OSINT32 value);

EXTERN int Ns3_Stroke_dash_style_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Stroke_dash_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Stroke_dash                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Stroke_dash	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Stroke_dash {
   struct {
      unsigned display_namePresent : 1;
      unsigned distancePresent : 1;
      unsigned dots1Present : 1;
      unsigned dots1_lengthPresent : 1;
      unsigned dots2Present : 1;
      unsigned dots2_lengthPresent : 1;
      unsigned stylePresent : 1;
   } m;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* distance;
   OSINT32 dots1;
   const OSUTF8CHAR* dots1_length;
   OSINT32 dots2;
   const OSUTF8CHAR* dots2_length;
   const OSUTF8CHAR* name;
   Ns3_Stroke_dash_style style;
} Ns3_Stroke_dash;

EXTERN int asn1E_Ns3_Stroke_dash (OSCTXT* pctxt,
   Ns3_Stroke_dash *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Stroke_dash (OSCTXT* pctxt, Ns3_Stroke_dash *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Stroke_dash (OSCTXT* pctxt, Ns3_Stroke_dash* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Stroke_dash (OSCTXT* pctxt, Ns3_Stroke_dash* pvalue);

EXTERN int DOMTest_Ns3_Stroke_dash (OSCTXT* pctxt, Ns3_Stroke_dash* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Stroke_dash (Ns3_Stroke_dash* pvalue);

/**************************************************************/
/*                                                            */
/*  Opacity_style                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Opacity_style	(TM_UNIV|TM_PRIM|10)

typedef enum {
   style_axial_1 = 0,
   style_ellipsoid_1 = 1,
   style_linear_1 = 2,
   style_radial_1 = 3,
   style_rectangular_1 = 4,
   style_square_1 = 5
} Ns3_Opacity_style_Root;

typedef OSUINT32 Ns3_Opacity_style;

EXTERN int asn1E_Ns3_Opacity_style (OSCTXT* pctxt,
   Ns3_Opacity_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Opacity_style (OSCTXT* pctxt, Ns3_Opacity_style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Opacity_style (OSCTXT* pctxt, Ns3_Opacity_style value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Opacity_style (OSCTXT* pctxt, Ns3_Opacity_style* pvalue)
   ;

EXTERN const OSUTF8CHAR* Ns3_Opacity_style_ToString (OSINT32 value);

EXTERN int Ns3_Opacity_style_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Opacity_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Opacity                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Opacity	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Opacity {
   struct {
      unsigned anglePresent : 1;
      unsigned borderPresent : 1;
      unsigned cxPresent : 1;
      unsigned cyPresent : 1;
      unsigned display_namePresent : 1;
      unsigned endPresent : 1;
      unsigned namePresent : 1;
      unsigned startPresent : 1;
   } m;
   OSINT32 angle;
   const OSUTF8CHAR* border;
   const OSUTF8CHAR* cx;
   const OSUTF8CHAR* cy;
   Ns3_Display_name display_name;
   const OSUTF8CHAR* end;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* start;
   Ns3_Opacity_style style;
} Ns3_Opacity;

EXTERN int asn1E_Ns3_Opacity (OSCTXT* pctxt,
   Ns3_Opacity *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Opacity (OSCTXT* pctxt, Ns3_Opacity *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Opacity (OSCTXT* pctxt, Ns3_Opacity* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Opacity (OSCTXT* pctxt, Ns3_Opacity* pvalue);

EXTERN int DOMTest_Ns3_Opacity (OSCTXT* pctxt, Ns3_Opacity* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Opacity (Ns3_Opacity* pvalue);

/**************************************************************/
/*                                                            */
/*  G                                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_G	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_G {
   struct {
      unsigned class_namesPresent : 1;
      unsigned idPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_names_1Present : 1;
      unsigned style_name_1Present : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Ns3_Class_names class_names;
   Ns3_Id id;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Z_index z_index;
   Ns3_Class_names class_names_1;
   Ns3_Style_name style_name_1;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   /* List of Ns3_G_element */
   OSRTDList choice_list;
} Ns3_G;

EXTERN int asn1E_Ns3_G (OSCTXT* pctxt,
   Ns3_G *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_G (OSCTXT* pctxt, Ns3_G *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_G (OSCTXT* pctxt, Ns3_G* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_G (OSCTXT* pctxt, Ns3_G* pvalue);

EXTERN int DOMTest_Ns3_G (OSCTXT* pctxt, Ns3_G* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_G (Ns3_G* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_rectangle_show                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_rectangle_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_new__2 = 0,
   show_replace_2 = 1
} Ns3_Area_rectangle_show_Root;

typedef OSUINT32 Ns3_Area_rectangle_show;

EXTERN int asn1E_Ns3_Area_rectangle_show (OSCTXT* pctxt,
   Ns3_Area_rectangle_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_rectangle_show (OSCTXT* pctxt, 
   Ns3_Area_rectangle_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_rectangle_show (OSCTXT* pctxt, 
   Ns3_Area_rectangle_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_rectangle_show (OSCTXT* pctxt, 
   Ns3_Area_rectangle_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_rectangle_show_ToString (OSINT32 value);

EXTERN int Ns3_Area_rectangle_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_rectangle_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_rectangle_nohref                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_rectangle_nohref	(TM_UNIV|TM_PRIM|10)

typedef enum {
   nohref_nohref = 0
} Ns3_Area_rectangle_nohref_Root;

typedef OSUINT32 Ns3_Area_rectangle_nohref;

EXTERN int asn1E_Ns3_Area_rectangle_nohref (OSCTXT* pctxt,
   Ns3_Area_rectangle_nohref *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_rectangle_nohref (OSCTXT* pctxt, 
   Ns3_Area_rectangle_nohref *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_rectangle_nohref (OSCTXT* pctxt, 
   Ns3_Area_rectangle_nohref value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_rectangle_nohref (OSCTXT* pctxt, 
   Ns3_Area_rectangle_nohref* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_rectangle_nohref_ToString (OSINT32 value);

EXTERN int Ns3_Area_rectangle_nohref_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_rectangle_nohref* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_rectangle                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_rectangle	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Area_rectangle {
   struct {
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned nohrefPresent : 1;
      unsigned namePresent : 1;
      unsigned target_frame_namePresent : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned descPresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Xlink_Href href;
   Ns3_Area_rectangle_show show;
   Xlink_Type type;
   Ns3_Area_rectangle_nohref nohref;
   const OSUTF8CHAR* name;
   struct Ns13_Target_frame_name *target_frame_name;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* desc;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
} Ns3_Area_rectangle;

EXTERN int asn1E_Ns3_Area_rectangle (OSCTXT* pctxt,
   Ns3_Area_rectangle *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_rectangle (OSCTXT* pctxt, 
   Ns3_Area_rectangle *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_rectangle (OSCTXT* pctxt, 
   Ns3_Area_rectangle* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_rectangle (OSCTXT* pctxt, 
   Ns3_Area_rectangle* pvalue);

EXTERN int DOMTest_Ns3_Area_rectangle (OSCTXT* pctxt, Ns3_Area_rectangle* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Area_rectangle (Ns3_Area_rectangle* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_circle_show                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_circle_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_new__3 = 0,
   show_replace_3 = 1
} Ns3_Area_circle_show_Root;

typedef OSUINT32 Ns3_Area_circle_show;

EXTERN int asn1E_Ns3_Area_circle_show (OSCTXT* pctxt,
   Ns3_Area_circle_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_circle_show (OSCTXT* pctxt, 
   Ns3_Area_circle_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_circle_show (OSCTXT* pctxt, 
   Ns3_Area_circle_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_circle_show (OSCTXT* pctxt, 
   Ns3_Area_circle_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_circle_show_ToString (OSINT32 value);

EXTERN int Ns3_Area_circle_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_circle_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_circle_nohref                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_circle_nohref	(TM_UNIV|TM_PRIM|10)

typedef enum {
   nohref_nohref_1 = 0
} Ns3_Area_circle_nohref_Root;

typedef OSUINT32 Ns3_Area_circle_nohref;

EXTERN int asn1E_Ns3_Area_circle_nohref (OSCTXT* pctxt,
   Ns3_Area_circle_nohref *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_circle_nohref (OSCTXT* pctxt, 
   Ns3_Area_circle_nohref *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_circle_nohref (OSCTXT* pctxt, 
   Ns3_Area_circle_nohref value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_circle_nohref (OSCTXT* pctxt, 
   Ns3_Area_circle_nohref* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_circle_nohref_ToString (OSINT32 value);

EXTERN int Ns3_Area_circle_nohref_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_circle_nohref* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_circle                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_circle	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Area_circle {
   struct {
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned nohrefPresent : 1;
      unsigned namePresent : 1;
      unsigned target_frame_namePresent : 1;
      unsigned descPresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Xlink_Href href;
   Ns3_Area_circle_show show;
   Xlink_Type type;
   Ns3_Area_circle_nohref nohref;
   const OSUTF8CHAR* name;
   struct Ns13_Target_frame_name *target_frame_name;
   const OSUTF8CHAR* cx;
   const OSUTF8CHAR* cy;
   const OSUTF8CHAR* r;
   const OSUTF8CHAR* desc;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
} Ns3_Area_circle;

EXTERN int asn1E_Ns3_Area_circle (OSCTXT* pctxt,
   Ns3_Area_circle *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_circle (OSCTXT* pctxt, Ns3_Area_circle *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_circle (OSCTXT* pctxt, Ns3_Area_circle* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_circle (OSCTXT* pctxt, Ns3_Area_circle* pvalue);

EXTERN int DOMTest_Ns3_Area_circle (OSCTXT* pctxt, Ns3_Area_circle* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Area_circle (Ns3_Area_circle* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_polygon_show                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_polygon_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_new__4 = 0,
   show_replace_4 = 1
} Ns3_Area_polygon_show_Root;

typedef OSUINT32 Ns3_Area_polygon_show;

EXTERN int asn1E_Ns3_Area_polygon_show (OSCTXT* pctxt,
   Ns3_Area_polygon_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_polygon_show (OSCTXT* pctxt, 
   Ns3_Area_polygon_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_polygon_show (OSCTXT* pctxt, 
   Ns3_Area_polygon_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_polygon_show (OSCTXT* pctxt, 
   Ns3_Area_polygon_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_polygon_show_ToString (OSINT32 value);

EXTERN int Ns3_Area_polygon_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_polygon_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_polygon_nohref                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_polygon_nohref	(TM_UNIV|TM_PRIM|10)

typedef enum {
   nohref_nohref_2 = 0
} Ns3_Area_polygon_nohref_Root;

typedef OSUINT32 Ns3_Area_polygon_nohref;

EXTERN int asn1E_Ns3_Area_polygon_nohref (OSCTXT* pctxt,
   Ns3_Area_polygon_nohref *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_polygon_nohref (OSCTXT* pctxt, 
   Ns3_Area_polygon_nohref *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_polygon_nohref (OSCTXT* pctxt, 
   Ns3_Area_polygon_nohref value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_polygon_nohref (OSCTXT* pctxt, 
   Ns3_Area_polygon_nohref* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Area_polygon_nohref_ToString (OSINT32 value);

EXTERN int Ns3_Area_polygon_nohref_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Area_polygon_nohref* pvalue);

/**************************************************************/
/*                                                            */
/*  Area_polygon                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Area_polygon	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Area_polygon {
   struct {
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned nohrefPresent : 1;
      unsigned namePresent : 1;
      unsigned target_frame_namePresent : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned descPresent : 1;
      unsigned event_listenersPresent : 1;
   } m;
   Xlink_Href href;
   Ns3_Area_polygon_show show;
   Xlink_Type type;
   Ns3_Area_polygon_nohref nohref;
   const OSUTF8CHAR* points;
   const OSUTF8CHAR* name;
   struct Ns13_Target_frame_name *target_frame_name;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* desc;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
} Ns3_Area_polygon;

EXTERN int asn1E_Ns3_Area_polygon (OSCTXT* pctxt,
   Ns3_Area_polygon *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Area_polygon (OSCTXT* pctxt, Ns3_Area_polygon *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Area_polygon (OSCTXT* pctxt, Ns3_Area_polygon* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Area_polygon (OSCTXT* pctxt, Ns3_Area_polygon* pvalue);

EXTERN int DOMTest_Ns3_Area_polygon (OSCTXT* pctxt, Ns3_Area_polygon* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Area_polygon (Ns3_Area_polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Image_map_element                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image_map_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Image_map_element_area_rectangle 1
#define T_Ns3_Image_map_element_area_circle 2
#define T_Ns3_Image_map_element_area_polygon 3

typedef struct EXTERN Ns3_Image_map_element {
   int t;
   union {
      /* t = 1 */
      Ns3_Area_rectangle *area_rectangle;
      /* t = 2 */
      Ns3_Area_circle *area_circle;
      /* t = 3 */
      Ns3_Area_polygon *area_polygon;
   } u;
} Ns3_Image_map_element;

EXTERN int asn1E_Ns3_Image_map_element (OSCTXT* pctxt,
   Ns3_Image_map_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image_map_element (OSCTXT* pctxt, 
   Ns3_Image_map_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image_map_element (OSCTXT* pctxt, 
   Ns3_Image_map_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image_map_element (OSCTXT* pctxt, 
   Ns3_Image_map_element* pvalue);

EXTERN int DOMTest_Ns3_Image_map_element (OSCTXT* pctxt, 
   Ns3_Image_map_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Image_map_element (Ns3_Image_map_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Image_map                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Image_map	(TM_UNIV|TM_CONS|16)

/* List of Ns3_Image_map_element */
typedef OSRTDList Ns3_Image_map;

EXTERN int asn1E_Ns3_Image_map (OSCTXT* pctxt,
   Ns3_Image_map *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Image_map (OSCTXT* pctxt, Ns3_Image_map *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Image_map (OSCTXT* pctxt, Ns3_Image_map* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Image_map (OSCTXT* pctxt, Ns3_Image_map* pvalue);

EXTERN int DOMTest_Ns3_Image_map (OSCTXT* pctxt, Ns3_Image_map* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Image_map (Ns3_Image_map* pvalue);

/**************************************************************/
/*                                                            */
/*  Contour_polygon_recreate_on_edit                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Contour_polygon_recreate_on_edit	(TM_UNIV|TM_PRIM|10)

typedef enum {
   recreate_on_edit_false_ = 0,
   recreate_on_edit_true_ = 1
} Ns3_Contour_polygon_recreate_on_edit_Root;

typedef OSUINT32 Ns3_Contour_polygon_recreate_on_edit;

EXTERN int asn1E_Ns3_Contour_polygon_recreate_on_edit (OSCTXT* pctxt,
   Ns3_Contour_polygon_recreate_on_edit *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Contour_polygon_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_polygon_recreate_on_edit *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns3_Contour_polygon_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_polygon_recreate_on_edit value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Contour_polygon_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_polygon_recreate_on_edit* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Contour_polygon_recreate_on_edit_ToString (OSINT32 value);

EXTERN int Ns3_Contour_polygon_recreate_on_edit_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Contour_polygon_recreate_on_edit* pvalue);

/**************************************************************/
/*                                                            */
/*  Contour_polygon                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Contour_polygon	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Contour_polygon {
   struct {
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
   } m;
   const OSUTF8CHAR* points;
   Ns3_Contour_polygon_recreate_on_edit recreate_on_edit;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
} Ns3_Contour_polygon;

EXTERN int asn1E_Ns3_Contour_polygon (OSCTXT* pctxt,
   Ns3_Contour_polygon *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Contour_polygon (OSCTXT* pctxt, 
   Ns3_Contour_polygon *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Contour_polygon (OSCTXT* pctxt, 
   Ns3_Contour_polygon* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Contour_polygon (OSCTXT* pctxt, 
   Ns3_Contour_polygon* pvalue);

EXTERN int DOMTest_Ns3_Contour_polygon (OSCTXT* pctxt, Ns3_Contour_polygon* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Contour_polygon (Ns3_Contour_polygon* pvalue);

/**************************************************************/
/*                                                            */
/*  Contour_path_recreate_on_edit                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Contour_path_recreate_on_edit	(TM_UNIV|TM_PRIM|10)

typedef enum {
   recreate_on_edit_false__1 = 0,
   recreate_on_edit_true__1 = 1
} Ns3_Contour_path_recreate_on_edit_Root;

typedef OSUINT32 Ns3_Contour_path_recreate_on_edit;

EXTERN int asn1E_Ns3_Contour_path_recreate_on_edit (OSCTXT* pctxt,
   Ns3_Contour_path_recreate_on_edit *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Contour_path_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_path_recreate_on_edit *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Contour_path_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_path_recreate_on_edit value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Contour_path_recreate_on_edit (OSCTXT* pctxt, 
   Ns3_Contour_path_recreate_on_edit* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Contour_path_recreate_on_edit_ToString (OSINT32 value);

EXTERN int Ns3_Contour_path_recreate_on_edit_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Contour_path_recreate_on_edit* pvalue);

/**************************************************************/
/*                                                            */
/*  Contour_path                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Contour_path	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Contour_path {
   struct {
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
   } m;
   Ns3_Contour_path_recreate_on_edit recreate_on_edit;
   const OSUTF8CHAR* d;
   const OSUTF8CHAR* height;
   /* List of ViewBox_element */
   OSRTDList viewBox;
   const OSUTF8CHAR* width;
} Ns3_Contour_path;

EXTERN int asn1E_Ns3_Contour_path (OSCTXT* pctxt,
   Ns3_Contour_path *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Contour_path (OSCTXT* pctxt, Ns3_Contour_path *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Contour_path (OSCTXT* pctxt, Ns3_Contour_path* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Contour_path (OSCTXT* pctxt, Ns3_Contour_path* pvalue);

EXTERN int DOMTest_Ns3_Contour_path (OSCTXT* pctxt, Ns3_Contour_path* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Contour_path (Ns3_Contour_path* pvalue);

/**************************************************************/
/*                                                            */
/*  Frame_choice_1                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Frame_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Frame_choice_1_contour_polygon 1
#define T_Ns3_Frame_choice_1_contour_path 2

typedef struct EXTERN Ns3_Frame_choice_1 {
   int t;
   union {
      /* t = 1 */
      Ns3_Contour_polygon *contour_polygon;
      /* t = 2 */
      Ns3_Contour_path *contour_path;
   } u;
} Ns3_Frame_choice_1;

EXTERN int asn1E_Ns3_Frame_choice_1 (OSCTXT* pctxt,
   Ns3_Frame_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Frame_choice_1 (OSCTXT* pctxt, 
   Ns3_Frame_choice_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Frame_choice_1 (OSCTXT* pctxt, 
   Ns3_Frame_choice_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Frame_choice_1 (OSCTXT* pctxt, 
   Ns3_Frame_choice_1* pvalue);

EXTERN int DOMTest_Ns3_Frame_choice_1 (OSCTXT* pctxt, Ns3_Frame_choice_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Frame_choice_1 (Ns3_Frame_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Frame                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Frame	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Frame {
   struct {
      unsigned class_namesPresent : 1;
      unsigned copy_ofPresent : 1;
      unsigned idPresent : 1;
      unsigned layerPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned text_style_namePresent : 1;
      unsigned transformPresent : 1;
      unsigned z_indexPresent : 1;
      unsigned class_Present : 1;
      unsigned class_names_1Present : 1;
      unsigned placeholderPresent : 1;
      unsigned style_name_1Present : 1;
      unsigned user_transformedPresent : 1;
      unsigned rel_heightPresent : 1;
      unsigned rel_widthPresent : 1;
      unsigned heightPresent : 1;
      unsigned widthPresent : 1;
      unsigned xPresent : 1;
      unsigned yPresent : 1;
      unsigned end_cell_addressPresent : 1;
      unsigned end_xPresent : 1;
      unsigned end_yPresent : 1;
      unsigned table_backgroundPresent : 1;
      unsigned anchor_page_numberPresent : 1;
      unsigned anchor_typePresent : 1;
      unsigned event_listenersPresent : 1;
      unsigned image_mapPresent : 1;
      unsigned descPresent : 1;
      unsigned choice_1Present : 1;
   } m;
   Ns3_Class_names class_names;
   const OSUTF8CHAR* copy_of;
   Ns3_Id id;
   Ns3_Layer_1 layer;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   Ns3_Text_style_name text_style_name;
   Ns3_Transform transform;
   Ns3_Z_index z_index;
   OSUINT32 class_;
   Ns3_Class_names class_names_1;
   OSUINT32 placeholder;
   Ns3_Style_name style_name_1;
   OSUINT32 user_transformed;
   struct Ns8_Rel_height *rel_height;
   struct Ns8_Rel_width *rel_width;
   const OSUTF8CHAR* height;
   const OSUTF8CHAR* width;
   const OSUTF8CHAR* x;
   const OSUTF8CHAR* y;
   const OSUTF8CHAR* end_cell_address;
   const OSUTF8CHAR* end_x;
   const OSUTF8CHAR* end_y;
   OSUINT32 table_background;
   OSUINT32 anchor_page_number;
   OSUINT32 anchor_type;
   /* List of Ns3_Frame_element */
   OSRTDList choice_list;
   /* List of Ns13_Event_listeners_element */
   OSRTDList event_listeners;
   /* List of Ns3_Glue_point */
   OSRTDList glue_point_list;
   Ns3_Image_map image_map;
   const OSUTF8CHAR* desc;
   Ns3_Frame_choice_1 choice_1;
} Ns3_Frame;

EXTERN int asn1E_Ns3_Frame (OSCTXT* pctxt,
   Ns3_Frame *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Frame (OSCTXT* pctxt, Ns3_Frame *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Frame (OSCTXT* pctxt, Ns3_Frame* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Frame (OSCTXT* pctxt, Ns3_Frame* pvalue);

EXTERN int DOMTest_Ns3_Frame (OSCTXT* pctxt, Ns3_Frame* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Frame (Ns3_Frame* pvalue);

/**************************************************************/
/*                                                            */
/*  Layer_display                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Layer_display	(TM_UNIV|TM_PRIM|10)

typedef enum {
   display_always = 0,
   display_none_4 = 1,
   display_printer = 2,
   display_screen = 3
} Ns3_Layer_display_Root;

typedef OSUINT32 Ns3_Layer_display;

EXTERN int asn1E_Ns3_Layer_display (OSCTXT* pctxt,
   Ns3_Layer_display *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Layer_display (OSCTXT* pctxt, Ns3_Layer_display *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Layer_display (OSCTXT* pctxt, Ns3_Layer_display value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Layer_display (OSCTXT* pctxt, Ns3_Layer_display* pvalue)
   ;

EXTERN const OSUTF8CHAR* Ns3_Layer_display_ToString (OSINT32 value);

EXTERN int Ns3_Layer_display_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Layer_display* pvalue);

/**************************************************************/
/*                                                            */
/*  Layer_protected_                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Layer_protected_	(TM_UNIV|TM_PRIM|10)

typedef enum {
   protected__false__9 = 0,
   protected__true__9 = 1
} Ns3_Layer_protected__Root;

typedef OSUINT32 Ns3_Layer_protected_;

EXTERN int asn1E_Ns3_Layer_protected_ (OSCTXT* pctxt,
   Ns3_Layer_protected_ *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Layer_protected_ (OSCTXT* pctxt, 
   Ns3_Layer_protected_ *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Layer_protected_ (OSCTXT* pctxt, 
   Ns3_Layer_protected_ value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Layer_protected_ (OSCTXT* pctxt, 
   Ns3_Layer_protected_* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Layer_protected__ToString (OSINT32 value);

EXTERN int Ns3_Layer_protected__ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Layer_protected_* pvalue);

/**************************************************************/
/*                                                            */
/*  Layer                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Layer	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Layer {
   struct {
      unsigned displayPresent : 1;
      unsigned protected_Present : 1;
   } m;
   Ns3_Layer_display display;
   const OSUTF8CHAR* name;
   Ns3_Layer_protected_ protected_;
} Ns3_Layer;

EXTERN int asn1E_Ns3_Layer (OSCTXT* pctxt,
   Ns3_Layer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Layer (OSCTXT* pctxt, Ns3_Layer *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Layer (OSCTXT* pctxt, Ns3_Layer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Layer (OSCTXT* pctxt, Ns3_Layer* pvalue);

EXTERN int DOMTest_Ns3_Layer (OSCTXT* pctxt, Ns3_Layer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Layer (Ns3_Layer* pvalue);

/**************************************************************/
/*                                                            */
/*  Layer_set                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Layer_set	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Layer_set {
   /* List of Ns3_Layer */
   OSRTDList layer_list;
} Ns3_Layer_set;

EXTERN int asn1E_Ns3_Layer_set (OSCTXT* pctxt,
   Ns3_Layer_set *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Layer_set (OSCTXT* pctxt, Ns3_Layer_set *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Layer_set (OSCTXT* pctxt, Ns3_Layer_set* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Layer_set (OSCTXT* pctxt, Ns3_Layer_set* pvalue);

EXTERN int DOMTest_Ns3_Layer_set (OSCTXT* pctxt, Ns3_Layer_set* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Layer_set (Ns3_Layer_set* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_master_page_name                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Page_master_page_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Page_master_page_name_alt 1
#define T_Ns3_Page_master_page_name_alt_1 2

typedef struct Ns3_Page_master_page_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns3_Page_master_page_name;

EXTERN int asn1E_Ns3_Page_master_page_name (OSCTXT* pctxt,
   Ns3_Page_master_page_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Page_master_page_name (OSCTXT* pctxt, 
   Ns3_Page_master_page_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Page_master_page_name (OSCTXT* pctxt, 
   Ns3_Page_master_page_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Page_master_page_name (OSCTXT* pctxt, 
   Ns3_Page_master_page_name* pvalue);

EXTERN int DOMTest_Ns3_Page_master_page_name (OSCTXT* pctxt, 
   Ns3_Page_master_page_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Page_master_page_name (Ns3_Page_master_page_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_element                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Page_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Page_element_rect         1
#define T_Ns3_Page_element_line         2
#define T_Ns3_Page_element_polyline     3
#define T_Ns3_Page_element_polygon      4
#define T_Ns3_Page_element_regular_polygon 5
#define T_Ns3_Page_element_path         6
#define T_Ns3_Page_element_circle       7
#define T_Ns3_Page_element_ellipse      8
#define T_Ns3_Page_element_g            9
#define T_Ns3_Page_element_page_thumbnail 10
#define T_Ns3_Page_element_frame        11
#define T_Ns3_Page_element_measure      12
#define T_Ns3_Page_element_caption      13
#define T_Ns3_Page_element_connector    14
#define T_Ns3_Page_element_control      15
#define T_Ns3_Page_element_scene        16
#define T_Ns3_Page_element_custom_shape 17

typedef struct EXTERN Ns3_Page_element {
   int t;
   union {
      /* t = 1 */
      Ns3_Rect *rect;
      /* t = 2 */
      Ns3_Line *line;
      /* t = 3 */
      Ns3_Polyline *polyline;
      /* t = 4 */
      Ns3_Polygon *polygon;
      /* t = 5 */
      Ns3_Regular_polygon *regular_polygon;
      /* t = 6 */
      Ns3_Path *path;
      /* t = 7 */
      Ns3_Circle *circle;
      /* t = 8 */
      Ns3_Ellipse *ellipse;
      /* t = 9 */
      Ns3_G *g;
      /* t = 10 */
      Ns3_Page_thumbnail *page_thumbnail;
      /* t = 11 */
      Ns3_Frame *frame;
      /* t = 12 */
      Ns3_Measure *measure;
      /* t = 13 */
      Ns3_Caption *caption;
      /* t = 14 */
      Ns3_Connector *connector;
      /* t = 15 */
      Ns3_Control *control;
      /* t = 16 */
      struct Ns7_Scene *scene;
      /* t = 17 */
      Ns3_Custom_shape *custom_shape;
   } u;
} Ns3_Page_element;

EXTERN int asn1E_Ns3_Page_element (OSCTXT* pctxt,
   Ns3_Page_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Page_element (OSCTXT* pctxt, Ns3_Page_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Page_element (OSCTXT* pctxt, Ns3_Page_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Page_element (OSCTXT* pctxt, Ns3_Page_element* pvalue);

EXTERN int DOMTest_Ns3_Page_element (OSCTXT* pctxt, Ns3_Page_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Page_element (Ns3_Page_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Shape_id                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Shape_id	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns3_Shape_id;

EXTERN int asn1E_Ns3_Shape_id (OSCTXT* pctxt,
   Ns3_Shape_id pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Shape_id (OSCTXT* pctxt, Ns3_Shape_id *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Shape_id (OSCTXT* pctxt, Ns3_Shape_id value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Shape_id (OSCTXT* pctxt, Ns3_Shape_id* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_choice_1                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Page_choice_1	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Page_choice_1_animations  1
#define T_Ns3_Page_choice_1_animate     2
#define T_Ns3_Page_choice_1_set         3
#define T_Ns3_Page_choice_1_animateMotion 4
#define T_Ns3_Page_choice_1_animateColor 5
#define T_Ns3_Page_choice_1_animateTransform 6
#define T_Ns3_Page_choice_1_transitionFilter 7
#define T_Ns3_Page_choice_1_par         8
#define T_Ns3_Page_choice_1_seq         9
#define T_Ns3_Page_choice_1_iterate     10
#define T_Ns3_Page_choice_1_audio       11
#define T_Ns3_Page_choice_1_command     12

typedef struct EXTERN Ns3_Page_choice_1 {
   int t;
   union {
      /* t = 1 */
      /* List of Ns10_Animations_element */
      OSRTDList *animations;
      /* t = 2 */
      struct Animate *animate;
      /* t = 3 */
      struct Set *set;
      /* t = 4 */
      struct AnimateMotion *animateMotion;
      /* t = 5 */
      struct AnimateColor *animateColor;
      /* t = 6 */
      struct AnimateTransform *animateTransform;
      /* t = 7 */
      struct TransitionFilter *transitionFilter;
      /* t = 8 */
      struct Par *par;
      /* t = 9 */
      struct Seq *seq;
      /* t = 10 */
      struct Iterate *iterate;
      /* t = 11 */
      struct Audio *audio;
      /* t = 12 */
      struct Command *command;
   } u;
} Ns3_Page_choice_1;

EXTERN int asn1E_Ns3_Page_choice_1 (OSCTXT* pctxt,
   Ns3_Page_choice_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Page_choice_1 (OSCTXT* pctxt, Ns3_Page_choice_1 *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Page_choice_1 (OSCTXT* pctxt, Ns3_Page_choice_1* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Page_choice_1 (OSCTXT* pctxt, Ns3_Page_choice_1* pvalue)
   ;

EXTERN int DOMTest_Ns3_Page_choice_1 (OSCTXT* pctxt, Ns3_Page_choice_1* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Page_choice_1 (Ns3_Page_choice_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Page                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Page	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Page {
   struct {
      unsigned idPresent : 1;
      unsigned namePresent : 1;
      unsigned style_namePresent : 1;
      unsigned presentation_page_layout_namePresent : 1;
      unsigned use_date_time_namePresent : 1;
      unsigned use_footer_namePresent : 1;
      unsigned use_header_namePresent : 1;
      unsigned formsPresent : 1;
      unsigned choice_1Present : 1;
      unsigned notesPresent : 1;
   } m;
   Ns3_Id id;
   Ns3_Page_master_page_name master_page_name;
   const OSUTF8CHAR* name;
   Ns3_Style_name style_name;
   struct Ns10_Presentation_page_layout_name *presentation_page_layout_name;
   const OSUTF8CHAR* use_date_time_name;
   const OSUTF8CHAR* use_footer_name;
   const OSUTF8CHAR* use_header_name;
   struct Ns13_Forms *forms;
   /* List of Ns3_Page_element */
   OSRTDList choice_list;
   Ns3_Page_choice_1 choice_1;
   struct Ns10_Notes *notes;
} Ns3_Page;

EXTERN int asn1E_Ns3_Page (OSCTXT* pctxt,
   Ns3_Page *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Page (OSCTXT* pctxt, Ns3_Page *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Page (OSCTXT* pctxt, Ns3_Page* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Page (OSCTXT* pctxt, Ns3_Page* pvalue);

EXTERN int DOMTest_Ns3_Page (OSCTXT* pctxt, Ns3_Page* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Page (Ns3_Page* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_choice                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Object_choice_document    1
#define T_Ns3_Object_choice_math        2

typedef struct EXTERN Ns3_Object_choice {
   int t;
   union {
      /* t = 1 */
      struct Ns13_Document *document;
      /* t = 2 */
      struct Math *math;
   } u;
} Ns3_Object_choice;

EXTERN int asn1E_Ns3_Object_choice (OSCTXT* pctxt,
   Ns3_Object_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_choice (OSCTXT* pctxt, Ns3_Object_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_choice (OSCTXT* pctxt, Ns3_Object_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_choice (OSCTXT* pctxt, Ns3_Object_choice* pvalue)
   ;

EXTERN int DOMTest_Ns3_Object_choice (OSCTXT* pctxt, Ns3_Object_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Object_choice (Ns3_Object_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Object                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Object {
   struct {
      unsigned actuatePresent : 1;
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned notify_on_update_of_rangesPresent : 1;
      unsigned choicePresent : 1;
   } m;
   Ns3_Object_actuate actuate;
   Xlink_Href href;
   Ns3_Object_show show;
   Xlink_Type type;
   const OSUTF8CHAR* notify_on_update_of_ranges;
   Ns3_Object_choice choice;
} Ns3_Object;

EXTERN int asn1E_Ns3_Object (OSCTXT* pctxt,
   Ns3_Object *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object (OSCTXT* pctxt, Ns3_Object *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object (OSCTXT* pctxt, Ns3_Object* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object (OSCTXT* pctxt, Ns3_Object* pvalue);

EXTERN int DOMTest_Ns3_Object (OSCTXT* pctxt, Ns3_Object* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Object (Ns3_Object* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_ole_actuate                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_ole_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_4 = 0
} Ns3_Object_ole_actuate_Root;

typedef OSUINT32 Ns3_Object_ole_actuate;

EXTERN int asn1E_Ns3_Object_ole_actuate (OSCTXT* pctxt,
   Ns3_Object_ole_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_ole_actuate (OSCTXT* pctxt, 
   Ns3_Object_ole_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_ole_actuate (OSCTXT* pctxt, 
   Ns3_Object_ole_actuate value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_ole_actuate (OSCTXT* pctxt, 
   Ns3_Object_ole_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Object_ole_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Object_ole_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Object_ole_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_ole_show                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_ole_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_5 = 0
} Ns3_Object_ole_show_Root;

typedef OSUINT32 Ns3_Object_ole_show;

EXTERN int asn1E_Ns3_Object_ole_show (OSCTXT* pctxt,
   Ns3_Object_ole_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_ole_show (OSCTXT* pctxt, 
   Ns3_Object_ole_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_ole_show (OSCTXT* pctxt, 
   Ns3_Object_ole_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_ole_show (OSCTXT* pctxt, 
   Ns3_Object_ole_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Object_ole_show_ToString (OSINT32 value);

EXTERN int Ns3_Object_ole_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Object_ole_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Object_ole                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Object_ole	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Object_ole {
   struct {
      unsigned actuatePresent : 1;
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned class_idPresent : 1;
      unsigned binary_dataPresent : 1;
   } m;
   Ns3_Object_ole_actuate actuate;
   Xlink_Href href;
   Ns3_Object_ole_show show;
   Xlink_Type type;
   const OSUTF8CHAR* class_id;
   ASN1DynOctStr binary_data;
} Ns3_Object_ole;

EXTERN int asn1E_Ns3_Object_ole (OSCTXT* pctxt,
   Ns3_Object_ole *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Object_ole (OSCTXT* pctxt, Ns3_Object_ole *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Object_ole (OSCTXT* pctxt, Ns3_Object_ole* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Object_ole (OSCTXT* pctxt, Ns3_Object_ole* pvalue);

EXTERN int DOMTest_Ns3_Object_ole (OSCTXT* pctxt, Ns3_Object_ole* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Object_ole (Ns3_Object_ole* pvalue);

/**************************************************************/
/*                                                            */
/*  Applet_actuate                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Applet_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_5 = 0
} Ns3_Applet_actuate_Root;

typedef OSUINT32 Ns3_Applet_actuate;

EXTERN int asn1E_Ns3_Applet_actuate (OSCTXT* pctxt,
   Ns3_Applet_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Applet_actuate (OSCTXT* pctxt, 
   Ns3_Applet_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Applet_actuate (OSCTXT* pctxt, Ns3_Applet_actuate value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Applet_actuate (OSCTXT* pctxt, 
   Ns3_Applet_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Applet_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Applet_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Applet_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Applet_show                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Applet_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_6 = 0
} Ns3_Applet_show_Root;

typedef OSUINT32 Ns3_Applet_show;

EXTERN int asn1E_Ns3_Applet_show (OSCTXT* pctxt,
   Ns3_Applet_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Applet_show (OSCTXT* pctxt, Ns3_Applet_show *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Applet_show (OSCTXT* pctxt, Ns3_Applet_show value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Applet_show (OSCTXT* pctxt, Ns3_Applet_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Applet_show_ToString (OSINT32 value);

EXTERN int Ns3_Applet_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Applet_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Applet_may_script                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Applet_may_script	(TM_UNIV|TM_PRIM|10)

typedef enum {
   may_script_false_ = 0,
   may_script_true_ = 1
} Ns3_Applet_may_script_Root;

typedef OSUINT32 Ns3_Applet_may_script;

EXTERN int asn1E_Ns3_Applet_may_script (OSCTXT* pctxt,
   Ns3_Applet_may_script *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Applet_may_script (OSCTXT* pctxt, 
   Ns3_Applet_may_script *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Applet_may_script (OSCTXT* pctxt, 
   Ns3_Applet_may_script value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Applet_may_script (OSCTXT* pctxt, 
   Ns3_Applet_may_script* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Applet_may_script_ToString (OSINT32 value);

EXTERN int Ns3_Applet_may_script_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Applet_may_script* pvalue);

/**************************************************************/
/*                                                            */
/*  Param                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Param	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Param {
   struct {
      unsigned namePresent : 1;
      unsigned valuePresent : 1;
   } m;
   const OSUTF8CHAR* name;
   const OSUTF8CHAR* value;
} Ns3_Param;

EXTERN int asn1E_Ns3_Param (OSCTXT* pctxt,
   Ns3_Param *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Param (OSCTXT* pctxt, Ns3_Param *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Param (OSCTXT* pctxt, Ns3_Param* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Param (OSCTXT* pctxt, Ns3_Param* pvalue);

EXTERN int DOMTest_Ns3_Param (OSCTXT* pctxt, Ns3_Param* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Param (Ns3_Param* pvalue);

/**************************************************************/
/*                                                            */
/*  Applet                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Applet	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Applet {
   struct {
      unsigned actuatePresent : 1;
      unsigned hrefPresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned archivePresent : 1;
      unsigned codePresent : 1;
      unsigned may_scriptPresent : 1;
      unsigned objectPresent : 1;
   } m;
   Ns3_Applet_actuate actuate;
   Xlink_Href href;
   Ns3_Applet_show show;
   Xlink_Type type;
   const OSUTF8CHAR* archive;
   const OSUTF8CHAR* code;
   Ns3_Applet_may_script may_script;
   const OSUTF8CHAR* object;
   /* List of Ns3_Param */
   OSRTDList param_list;
} Ns3_Applet;

EXTERN int asn1E_Ns3_Applet (OSCTXT* pctxt,
   Ns3_Applet *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Applet (OSCTXT* pctxt, Ns3_Applet *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Applet (OSCTXT* pctxt, Ns3_Applet* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Applet (OSCTXT* pctxt, Ns3_Applet* pvalue);

EXTERN int DOMTest_Ns3_Applet (OSCTXT* pctxt, Ns3_Applet* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Applet (Ns3_Applet* pvalue);

/**************************************************************/
/*                                                            */
/*  Floating_frame_actuate                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Floating_frame_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_6 = 0
} Ns3_Floating_frame_actuate_Root;

typedef OSUINT32 Ns3_Floating_frame_actuate;

EXTERN int asn1E_Ns3_Floating_frame_actuate (OSCTXT* pctxt,
   Ns3_Floating_frame_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Floating_frame_actuate (OSCTXT* pctxt, 
   Ns3_Floating_frame_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Floating_frame_actuate (OSCTXT* pctxt, 
   Ns3_Floating_frame_actuate value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Floating_frame_actuate (OSCTXT* pctxt, 
   Ns3_Floating_frame_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Floating_frame_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Floating_frame_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Floating_frame_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Floating_frame_show                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Floating_frame_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_7 = 0
} Ns3_Floating_frame_show_Root;

typedef OSUINT32 Ns3_Floating_frame_show;

EXTERN int asn1E_Ns3_Floating_frame_show (OSCTXT* pctxt,
   Ns3_Floating_frame_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Floating_frame_show (OSCTXT* pctxt, 
   Ns3_Floating_frame_show *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Floating_frame_show (OSCTXT* pctxt, 
   Ns3_Floating_frame_show value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Floating_frame_show (OSCTXT* pctxt, 
   Ns3_Floating_frame_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Floating_frame_show_ToString (OSINT32 value);

EXTERN int Ns3_Floating_frame_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Floating_frame_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Floating_frame                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Floating_frame	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Floating_frame {
   struct {
      unsigned actuatePresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned frame_namePresent : 1;
   } m;
   Ns3_Floating_frame_actuate actuate;
   Xlink_Href href;
   Ns3_Floating_frame_show show;
   Xlink_Type type;
   const OSUTF8CHAR* frame_name;
} Ns3_Floating_frame;

EXTERN int asn1E_Ns3_Floating_frame (OSCTXT* pctxt,
   Ns3_Floating_frame *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Floating_frame (OSCTXT* pctxt, 
   Ns3_Floating_frame *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Floating_frame (OSCTXT* pctxt, 
   Ns3_Floating_frame* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Floating_frame (OSCTXT* pctxt, 
   Ns3_Floating_frame* pvalue);

EXTERN int DOMTest_Ns3_Floating_frame (OSCTXT* pctxt, Ns3_Floating_frame* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Floating_frame (Ns3_Floating_frame* pvalue);

/**************************************************************/
/*                                                            */
/*  Plugin_actuate                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Plugin_actuate	(TM_UNIV|TM_PRIM|10)

typedef enum {
   actuate_onLoad_7 = 0
} Ns3_Plugin_actuate_Root;

typedef OSUINT32 Ns3_Plugin_actuate;

EXTERN int asn1E_Ns3_Plugin_actuate (OSCTXT* pctxt,
   Ns3_Plugin_actuate *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Plugin_actuate (OSCTXT* pctxt, 
   Ns3_Plugin_actuate *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Plugin_actuate (OSCTXT* pctxt, Ns3_Plugin_actuate value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Plugin_actuate (OSCTXT* pctxt, 
   Ns3_Plugin_actuate* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Plugin_actuate_ToString (OSINT32 value);

EXTERN int Ns3_Plugin_actuate_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Plugin_actuate* pvalue);

/**************************************************************/
/*                                                            */
/*  Plugin_show                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Plugin_show	(TM_UNIV|TM_PRIM|10)

typedef enum {
   show_embed_8 = 0
} Ns3_Plugin_show_Root;

typedef OSUINT32 Ns3_Plugin_show;

EXTERN int asn1E_Ns3_Plugin_show (OSCTXT* pctxt,
   Ns3_Plugin_show *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Plugin_show (OSCTXT* pctxt, Ns3_Plugin_show *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Plugin_show (OSCTXT* pctxt, Ns3_Plugin_show value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Plugin_show (OSCTXT* pctxt, Ns3_Plugin_show* pvalue);

EXTERN const OSUTF8CHAR* Ns3_Plugin_show_ToString (OSINT32 value);

EXTERN int Ns3_Plugin_show_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns3_Plugin_show* pvalue);

/**************************************************************/
/*                                                            */
/*  Plugin                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Plugin	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns3_Plugin {
   struct {
      unsigned actuatePresent : 1;
      unsigned showPresent : 1;
      unsigned typePresent : 1;
      unsigned mime_typePresent : 1;
   } m;
   Ns3_Plugin_actuate actuate;
   Xlink_Href href;
   Ns3_Plugin_show show;
   Xlink_Type type;
   const OSUTF8CHAR* mime_type;
   /* List of Ns3_Param */
   OSRTDList param_list;
} Ns3_Plugin;

EXTERN int asn1E_Ns3_Plugin (OSCTXT* pctxt,
   Ns3_Plugin *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Plugin (OSCTXT* pctxt, Ns3_Plugin *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Plugin (OSCTXT* pctxt, Ns3_Plugin* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Plugin (OSCTXT* pctxt, Ns3_Plugin* pvalue);

EXTERN int DOMTest_Ns3_Plugin (OSCTXT* pctxt, Ns3_Plugin* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Plugin (Ns3_Plugin* pvalue);

/**************************************************************/
/*                                                            */
/*  Frame_element                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns3_Frame_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_Frame_element_text_box    1
#define T_Ns3_Frame_element_image       2
#define T_Ns3_Frame_element_object      3
#define T_Ns3_Frame_element_object_ole  4
#define T_Ns3_Frame_element_applet      5
#define T_Ns3_Frame_element_floating_frame 6
#define T_Ns3_Frame_element_plugin      7

typedef struct EXTERN Ns3_Frame_element {
   int t;
   union {
      /* t = 1 */
      Ns3_Text_box *text_box;
      /* t = 2 */
      Ns3_Image *image;
      /* t = 3 */
      Ns3_Object *object;
      /* t = 4 */
      Ns3_Object_ole *object_ole;
      /* t = 5 */
      Ns3_Applet *applet;
      /* t = 6 */
      Ns3_Floating_frame *floating_frame;
      /* t = 7 */
      Ns3_Plugin *plugin;
   } u;
} Ns3_Frame_element;

EXTERN int asn1E_Ns3_Frame_element (OSCTXT* pctxt,
   Ns3_Frame_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_Frame_element (OSCTXT* pctxt, Ns3_Frame_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_Frame_element (OSCTXT* pctxt, Ns3_Frame_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_Frame_element (OSCTXT* pctxt, Ns3_Frame_element* pvalue)
   ;

EXTERN int DOMTest_Ns3_Frame_element (OSCTXT* pctxt, Ns3_Frame_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_Frame_element (Ns3_Frame_element* pvalue);

/**************************************************************/
/*                                                            */
/*  G_element                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns3_G_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns3_G_element_rect            1
#define T_Ns3_G_element_line            2
#define T_Ns3_G_element_polyline        3
#define T_Ns3_G_element_polygon         4
#define T_Ns3_G_element_regular_polygon 5
#define T_Ns3_G_element_path            6
#define T_Ns3_G_element_circle          7
#define T_Ns3_G_element_ellipse         8
#define T_Ns3_G_element_g               9
#define T_Ns3_G_element_page_thumbnail  10
#define T_Ns3_G_element_frame           11
#define T_Ns3_G_element_measure         12
#define T_Ns3_G_element_caption         13
#define T_Ns3_G_element_connector       14
#define T_Ns3_G_element_control         15
#define T_Ns3_G_element_scene           16
#define T_Ns3_G_element_custom_shape    17

typedef struct EXTERN Ns3_G_element {
   int t;
   union {
      /* t = 1 */
      Ns3_Rect *rect;
      /* t = 2 */
      Ns3_Line *line;
      /* t = 3 */
      Ns3_Polyline *polyline;
      /* t = 4 */
      Ns3_Polygon *polygon;
      /* t = 5 */
      Ns3_Regular_polygon *regular_polygon;
      /* t = 6 */
      Ns3_Path *path;
      /* t = 7 */
      Ns3_Circle *circle;
      /* t = 8 */
      Ns3_Ellipse *ellipse;
      /* t = 9 */
      struct Ns3_G *g;
      /* t = 10 */
      Ns3_Page_thumbnail *page_thumbnail;
      /* t = 11 */
      Ns3_Frame *frame;
      /* t = 12 */
      Ns3_Measure *measure;
      /* t = 13 */
      Ns3_Caption *caption;
      /* t = 14 */
      Ns3_Connector *connector;
      /* t = 15 */
      Ns3_Control *control;
      /* t = 16 */
      struct Ns7_Scene *scene;
      /* t = 17 */
      Ns3_Custom_shape *custom_shape;
   } u;
} Ns3_G_element;

EXTERN int asn1E_Ns3_G_element (OSCTXT* pctxt,
   Ns3_G_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns3_G_element (OSCTXT* pctxt, Ns3_G_element *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns3_G_element (OSCTXT* pctxt, Ns3_G_element* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns3_G_element (OSCTXT* pctxt, Ns3_G_element* pvalue);

EXTERN int DOMTest_Ns3_G_element (OSCTXT* pctxt, Ns3_G_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns3_G_element (Ns3_G_element* pvalue);

#ifdef __cplusplus
}
#endif

#endif
