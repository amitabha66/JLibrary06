/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef NS8_H
#define NS8_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"

/**
 * Header file for ASN.1 module Ns8
 */
/**************************************************************/
/*                                                            */
/*  Name                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Name	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Name;

EXTERN int asn1E_Ns8_Name (OSCTXT* pctxt,
   Ns8_Name pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Name (OSCTXT* pctxt, Ns8_Name *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Name (OSCTXT* pctxt, Ns8_Name value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Name (OSCTXT* pctxt, Ns8_Name* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_format_alt_1                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_format_alt_1	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_1_int1 = 1
} Ns8_Num_format_alt_1_Root;

typedef OSUINT32 Ns8_Num_format_alt_1;

EXTERN int asn1E_Ns8_Num_format_alt_1 (OSCTXT* pctxt,
   Ns8_Num_format_alt_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_format_alt_1 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_format_alt_1 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_1 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_format_alt_1 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_1* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Num_format_alt_1_ToString (OSINT32 value);

EXTERN int Ns8_Num_format_alt_1_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Num_format_alt_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_format_alt_2                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_format_alt_2	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_2_i = 0
} Ns8_Num_format_alt_2_Root;

typedef OSUINT32 Ns8_Num_format_alt_2;

EXTERN int asn1E_Ns8_Num_format_alt_2 (OSCTXT* pctxt,
   Ns8_Num_format_alt_2 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_format_alt_2 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_2 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_format_alt_2 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_2 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_format_alt_2 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_2* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Num_format_alt_2_ToString (OSINT32 value);

EXTERN int Ns8_Num_format_alt_2_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Num_format_alt_2* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_format_alt_3                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_format_alt_3	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_3_i = 0
} Ns8_Num_format_alt_3_Root;

typedef OSUINT32 Ns8_Num_format_alt_3;

EXTERN int asn1E_Ns8_Num_format_alt_3 (OSCTXT* pctxt,
   Ns8_Num_format_alt_3 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_format_alt_3 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_3 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_format_alt_3 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_3 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_format_alt_3 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_3* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Num_format_alt_3_ToString (OSINT32 value);

EXTERN int Ns8_Num_format_alt_3_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Num_format_alt_3* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_format_alt_5                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_format_alt_5	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_5_a = 0,
   alt_5_a_1 = 1
} Ns8_Num_format_alt_5_Root;

typedef OSUINT32 Ns8_Num_format_alt_5;

EXTERN int asn1E_Ns8_Num_format_alt_5 (OSCTXT* pctxt,
   Ns8_Num_format_alt_5 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_format_alt_5 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_5 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_format_alt_5 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_5 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_format_alt_5 (OSCTXT* pctxt, 
   Ns8_Num_format_alt_5* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Num_format_alt_5_ToString (OSINT32 value);

EXTERN int Ns8_Num_format_alt_5_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Num_format_alt_5* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_format                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_format	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Num_format_alt            1
#define T_Ns8_Num_format_alt_1          2
#define T_Ns8_Num_format_alt_2          3
#define T_Ns8_Num_format_alt_3          4
#define T_Ns8_Num_format_alt_4          5
#define T_Ns8_Num_format_alt_5          6

typedef struct EXTERN Ns8_Num_format {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      Ns8_Num_format_alt_1 alt_1;
      /* t = 3 */
      Ns8_Num_format_alt_2 alt_2;
      /* t = 4 */
      Ns8_Num_format_alt_3 alt_3;
      /* t = 5 */
      const OSUTF8CHAR* alt_4;
      /* t = 6 */
      Ns8_Num_format_alt_5 alt_5;
   } u;
} Ns8_Num_format;

EXTERN int asn1E_Ns8_Num_format (OSCTXT* pctxt,
   Ns8_Num_format *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_format (OSCTXT* pctxt, Ns8_Num_format *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_format (OSCTXT* pctxt, Ns8_Num_format* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_format (OSCTXT* pctxt, Ns8_Num_format* pvalue);

EXTERN int DOMTest_Ns8_Num_format (OSCTXT* pctxt, Ns8_Num_format* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Num_format (Ns8_Num_format* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_letter_sync                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_letter_sync	(TM_UNIV|TM_PRIM|10)

typedef enum {
   Num_letter_sync_false_ = 0,
   Num_letter_sync_true_ = 1
} Ns8_Num_letter_sync_Root;

typedef OSUINT32 Ns8_Num_letter_sync;

EXTERN int asn1E_Ns8_Num_letter_sync (OSCTXT* pctxt,
   Ns8_Num_letter_sync *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_letter_sync (OSCTXT* pctxt, 
   Ns8_Num_letter_sync *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_letter_sync (OSCTXT* pctxt, 
   Ns8_Num_letter_sync value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_letter_sync (OSCTXT* pctxt, 
   Ns8_Num_letter_sync* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Num_letter_sync_ToString (OSINT32 value);

EXTERN int Ns8_Num_letter_sync_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Num_letter_sync* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_prefix                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_prefix	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Num_prefix;

EXTERN int asn1E_Ns8_Num_prefix (OSCTXT* pctxt,
   Ns8_Num_prefix pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_prefix (OSCTXT* pctxt, Ns8_Num_prefix *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_prefix (OSCTXT* pctxt, Ns8_Num_prefix value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_prefix (OSCTXT* pctxt, Ns8_Num_prefix* pvalue);

/**************************************************************/
/*                                                            */
/*  Num_suffix                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Num_suffix	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Num_suffix;

EXTERN int asn1E_Ns8_Num_suffix (OSCTXT* pctxt,
   Ns8_Num_suffix pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Num_suffix (OSCTXT* pctxt, Ns8_Num_suffix *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Num_suffix (OSCTXT* pctxt, Ns8_Num_suffix value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Num_suffix (OSCTXT* pctxt, Ns8_Num_suffix* pvalue);

/**************************************************************/
/*                                                            */
/*  List_level_properties                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns8_List_level_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_List_level_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_List_level_properties;

EXTERN int asn1E_Ns8_List_level_properties (OSCTXT* pctxt,
   Ns8_List_level_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_List_level_properties (OSCTXT* pctxt, 
   Ns8_List_level_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_List_level_properties (OSCTXT* pctxt, 
   Ns8_List_level_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_List_level_properties (OSCTXT* pctxt, 
   Ns8_List_level_properties* pvalue);

EXTERN int DOMTest_Ns8_List_level_properties (OSCTXT* pctxt, 
   Ns8_List_level_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_List_level_properties (Ns8_List_level_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Text_properties                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Text_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Text_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Text_properties;

EXTERN int asn1E_Ns8_Text_properties (OSCTXT* pctxt,
   Ns8_Text_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Text_properties (OSCTXT* pctxt, 
   Ns8_Text_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Text_properties (OSCTXT* pctxt, 
   Ns8_Text_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Text_properties (OSCTXT* pctxt, 
   Ns8_Text_properties* pvalue);

EXTERN int DOMTest_Ns8_Text_properties (OSCTXT* pctxt, Ns8_Text_properties* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Text_properties (Ns8_Text_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_height_alt_1                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_height_alt_1	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_1_scale_1 = 0
} Ns8_Rel_height_alt_1_Root;

typedef OSUINT32 Ns8_Rel_height_alt_1;

EXTERN int asn1E_Ns8_Rel_height_alt_1 (OSCTXT* pctxt,
   Ns8_Rel_height_alt_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_height_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_height_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_1 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_height_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_1* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Rel_height_alt_1_ToString (OSINT32 value);

EXTERN int Ns8_Rel_height_alt_1_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Rel_height_alt_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_height_alt_2                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_height_alt_2	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_2_scale_min_1 = 0
} Ns8_Rel_height_alt_2_Root;

typedef OSUINT32 Ns8_Rel_height_alt_2;

EXTERN int asn1E_Ns8_Rel_height_alt_2 (OSCTXT* pctxt,
   Ns8_Rel_height_alt_2 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_height_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_2 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_height_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_2 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_height_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_height_alt_2* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Rel_height_alt_2_ToString (OSINT32 value);

EXTERN int Ns8_Rel_height_alt_2_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Rel_height_alt_2* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_height                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_height	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Rel_height_alt            1
#define T_Ns8_Rel_height_alt_1          2
#define T_Ns8_Rel_height_alt_2          3

typedef struct EXTERN Ns8_Rel_height {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      Ns8_Rel_height_alt_1 alt_1;
      /* t = 3 */
      Ns8_Rel_height_alt_2 alt_2;
   } u;
} Ns8_Rel_height;

EXTERN int asn1E_Ns8_Rel_height (OSCTXT* pctxt,
   Ns8_Rel_height *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_height (OSCTXT* pctxt, Ns8_Rel_height *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_height (OSCTXT* pctxt, Ns8_Rel_height* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_height (OSCTXT* pctxt, Ns8_Rel_height* pvalue);

EXTERN int DOMTest_Ns8_Rel_height (OSCTXT* pctxt, Ns8_Rel_height* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Rel_height (Ns8_Rel_height* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_width_alt_1                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_width_alt_1	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_1_scale = 0
} Ns8_Rel_width_alt_1_Root;

typedef OSUINT32 Ns8_Rel_width_alt_1;

EXTERN int asn1E_Ns8_Rel_width_alt_1 (OSCTXT* pctxt,
   Ns8_Rel_width_alt_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_width_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_width_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_1 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_width_alt_1 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_1* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Rel_width_alt_1_ToString (OSINT32 value);

EXTERN int Ns8_Rel_width_alt_1_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Rel_width_alt_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_width_alt_2                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_width_alt_2	(TM_UNIV|TM_PRIM|10)

typedef enum {
   alt_2_scale_min = 0
} Ns8_Rel_width_alt_2_Root;

typedef OSUINT32 Ns8_Rel_width_alt_2;

EXTERN int asn1E_Ns8_Rel_width_alt_2 (OSCTXT* pctxt,
   Ns8_Rel_width_alt_2 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_width_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_2 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_width_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_2 value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_width_alt_2 (OSCTXT* pctxt, 
   Ns8_Rel_width_alt_2* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Rel_width_alt_2_ToString (OSINT32 value);

EXTERN int Ns8_Rel_width_alt_2_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Rel_width_alt_2* pvalue);

/**************************************************************/
/*                                                            */
/*  Rel_width                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Rel_width	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Rel_width_alt             1
#define T_Ns8_Rel_width_alt_1           2
#define T_Ns8_Rel_width_alt_2           3

typedef struct EXTERN Ns8_Rel_width {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      Ns8_Rel_width_alt_1 alt_1;
      /* t = 3 */
      Ns8_Rel_width_alt_2 alt_2;
   } u;
} Ns8_Rel_width;

EXTERN int asn1E_Ns8_Rel_width (OSCTXT* pctxt,
   Ns8_Rel_width *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Rel_width (OSCTXT* pctxt, Ns8_Rel_width *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Rel_width (OSCTXT* pctxt, Ns8_Rel_width* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Rel_width (OSCTXT* pctxt, Ns8_Rel_width* pvalue);

EXTERN int DOMTest_Ns8_Rel_width (OSCTXT* pctxt, Ns8_Rel_width* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Rel_width (Ns8_Rel_width* pvalue);

/**************************************************************/
/*                                                            */
/*  Leader_char                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Leader_char	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Leader_char;

EXTERN int asn1E_Ns8_Leader_char (OSCTXT* pctxt,
   Ns8_Leader_char pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Leader_char (OSCTXT* pctxt, Ns8_Leader_char *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Leader_char (OSCTXT* pctxt, Ns8_Leader_char value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Leader_char (OSCTXT* pctxt, Ns8_Leader_char* pvalue);

/**************************************************************/
/*                                                            */
/*  Position                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Position	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Position;

EXTERN int asn1E_Ns8_Position (OSCTXT* pctxt,
   Ns8_Position pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Position (OSCTXT* pctxt, Ns8_Position *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Position (OSCTXT* pctxt, Ns8_Position value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Position (OSCTXT* pctxt, Ns8_Position* pvalue);

/**************************************************************/
/*                                                            */
/*  Type                                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Type	(TM_UNIV|TM_PRIM|10)

typedef enum {
   Type_left = 0,
   Type_right = 1
} Ns8_Type_Root;

typedef OSUINT32 Ns8_Type;

EXTERN int asn1E_Ns8_Type (OSCTXT* pctxt,
   Ns8_Type *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Type (OSCTXT* pctxt, Ns8_Type *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Type (OSCTXT* pctxt, Ns8_Type value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Type (OSCTXT* pctxt, Ns8_Type* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Type_ToString (OSINT32 value);

EXTERN int Ns8_Type_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Type* pvalue);

/**************************************************************/
/*                                                            */
/*  Font_face_font_family_generic                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Font_face_font_family_generic	(TM_UNIV|TM_PRIM|10)

typedef enum {
   font_family_generic_decorative = 0,
   font_family_generic_modern = 1,
   font_family_generic_roman = 2,
   font_family_generic_script = 3,
   font_family_generic_swiss = 4,
   font_family_generic_system_ = 5
} Ns8_Font_face_font_family_generic_Root;

typedef OSUINT32 Ns8_Font_face_font_family_generic;

EXTERN int asn1E_Ns8_Font_face_font_family_generic (OSCTXT* pctxt,
   Ns8_Font_face_font_family_generic *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Font_face_font_family_generic (OSCTXT* pctxt, 
   Ns8_Font_face_font_family_generic *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Font_face_font_family_generic (OSCTXT* pctxt, 
   Ns8_Font_face_font_family_generic value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Font_face_font_family_generic (OSCTXT* pctxt, 
   Ns8_Font_face_font_family_generic* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Font_face_font_family_generic_ToString (OSINT32 value);

EXTERN int Ns8_Font_face_font_family_generic_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Font_face_font_family_generic* pvalue);

/**************************************************************/
/*                                                            */
/*  Font_face_font_pitch                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Font_face_font_pitch	(TM_UNIV|TM_PRIM|10)

typedef enum {
   font_pitch_fixed = 0,
   font_pitch_variable = 1
} Ns8_Font_face_font_pitch_Root;

typedef OSUINT32 Ns8_Font_face_font_pitch;

EXTERN int asn1E_Ns8_Font_face_font_pitch (OSCTXT* pctxt,
   Ns8_Font_face_font_pitch *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Font_face_font_pitch (OSCTXT* pctxt, 
   Ns8_Font_face_font_pitch *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Font_face_font_pitch (OSCTXT* pctxt, 
   Ns8_Font_face_font_pitch value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Font_face_font_pitch (OSCTXT* pctxt, 
   Ns8_Font_face_font_pitch* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Font_face_font_pitch_ToString (OSINT32 value);

EXTERN int Ns8_Font_face_font_pitch_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Font_face_font_pitch* pvalue);

/**************************************************************/
/*                                                            */
/*  Font_face                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Font_face	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Font_face {
   struct {
      unsigned font_adornmentsPresent : 1;
      unsigned font_charsetPresent : 1;
      unsigned font_family_genericPresent : 1;
      unsigned font_pitchPresent : 1;
      unsigned accent_heightPresent : 1;
      unsigned alphabeticPresent : 1;
      unsigned ascentPresent : 1;
      unsigned bboxPresent : 1;
      unsigned cap_heightPresent : 1;
      unsigned descentPresent : 1;
      unsigned font_familyPresent : 1;
      unsigned font_sizePresent : 1;
      unsigned font_stretchPresent : 1;
      unsigned font_stylePresent : 1;
      unsigned font_variantPresent : 1;
      unsigned font_weightPresent : 1;
      unsigned hangingPresent : 1;
      unsigned ideographicPresent : 1;
      unsigned mathematicalPresent : 1;
      unsigned overline_positionPresent : 1;
      unsigned overline_thicknessPresent : 1;
      unsigned panose_1Present : 1;
      unsigned slopePresent : 1;
      unsigned stemhPresent : 1;
      unsigned stemvPresent : 1;
      unsigned strikethrough_positionPresent : 1;
      unsigned strikethrough_thicknessPresent : 1;
      unsigned underline_positionPresent : 1;
      unsigned underline_thicknessPresent : 1;
      unsigned unicode_rangePresent : 1;
      unsigned units_per_emPresent : 1;
      unsigned v_alphabeticPresent : 1;
      unsigned v_hangingPresent : 1;
      unsigned v_ideographicPresent : 1;
      unsigned v_mathematicalPresent : 1;
      unsigned widthsPresent : 1;
      unsigned x_heightPresent : 1;
      unsigned font_face_srcPresent : 1;
      unsigned definition_srcPresent : 1;
   } m;
   const OSUTF8CHAR* font_adornments;
   const OSUTF8CHAR* font_charset;
   Ns8_Font_face_font_family_generic font_family_generic;
   Ns8_Font_face_font_pitch font_pitch;
   const OSUTF8CHAR* name;
   OSINT32 accent_height;
   OSINT32 alphabetic;
   OSINT32 ascent;
   const OSUTF8CHAR* bbox;
   OSINT32 cap_height;
   OSINT32 descent;
   const OSUTF8CHAR* font_family;
   const OSUTF8CHAR* font_size;
   OSUINT32 font_stretch;
   OSUINT32 font_style;
   OSUINT32 font_variant;
   OSUINT32 font_weight;
   OSINT32 hanging;
   OSINT32 ideographic;
   OSINT32 mathematical;
   OSINT32 overline_position;
   OSINT32 overline_thickness;
   const OSUTF8CHAR* panose_1;
   OSINT32 slope;
   OSINT32 stemh;
   OSINT32 stemv;
   OSINT32 strikethrough_position;
   OSINT32 strikethrough_thickness;
   OSINT32 underline_position;
   OSINT32 underline_thickness;
   const OSUTF8CHAR* unicode_range;
   OSINT32 units_per_em;
   OSINT32 v_alphabetic;
   OSINT32 v_hanging;
   OSINT32 v_ideographic;
   OSINT32 v_mathematical;
   const OSUTF8CHAR* widths;
   OSINT32 x_height;
   /* List of Font_face_src_element */
   OSRTDList font_face_src;
   struct Definition_src *definition_src;
} Ns8_Font_face;

EXTERN int asn1E_Ns8_Font_face (OSCTXT* pctxt,
   Ns8_Font_face *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Font_face (OSCTXT* pctxt, Ns8_Font_face *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Font_face (OSCTXT* pctxt, Ns8_Font_face* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Font_face (OSCTXT* pctxt, Ns8_Font_face* pvalue);

EXTERN int DOMTest_Ns8_Font_face (OSCTXT* pctxt, Ns8_Font_face* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Font_face (Ns8_Font_face* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_auto_update                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_auto_update	(TM_UNIV|TM_PRIM|10)

typedef enum {
   auto_update_false_ = 0,
   auto_update_true_ = 1
} Ns8_Style_auto_update_Root;

typedef OSUINT32 Ns8_Style_auto_update;

EXTERN int asn1E_Ns8_Style_auto_update (OSCTXT* pctxt,
   Ns8_Style_auto_update *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_auto_update (OSCTXT* pctxt, 
   Ns8_Style_auto_update *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_auto_update (OSCTXT* pctxt, 
   Ns8_Style_auto_update value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_auto_update (OSCTXT* pctxt, 
   Ns8_Style_auto_update* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Style_auto_update_ToString (OSINT32 value);

EXTERN int Ns8_Style_auto_update_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Style_auto_update* pvalue);

/**************************************************************/
/*                                                            */
/*  Data_style_name                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Data_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Data_style_name_alt       1
#define T_Ns8_Data_style_name_alt_1     2

typedef struct EXTERN Ns8_Data_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Data_style_name;

EXTERN int asn1E_Ns8_Data_style_name (OSCTXT* pctxt,
   Ns8_Data_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Data_style_name (OSCTXT* pctxt, 
   Ns8_Data_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Data_style_name (OSCTXT* pctxt, 
   Ns8_Data_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Data_style_name (OSCTXT* pctxt, 
   Ns8_Data_style_name* pvalue);

EXTERN int DOMTest_Ns8_Data_style_name (OSCTXT* pctxt, Ns8_Data_style_name* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Data_style_name (Ns8_Data_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Display_name                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Display_name	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns8_Display_name;

EXTERN int asn1E_Ns8_Display_name (OSCTXT* pctxt,
   Ns8_Display_name pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Display_name (OSCTXT* pctxt, Ns8_Display_name *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Display_name (OSCTXT* pctxt, Ns8_Display_name value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Display_name (OSCTXT* pctxt, Ns8_Display_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_family                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_family	(TM_UNIV|TM_PRIM|10)

typedef enum {
   family_chart = 0,
   family_drawing_page = 1,
   family_graphic = 2,
   family_paragraph = 3,
   family_presentation = 4,
   family_ruby = 5,
   family_section = 6,
   family_table = 7,
   family_table_cell = 8,
   family_table_column = 9,
   family_table_row = 10,
   family_text = 11
} Ns8_Style_family_Root;

typedef OSUINT32 Ns8_Style_family;

EXTERN int asn1E_Ns8_Style_family (OSCTXT* pctxt,
   Ns8_Style_family *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_family (OSCTXT* pctxt, Ns8_Style_family *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_family (OSCTXT* pctxt, Ns8_Style_family value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_family (OSCTXT* pctxt, Ns8_Style_family* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Style_family_ToString (OSINT32 value);

EXTERN int Ns8_Style_family_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Style_family* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_list_style_name                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_list_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Style_list_style_name_alt 1
#define T_Ns8_Style_list_style_name_alt_1 2

typedef struct Ns8_Style_list_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Style_list_style_name;

EXTERN int asn1E_Ns8_Style_list_style_name (OSCTXT* pctxt,
   Ns8_Style_list_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_list_style_name (OSCTXT* pctxt, 
   Ns8_Style_list_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_list_style_name (OSCTXT* pctxt, 
   Ns8_Style_list_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_list_style_name (OSCTXT* pctxt, 
   Ns8_Style_list_style_name* pvalue);

EXTERN int DOMTest_Ns8_Style_list_style_name (OSCTXT* pctxt, 
   Ns8_Style_list_style_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Style_list_style_name (Ns8_Style_list_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_master_page_name                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_master_page_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Style_master_page_name_alt 1
#define T_Ns8_Style_master_page_name_alt_1 2

typedef struct Ns8_Style_master_page_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Style_master_page_name;

EXTERN int asn1E_Ns8_Style_master_page_name (OSCTXT* pctxt,
   Ns8_Style_master_page_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_master_page_name (OSCTXT* pctxt, 
   Ns8_Style_master_page_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_master_page_name (OSCTXT* pctxt, 
   Ns8_Style_master_page_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_master_page_name (OSCTXT* pctxt, 
   Ns8_Style_master_page_name* pvalue);

EXTERN int DOMTest_Ns8_Style_master_page_name (OSCTXT* pctxt, 
   Ns8_Style_master_page_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Style_master_page_name (Ns8_Style_master_page_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_next_style_name                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_next_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Style_next_style_name_alt 1
#define T_Ns8_Style_next_style_name_alt_1 2

typedef struct Ns8_Style_next_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Style_next_style_name;

EXTERN int asn1E_Ns8_Style_next_style_name (OSCTXT* pctxt,
   Ns8_Style_next_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_next_style_name (OSCTXT* pctxt, 
   Ns8_Style_next_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_next_style_name (OSCTXT* pctxt, 
   Ns8_Style_next_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_next_style_name (OSCTXT* pctxt, 
   Ns8_Style_next_style_name* pvalue);

EXTERN int DOMTest_Ns8_Style_next_style_name (OSCTXT* pctxt, 
   Ns8_Style_next_style_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Style_next_style_name (Ns8_Style_next_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Style_parent_style_name                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style_parent_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Style_parent_style_name_alt 1
#define T_Ns8_Style_parent_style_name_alt_1 2

typedef struct Ns8_Style_parent_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Style_parent_style_name;

EXTERN int asn1E_Ns8_Style_parent_style_name (OSCTXT* pctxt,
   Ns8_Style_parent_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style_parent_style_name (OSCTXT* pctxt, 
   Ns8_Style_parent_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style_parent_style_name (OSCTXT* pctxt, 
   Ns8_Style_parent_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style_parent_style_name (OSCTXT* pctxt, 
   Ns8_Style_parent_style_name* pvalue);

EXTERN int DOMTest_Ns8_Style_parent_style_name (OSCTXT* pctxt, 
   Ns8_Style_parent_style_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Style_parent_style_name (Ns8_Style_parent_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Section_properties                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Section_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Section_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Section_properties;

EXTERN int asn1E_Ns8_Section_properties (OSCTXT* pctxt,
   Ns8_Section_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Section_properties (OSCTXT* pctxt, 
   Ns8_Section_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Section_properties (OSCTXT* pctxt, 
   Ns8_Section_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Section_properties (OSCTXT* pctxt, 
   Ns8_Section_properties* pvalue);

EXTERN int DOMTest_Ns8_Section_properties (OSCTXT* pctxt, 
   Ns8_Section_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Section_properties (Ns8_Section_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Table_properties                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Table_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Table_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Table_properties;

EXTERN int asn1E_Ns8_Table_properties (OSCTXT* pctxt,
   Ns8_Table_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Table_properties (OSCTXT* pctxt, 
   Ns8_Table_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Table_properties (OSCTXT* pctxt, 
   Ns8_Table_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Table_properties (OSCTXT* pctxt, 
   Ns8_Table_properties* pvalue);

EXTERN int DOMTest_Ns8_Table_properties (OSCTXT* pctxt, Ns8_Table_properties* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Table_properties (Ns8_Table_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Table_column_properties                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Table_column_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Table_column_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Table_column_properties;

EXTERN int asn1E_Ns8_Table_column_properties (OSCTXT* pctxt,
   Ns8_Table_column_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Table_column_properties (OSCTXT* pctxt, 
   Ns8_Table_column_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Table_column_properties (OSCTXT* pctxt, 
   Ns8_Table_column_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Table_column_properties (OSCTXT* pctxt, 
   Ns8_Table_column_properties* pvalue);

EXTERN int DOMTest_Ns8_Table_column_properties (OSCTXT* pctxt, 
   Ns8_Table_column_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Table_column_properties (Ns8_Table_column_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Table_row_properties                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Table_row_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Table_row_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Table_row_properties;

EXTERN int asn1E_Ns8_Table_row_properties (OSCTXT* pctxt,
   Ns8_Table_row_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Table_row_properties (OSCTXT* pctxt, 
   Ns8_Table_row_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Table_row_properties (OSCTXT* pctxt, 
   Ns8_Table_row_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Table_row_properties (OSCTXT* pctxt, 
   Ns8_Table_row_properties* pvalue);

EXTERN int DOMTest_Ns8_Table_row_properties (OSCTXT* pctxt, 
   Ns8_Table_row_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Table_row_properties (Ns8_Table_row_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Ruby_properties                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Ruby_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Ruby_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Ruby_properties;

EXTERN int asn1E_Ns8_Ruby_properties (OSCTXT* pctxt,
   Ns8_Ruby_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Ruby_properties (OSCTXT* pctxt, 
   Ns8_Ruby_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Ruby_properties (OSCTXT* pctxt, 
   Ns8_Ruby_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Ruby_properties (OSCTXT* pctxt, 
   Ns8_Ruby_properties* pvalue);

EXTERN int DOMTest_Ns8_Ruby_properties (OSCTXT* pctxt, Ns8_Ruby_properties* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Ruby_properties (Ns8_Ruby_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Drawing_page_properties                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Drawing_page_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Drawing_page_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Drawing_page_properties;

EXTERN int asn1E_Ns8_Drawing_page_properties (OSCTXT* pctxt,
   Ns8_Drawing_page_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Drawing_page_properties (OSCTXT* pctxt, 
   Ns8_Drawing_page_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Drawing_page_properties (OSCTXT* pctxt, 
   Ns8_Drawing_page_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Drawing_page_properties (OSCTXT* pctxt, 
   Ns8_Drawing_page_properties* pvalue);

EXTERN int DOMTest_Ns8_Drawing_page_properties (OSCTXT* pctxt, 
   Ns8_Drawing_page_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Drawing_page_properties (Ns8_Drawing_page_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Chart_properties                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Chart_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Chart_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Chart_properties;

EXTERN int asn1E_Ns8_Chart_properties (OSCTXT* pctxt,
   Ns8_Chart_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Chart_properties (OSCTXT* pctxt, 
   Ns8_Chart_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Chart_properties (OSCTXT* pctxt, 
   Ns8_Chart_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Chart_properties (OSCTXT* pctxt, 
   Ns8_Chart_properties* pvalue);

EXTERN int DOMTest_Ns8_Chart_properties (OSCTXT* pctxt, Ns8_Chart_properties* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Chart_properties (Ns8_Chart_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Graphic_properties                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Graphic_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Graphic_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Graphic_properties;

EXTERN int asn1E_Ns8_Graphic_properties (OSCTXT* pctxt,
   Ns8_Graphic_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Graphic_properties (OSCTXT* pctxt, 
   Ns8_Graphic_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Graphic_properties (OSCTXT* pctxt, 
   Ns8_Graphic_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Graphic_properties (OSCTXT* pctxt, 
   Ns8_Graphic_properties* pvalue);

EXTERN int DOMTest_Ns8_Graphic_properties (OSCTXT* pctxt, 
   Ns8_Graphic_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Graphic_properties (Ns8_Graphic_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Table_cell_properties                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Table_cell_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Table_cell_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Table_cell_properties;

EXTERN int asn1E_Ns8_Table_cell_properties (OSCTXT* pctxt,
   Ns8_Table_cell_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Table_cell_properties (OSCTXT* pctxt, 
   Ns8_Table_cell_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Table_cell_properties (OSCTXT* pctxt, 
   Ns8_Table_cell_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Table_cell_properties (OSCTXT* pctxt, 
   Ns8_Table_cell_properties* pvalue);

EXTERN int DOMTest_Ns8_Table_cell_properties (OSCTXT* pctxt, 
   Ns8_Table_cell_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Table_cell_properties (Ns8_Table_cell_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Paragraph_properties                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Paragraph_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Paragraph_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Paragraph_properties;

EXTERN int asn1E_Ns8_Paragraph_properties (OSCTXT* pctxt,
   Ns8_Paragraph_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Paragraph_properties (OSCTXT* pctxt, 
   Ns8_Paragraph_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Paragraph_properties (OSCTXT* pctxt, 
   Ns8_Paragraph_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Paragraph_properties (OSCTXT* pctxt, 
   Ns8_Paragraph_properties* pvalue);

EXTERN int DOMTest_Ns8_Paragraph_properties (OSCTXT* pctxt, 
   Ns8_Paragraph_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Paragraph_properties (Ns8_Paragraph_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Map_apply_style_name                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Map_apply_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Map_apply_style_name_alt  1
#define T_Ns8_Map_apply_style_name_alt_1 2

typedef struct Ns8_Map_apply_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Map_apply_style_name;

EXTERN int asn1E_Ns8_Map_apply_style_name (OSCTXT* pctxt,
   Ns8_Map_apply_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Map_apply_style_name (OSCTXT* pctxt, 
   Ns8_Map_apply_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Map_apply_style_name (OSCTXT* pctxt, 
   Ns8_Map_apply_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Map_apply_style_name (OSCTXT* pctxt, 
   Ns8_Map_apply_style_name* pvalue);

EXTERN int DOMTest_Ns8_Map_apply_style_name (OSCTXT* pctxt, 
   Ns8_Map_apply_style_name* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Map_apply_style_name (Ns8_Map_apply_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Map                                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Map	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Map {
   struct {
      unsigned base_cell_addressPresent : 1;
   } m;
   Ns8_Map_apply_style_name apply_style_name;
   const OSUTF8CHAR* base_cell_address;
   const OSUTF8CHAR* condition;
} Ns8_Map;

EXTERN int asn1E_Ns8_Map (OSCTXT* pctxt,
   Ns8_Map *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Map (OSCTXT* pctxt, Ns8_Map *pvalue, ASN1TagType tagging, 
   int length);

EXTERN int XmlEnc_Ns8_Map (OSCTXT* pctxt, Ns8_Map* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Map (OSCTXT* pctxt, Ns8_Map* pvalue);

EXTERN int DOMTest_Ns8_Map (OSCTXT* pctxt, Ns8_Map* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Map (Ns8_Map* pvalue);

/**************************************************************/
/*                                                            */
/*  Style                                                     */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Style	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Style {
   struct {
      unsigned auto_updatePresent : 1;
      unsigned class_Present : 1;
      unsigned data_style_namePresent : 1;
      unsigned default_outline_levelPresent : 1;
      unsigned display_namePresent : 1;
      unsigned list_style_namePresent : 1;
      unsigned master_page_namePresent : 1;
      unsigned next_style_namePresent : 1;
      unsigned parent_style_namePresent : 1;
      unsigned section_propertiesPresent : 1;
      unsigned table_propertiesPresent : 1;
      unsigned table_column_propertiesPresent : 1;
      unsigned table_row_propertiesPresent : 1;
      unsigned ruby_propertiesPresent : 1;
      unsigned drawing_page_propertiesPresent : 1;
      unsigned chart_propertiesPresent : 1;
      unsigned graphic_propertiesPresent : 1;
      unsigned table_cell_propertiesPresent : 1;
      unsigned paragraph_propertiesPresent : 1;
      unsigned text_propertiesPresent : 1;
   } m;
   Ns8_Style_auto_update auto_update;
   const OSUTF8CHAR* class_;
   Ns8_Data_style_name data_style_name;
   OSUINT32 default_outline_level;
   Ns8_Display_name display_name;
   Ns8_Style_family family;
   Ns8_Style_list_style_name list_style_name;
   Ns8_Style_master_page_name master_page_name;
   Ns8_Name name;
   Ns8_Style_next_style_name next_style_name;
   Ns8_Style_parent_style_name parent_style_name;
   Ns8_Section_properties section_properties;
   Ns8_Table_properties table_properties;
   Ns8_Table_column_properties table_column_properties;
   Ns8_Table_row_properties table_row_properties;
   Ns8_Ruby_properties ruby_properties;
   Ns8_Drawing_page_properties drawing_page_properties;
   Ns8_Chart_properties chart_properties;
   Ns8_Graphic_properties graphic_properties;
   Ns8_Table_cell_properties table_cell_properties;
   Ns8_Paragraph_properties paragraph_properties;
   Ns8_Text_properties text_properties;
   /* List of Ns8_Map */
   OSRTDList map_list;
} Ns8_Style;

EXTERN int asn1E_Ns8_Style (OSCTXT* pctxt,
   Ns8_Style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Style (OSCTXT* pctxt, Ns8_Style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Style (OSCTXT* pctxt, Ns8_Style* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Style (OSCTXT* pctxt, Ns8_Style* pvalue);

EXTERN int DOMTest_Ns8_Style (OSCTXT* pctxt, Ns8_Style* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Style (Ns8_Style* pvalue);

/**************************************************************/
/*                                                            */
/*  Volatile                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Volatile	(TM_UNIV|TM_PRIM|10)

typedef enum {
   Volatile_false_ = 0,
   Volatile_true_ = 1
} Ns8_Volatile_Root;

typedef OSUINT32 Ns8_Volatile;

EXTERN int asn1E_Ns8_Volatile (OSCTXT* pctxt,
   Ns8_Volatile *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Volatile (OSCTXT* pctxt, Ns8_Volatile *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Volatile (OSCTXT* pctxt, Ns8_Volatile value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Volatile (OSCTXT* pctxt, Ns8_Volatile* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Volatile_ToString (OSINT32 value);

EXTERN int Ns8_Volatile_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Volatile* pvalue);

/**************************************************************/
/*                                                            */
/*  Default_style_family                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Default_style_family	(TM_UNIV|TM_PRIM|10)

typedef enum {
   family_chart_1 = 0,
   family_drawing_page_1 = 1,
   family_graphic_1 = 2,
   family_paragraph_1 = 3,
   family_presentation_1 = 4,
   family_ruby_1 = 5,
   family_section_1 = 6,
   family_table_1 = 7,
   family_table_cell_1 = 8,
   family_table_column_1 = 9,
   family_table_row_1 = 10,
   family_text_1 = 11
} Ns8_Default_style_family_Root;

typedef OSUINT32 Ns8_Default_style_family;

EXTERN int asn1E_Ns8_Default_style_family (OSCTXT* pctxt,
   Ns8_Default_style_family *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Default_style_family (OSCTXT* pctxt, 
   Ns8_Default_style_family *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Default_style_family (OSCTXT* pctxt, 
   Ns8_Default_style_family value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Default_style_family (OSCTXT* pctxt, 
   Ns8_Default_style_family* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Default_style_family_ToString (OSINT32 value);

EXTERN int Ns8_Default_style_family_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Default_style_family* pvalue);

/**************************************************************/
/*                                                            */
/*  Default_style                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Default_style	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Default_style {
   struct {
      unsigned section_propertiesPresent : 1;
      unsigned table_propertiesPresent : 1;
      unsigned table_column_propertiesPresent : 1;
      unsigned table_row_propertiesPresent : 1;
      unsigned ruby_propertiesPresent : 1;
      unsigned drawing_page_propertiesPresent : 1;
      unsigned chart_propertiesPresent : 1;
      unsigned graphic_propertiesPresent : 1;
      unsigned table_cell_propertiesPresent : 1;
      unsigned paragraph_propertiesPresent : 1;
      unsigned text_propertiesPresent : 1;
   } m;
   Ns8_Default_style_family family;
   Ns8_Section_properties section_properties;
   Ns8_Table_properties table_properties;
   Ns8_Table_column_properties table_column_properties;
   Ns8_Table_row_properties table_row_properties;
   Ns8_Ruby_properties ruby_properties;
   Ns8_Drawing_page_properties drawing_page_properties;
   Ns8_Chart_properties chart_properties;
   Ns8_Graphic_properties graphic_properties;
   Ns8_Table_cell_properties table_cell_properties;
   Ns8_Paragraph_properties paragraph_properties;
   Ns8_Text_properties text_properties;
} Ns8_Default_style;

EXTERN int asn1E_Ns8_Default_style (OSCTXT* pctxt,
   Ns8_Default_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Default_style (OSCTXT* pctxt, Ns8_Default_style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Default_style (OSCTXT* pctxt, Ns8_Default_style* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Default_style (OSCTXT* pctxt, Ns8_Default_style* pvalue)
   ;

EXTERN int DOMTest_Ns8_Default_style (OSCTXT* pctxt, Ns8_Default_style* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Default_style (Ns8_Default_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Presentation_page_layout                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Presentation_page_layout	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Presentation_page_layout {
   struct {
      unsigned display_namePresent : 1;
   } m;
   Ns8_Display_name display_name;
   Ns8_Name name;
   /* List of Ns10_Placeholder */
   OSRTDList placeholder_list;
} Ns8_Presentation_page_layout;

EXTERN int asn1E_Ns8_Presentation_page_layout (OSCTXT* pctxt,
   Ns8_Presentation_page_layout *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Presentation_page_layout (OSCTXT* pctxt, 
   Ns8_Presentation_page_layout *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Presentation_page_layout (OSCTXT* pctxt, 
   Ns8_Presentation_page_layout* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Presentation_page_layout (OSCTXT* pctxt, 
   Ns8_Presentation_page_layout* pvalue);

EXTERN int DOMTest_Ns8_Presentation_page_layout (OSCTXT* pctxt, 
   Ns8_Presentation_page_layout* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Presentation_page_layout (
   Ns8_Presentation_page_layout* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_layout_page_usage                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Page_layout_page_usage	(TM_UNIV|TM_PRIM|10)

typedef enum {
   page_usage_all = 0,
   page_usage_left = 1,
   page_usage_mirrored = 2,
   page_usage_right = 3
} Ns8_Page_layout_page_usage_Root;

typedef OSUINT32 Ns8_Page_layout_page_usage;

EXTERN int asn1E_Ns8_Page_layout_page_usage (OSCTXT* pctxt,
   Ns8_Page_layout_page_usage *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Page_layout_page_usage (OSCTXT* pctxt, 
   Ns8_Page_layout_page_usage *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Page_layout_page_usage (OSCTXT* pctxt, 
   Ns8_Page_layout_page_usage value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Page_layout_page_usage (OSCTXT* pctxt, 
   Ns8_Page_layout_page_usage* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Page_layout_page_usage_ToString (OSINT32 value);

EXTERN int Ns8_Page_layout_page_usage_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Page_layout_page_usage* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_layout_properties                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Page_layout_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Page_layout_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Page_layout_properties;

EXTERN int asn1E_Ns8_Page_layout_properties (OSCTXT* pctxt,
   Ns8_Page_layout_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Page_layout_properties (OSCTXT* pctxt, 
   Ns8_Page_layout_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Page_layout_properties (OSCTXT* pctxt, 
   Ns8_Page_layout_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Page_layout_properties (OSCTXT* pctxt, 
   Ns8_Page_layout_properties* pvalue);

EXTERN int DOMTest_Ns8_Page_layout_properties (OSCTXT* pctxt, 
   Ns8_Page_layout_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Page_layout_properties (Ns8_Page_layout_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_footer_properties                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_footer_properties	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_footer_properties {
   /* List of const OSUTF8CHAR* */
   OSRTDList attr;
   /* List of Odf_Element14 */
   OSRTDList element14_list;
} Ns8_Header_footer_properties;

EXTERN int asn1E_Ns8_Header_footer_properties (OSCTXT* pctxt,
   Ns8_Header_footer_properties *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_footer_properties (OSCTXT* pctxt, 
   Ns8_Header_footer_properties *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_footer_properties (OSCTXT* pctxt, 
   Ns8_Header_footer_properties* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_footer_properties (OSCTXT* pctxt, 
   Ns8_Header_footer_properties* pvalue);

EXTERN int DOMTest_Ns8_Header_footer_properties (OSCTXT* pctxt, 
   Ns8_Header_footer_properties* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_footer_properties (
   Ns8_Header_footer_properties* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_style                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_style	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_style {
   struct {
      unsigned header_footer_propertiesPresent : 1;
   } m;
   Ns8_Header_footer_properties header_footer_properties;
} Ns8_Header_style;

EXTERN int asn1E_Ns8_Header_style (OSCTXT* pctxt,
   Ns8_Header_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_style (OSCTXT* pctxt, Ns8_Header_style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_style (OSCTXT* pctxt, Ns8_Header_style* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_style (OSCTXT* pctxt, Ns8_Header_style* pvalue);

EXTERN int DOMTest_Ns8_Header_style (OSCTXT* pctxt, Ns8_Header_style* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_style (Ns8_Header_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_style                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_style	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_style {
   struct {
      unsigned header_footer_propertiesPresent : 1;
   } m;
   Ns8_Header_footer_properties header_footer_properties;
} Ns8_Footer_style;

EXTERN int asn1E_Ns8_Footer_style (OSCTXT* pctxt,
   Ns8_Footer_style *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_style (OSCTXT* pctxt, Ns8_Footer_style *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_style (OSCTXT* pctxt, Ns8_Footer_style* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_style (OSCTXT* pctxt, Ns8_Footer_style* pvalue);

EXTERN int DOMTest_Ns8_Footer_style (OSCTXT* pctxt, Ns8_Footer_style* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_style (Ns8_Footer_style* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_layout                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Page_layout	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Page_layout {
   struct {
      unsigned page_usagePresent : 1;
      unsigned page_layout_propertiesPresent : 1;
      unsigned header_stylePresent : 1;
      unsigned footer_stylePresent : 1;
   } m;
   Ns8_Name name;
   Ns8_Page_layout_page_usage page_usage;
   Ns8_Page_layout_properties page_layout_properties;
   Ns8_Header_style header_style;
   Ns8_Footer_style footer_style;
} Ns8_Page_layout;

EXTERN int asn1E_Ns8_Page_layout (OSCTXT* pctxt,
   Ns8_Page_layout *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Page_layout (OSCTXT* pctxt, Ns8_Page_layout *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Page_layout (OSCTXT* pctxt, Ns8_Page_layout* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Page_layout (OSCTXT* pctxt, Ns8_Page_layout* pvalue);

EXTERN int DOMTest_Ns8_Page_layout (OSCTXT* pctxt, Ns8_Page_layout* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Page_layout (Ns8_Page_layout* pvalue);

/**************************************************************/
/*                                                            */
/*  Master_page_next_style_name                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Master_page_next_style_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Master_page_next_style_name_alt 1
#define T_Ns8_Master_page_next_style_name_alt_1 2

typedef struct Ns8_Master_page_next_style_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Master_page_next_style_name;

EXTERN int asn1E_Ns8_Master_page_next_style_name (OSCTXT* pctxt,
   Ns8_Master_page_next_style_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Master_page_next_style_name (OSCTXT* pctxt, 
   Ns8_Master_page_next_style_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Master_page_next_style_name (OSCTXT* pctxt, 
   Ns8_Master_page_next_style_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Master_page_next_style_name (OSCTXT* pctxt, 
   Ns8_Master_page_next_style_name* pvalue);

EXTERN int DOMTest_Ns8_Master_page_next_style_name (OSCTXT* pctxt, 
   Ns8_Master_page_next_style_name* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Master_page_next_style_name (
   Ns8_Master_page_next_style_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Page_layout_name                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Page_layout_name	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Page_layout_name_alt      1
#define T_Ns8_Page_layout_name_alt_1    2

typedef struct EXTERN Ns8_Page_layout_name {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns8_Page_layout_name;

EXTERN int asn1E_Ns8_Page_layout_name (OSCTXT* pctxt,
   Ns8_Page_layout_name *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Page_layout_name (OSCTXT* pctxt, 
   Ns8_Page_layout_name *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Page_layout_name (OSCTXT* pctxt, 
   Ns8_Page_layout_name* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Page_layout_name (OSCTXT* pctxt, 
   Ns8_Page_layout_name* pvalue);

EXTERN int DOMTest_Ns8_Page_layout_name (OSCTXT* pctxt, Ns8_Page_layout_name* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Page_layout_name (Ns8_Page_layout_name* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_display                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_display	(TM_UNIV|TM_PRIM|10)

typedef enum {
   display_false__1 = 0,
   display_true__2 = 1
} Ns8_Header_display_Root;

typedef OSUINT32 Ns8_Header_display;

EXTERN int asn1E_Ns8_Header_display (OSCTXT* pctxt,
   Ns8_Header_display *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_display (OSCTXT* pctxt, 
   Ns8_Header_display *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_display (OSCTXT* pctxt, Ns8_Header_display value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_display (OSCTXT* pctxt, 
   Ns8_Header_display* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Header_display_ToString (OSINT32 value);

EXTERN int Ns8_Header_display_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Header_display* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_sequence_element                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_sequence_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Header_sequence_element_h 1
#define T_Ns8_Header_sequence_element_p 2
#define T_Ns8_Header_sequence_element_list 3
#define T_Ns8_Header_sequence_element_table 4
#define T_Ns8_Header_sequence_element_section 5
#define T_Ns8_Header_sequence_element_table_of_content 6
#define T_Ns8_Header_sequence_element_illustration_index 7
#define T_Ns8_Header_sequence_element_table_index 8
#define T_Ns8_Header_sequence_element_object_index 9
#define T_Ns8_Header_sequence_element_user_index 10
#define T_Ns8_Header_sequence_element_alphabetical_index 11
#define T_Ns8_Header_sequence_element_bibliography 12
#define T_Ns8_Header_sequence_element_index_title 13
#define T_Ns8_Header_sequence_element_change 14
#define T_Ns8_Header_sequence_element_change_start 15
#define T_Ns8_Header_sequence_element_change_end 16

typedef struct EXTERN Ns8_Header_sequence_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_H *h;
      /* t = 2 */
      struct Odf_P *p;
      /* t = 3 */
      struct Odf_List *list;
      /* t = 4 */
      struct Table *table;
      /* t = 5 */
      struct Odf_Section *section;
      /* t = 6 */
      struct Odf_Table_of_content *table_of_content;
      /* t = 7 */
      struct Odf_Illustration_index *illustration_index;
      /* t = 8 */
      struct Odf_Table_index *table_index;
      /* t = 9 */
      struct Odf_Object_index *object_index;
      /* t = 10 */
      struct Odf_User_index *user_index;
      /* t = 11 */
      struct Odf_Alphabetical_index *alphabetical_index;
      /* t = 12 */
      struct Odf_Bibliography *bibliography;
      /* t = 13 */
      struct Odf_Index_title *index_title;
      /* t = 14 */
      struct Odf_Change *change;
      /* t = 15 */
      struct Odf_Change_start *change_start;
      /* t = 16 */
      struct Odf_Change_end *change_end;
   } u;
} Ns8_Header_sequence_element;

EXTERN int asn1E_Ns8_Header_sequence_element (OSCTXT* pctxt,
   Ns8_Header_sequence_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_sequence_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_sequence_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_sequence_element* pvalue);

EXTERN int DOMTest_Ns8_Header_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_sequence_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_sequence_element (Ns8_Header_sequence_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_sequence                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_sequence {
   struct {
      unsigned variable_declsPresent : 1;
      unsigned sequence_declsPresent : 1;
      unsigned user_field_declsPresent : 1;
      unsigned dde_connection_declsPresent : 1;
      unsigned alphabetical_index_auto_mark_filePresent : 1;
   } m;
   struct Odf_Variable_decls *variable_decls;
   struct Odf_Sequence_decls *sequence_decls;
   struct Odf_User_field_decls *user_field_decls;
   struct Odf_Dde_connection_decls *dde_connection_decls;
   struct Odf_Alphabetical_index_auto_mark_file *alphabetical_index_auto_mark_file;
   /* List of Ns8_Header_sequence_element */
   OSRTDList choice_list;
} Ns8_Header_sequence;

EXTERN int asn1E_Ns8_Header_sequence (OSCTXT* pctxt,
   Ns8_Header_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_sequence (OSCTXT* pctxt, 
   Ns8_Header_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_sequence (OSCTXT* pctxt, 
   Ns8_Header_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_sequence (OSCTXT* pctxt, 
   Ns8_Header_sequence* pvalue);

EXTERN int DOMTest_Ns8_Header_sequence (OSCTXT* pctxt, Ns8_Header_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_sequence (Ns8_Header_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Region_left                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Region_left	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Region_left {
   /* List of Odf_P */
   OSRTDList p_list;
} Ns8_Region_left;

EXTERN int asn1E_Ns8_Region_left (OSCTXT* pctxt,
   Ns8_Region_left *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Region_left (OSCTXT* pctxt, Ns8_Region_left *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Region_left (OSCTXT* pctxt, Ns8_Region_left* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Region_left (OSCTXT* pctxt, Ns8_Region_left* pvalue);

EXTERN int DOMTest_Ns8_Region_left (OSCTXT* pctxt, Ns8_Region_left* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Region_left (Ns8_Region_left* pvalue);

/**************************************************************/
/*                                                            */
/*  Region_center                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Region_center	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Region_center {
   /* List of Odf_P */
   OSRTDList p_list;
} Ns8_Region_center;

EXTERN int asn1E_Ns8_Region_center (OSCTXT* pctxt,
   Ns8_Region_center *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Region_center (OSCTXT* pctxt, Ns8_Region_center *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Region_center (OSCTXT* pctxt, Ns8_Region_center* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Region_center (OSCTXT* pctxt, Ns8_Region_center* pvalue)
   ;

EXTERN int DOMTest_Ns8_Region_center (OSCTXT* pctxt, Ns8_Region_center* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Region_center (Ns8_Region_center* pvalue);

/**************************************************************/
/*                                                            */
/*  Region_right                                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Region_right	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Region_right {
   /* List of Odf_P */
   OSRTDList p_list;
} Ns8_Region_right;

EXTERN int asn1E_Ns8_Region_right (OSCTXT* pctxt,
   Ns8_Region_right *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Region_right (OSCTXT* pctxt, Ns8_Region_right *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Region_right (OSCTXT* pctxt, Ns8_Region_right* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Region_right (OSCTXT* pctxt, Ns8_Region_right* pvalue);

EXTERN int DOMTest_Ns8_Region_right (OSCTXT* pctxt, Ns8_Region_right* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Region_right (Ns8_Region_right* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_sequence_1                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_sequence_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_sequence_1 {
   struct {
      unsigned region_leftPresent : 1;
      unsigned region_centerPresent : 1;
      unsigned region_rightPresent : 1;
   } m;
   Ns8_Region_left region_left;
   Ns8_Region_center region_center;
   Ns8_Region_right region_right;
} Ns8_Header_sequence_1;

EXTERN int asn1E_Ns8_Header_sequence_1 (OSCTXT* pctxt,
   Ns8_Header_sequence_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_sequence_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_sequence_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_sequence_1* pvalue);

EXTERN int DOMTest_Ns8_Header_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_sequence_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_sequence_1 (Ns8_Header_sequence_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_choice                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Header_choice_sequence    1
#define T_Ns8_Header_choice_sequence_1  2

typedef struct EXTERN Ns8_Header_choice {
   int t;
   union {
      /* t = 1 */
      Ns8_Header_sequence *sequence;
      /* t = 2 */
      Ns8_Header_sequence_1 *sequence_1;
   } u;
} Ns8_Header_choice;

EXTERN int asn1E_Ns8_Header_choice (OSCTXT* pctxt,
   Ns8_Header_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_choice (OSCTXT* pctxt, Ns8_Header_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_choice (OSCTXT* pctxt, Ns8_Header_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_choice (OSCTXT* pctxt, Ns8_Header_choice* pvalue)
   ;

EXTERN int DOMTest_Ns8_Header_choice (OSCTXT* pctxt, Ns8_Header_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_choice (Ns8_Header_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Header                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header {
   struct {
      unsigned displayPresent : 1;
   } m;
   Ns8_Header_display display;
   Ns8_Header_choice choice;
} Ns8_Header;

EXTERN int asn1E_Ns8_Header (OSCTXT* pctxt,
   Ns8_Header *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header (OSCTXT* pctxt, Ns8_Header *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header (OSCTXT* pctxt, Ns8_Header* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header (OSCTXT* pctxt, Ns8_Header* pvalue);

EXTERN int DOMTest_Ns8_Header (OSCTXT* pctxt, Ns8_Header* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header (Ns8_Header* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left_display                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left_display	(TM_UNIV|TM_PRIM|10)

typedef enum {
   display_false__2 = 0,
   display_true__3 = 1
} Ns8_Header_left_display_Root;

typedef OSUINT32 Ns8_Header_left_display;

EXTERN int asn1E_Ns8_Header_left_display (OSCTXT* pctxt,
   Ns8_Header_left_display *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left_display (OSCTXT* pctxt, 
   Ns8_Header_left_display *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left_display (OSCTXT* pctxt, 
   Ns8_Header_left_display value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left_display (OSCTXT* pctxt, 
   Ns8_Header_left_display* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Header_left_display_ToString (OSINT32 value);

EXTERN int Ns8_Header_left_display_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Header_left_display* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left_sequence_element                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left_sequence_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Header_left_sequence_element_h 1
#define T_Ns8_Header_left_sequence_element_p 2
#define T_Ns8_Header_left_sequence_element_list 3
#define T_Ns8_Header_left_sequence_element_table 4
#define T_Ns8_Header_left_sequence_element_section 5
#define T_Ns8_Header_left_sequence_element_table_of_content 6
#define T_Ns8_Header_left_sequence_element_illustration_index 7
#define T_Ns8_Header_left_sequence_element_table_index 8
#define T_Ns8_Header_left_sequence_element_object_index 9
#define T_Ns8_Header_left_sequence_element_user_index 10
#define T_Ns8_Header_left_sequence_element_alphabetical_index 11
#define T_Ns8_Header_left_sequence_element_bibliography 12
#define T_Ns8_Header_left_sequence_element_index_title 13
#define T_Ns8_Header_left_sequence_element_change 14
#define T_Ns8_Header_left_sequence_element_change_start 15
#define T_Ns8_Header_left_sequence_element_change_end 16

typedef struct EXTERN Ns8_Header_left_sequence_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_H *h;
      /* t = 2 */
      struct Odf_P *p;
      /* t = 3 */
      struct Odf_List *list;
      /* t = 4 */
      struct Table *table;
      /* t = 5 */
      struct Odf_Section *section;
      /* t = 6 */
      struct Odf_Table_of_content *table_of_content;
      /* t = 7 */
      struct Odf_Illustration_index *illustration_index;
      /* t = 8 */
      struct Odf_Table_index *table_index;
      /* t = 9 */
      struct Odf_Object_index *object_index;
      /* t = 10 */
      struct Odf_User_index *user_index;
      /* t = 11 */
      struct Odf_Alphabetical_index *alphabetical_index;
      /* t = 12 */
      struct Odf_Bibliography *bibliography;
      /* t = 13 */
      struct Odf_Index_title *index_title;
      /* t = 14 */
      struct Odf_Change *change;
      /* t = 15 */
      struct Odf_Change_start *change_start;
      /* t = 16 */
      struct Odf_Change_end *change_end;
   } u;
} Ns8_Header_left_sequence_element;

EXTERN int asn1E_Ns8_Header_left_sequence_element (OSCTXT* pctxt,
   Ns8_Header_left_sequence_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_element* pvalue);

EXTERN int DOMTest_Ns8_Header_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_left_sequence_element (
   Ns8_Header_left_sequence_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left_sequence                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_left_sequence {
   struct {
      unsigned variable_declsPresent : 1;
      unsigned sequence_declsPresent : 1;
      unsigned user_field_declsPresent : 1;
      unsigned dde_connection_declsPresent : 1;
      unsigned alphabetical_index_auto_mark_filePresent : 1;
   } m;
   struct Odf_Variable_decls *variable_decls;
   struct Odf_Sequence_decls *sequence_decls;
   struct Odf_User_field_decls *user_field_decls;
   struct Odf_Dde_connection_decls *dde_connection_decls;
   struct Odf_Alphabetical_index_auto_mark_file *alphabetical_index_auto_mark_file;
   /* List of Ns8_Header_left_sequence_element */
   OSRTDList choice_list;
} Ns8_Header_left_sequence;

EXTERN int asn1E_Ns8_Header_left_sequence (OSCTXT* pctxt,
   Ns8_Header_left_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left_sequence (OSCTXT* pctxt, 
   Ns8_Header_left_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left_sequence (OSCTXT* pctxt, 
   Ns8_Header_left_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left_sequence (OSCTXT* pctxt, 
   Ns8_Header_left_sequence* pvalue);

EXTERN int DOMTest_Ns8_Header_left_sequence (OSCTXT* pctxt, 
   Ns8_Header_left_sequence* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_left_sequence (Ns8_Header_left_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left_sequence_1                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left_sequence_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_left_sequence_1 {
   struct {
      unsigned region_leftPresent : 1;
      unsigned region_centerPresent : 1;
      unsigned region_rightPresent : 1;
   } m;
   Ns8_Region_left region_left;
   Ns8_Region_center region_center;
   Ns8_Region_right region_right;
} Ns8_Header_left_sequence_1;

EXTERN int asn1E_Ns8_Header_left_sequence_1 (OSCTXT* pctxt,
   Ns8_Header_left_sequence_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_1* pvalue);

EXTERN int DOMTest_Ns8_Header_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Header_left_sequence_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_left_sequence_1 (Ns8_Header_left_sequence_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left_choice                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Header_left_choice_sequence 1
#define T_Ns8_Header_left_choice_sequence_1 2

typedef struct EXTERN Ns8_Header_left_choice {
   int t;
   union {
      /* t = 1 */
      Ns8_Header_left_sequence *sequence;
      /* t = 2 */
      Ns8_Header_left_sequence_1 *sequence_1;
   } u;
} Ns8_Header_left_choice;

EXTERN int asn1E_Ns8_Header_left_choice (OSCTXT* pctxt,
   Ns8_Header_left_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left_choice (OSCTXT* pctxt, 
   Ns8_Header_left_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left_choice (OSCTXT* pctxt, 
   Ns8_Header_left_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left_choice (OSCTXT* pctxt, 
   Ns8_Header_left_choice* pvalue);

EXTERN int DOMTest_Ns8_Header_left_choice (OSCTXT* pctxt, 
   Ns8_Header_left_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_left_choice (Ns8_Header_left_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Header_left                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Header_left	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Header_left {
   struct {
      unsigned displayPresent : 1;
   } m;
   Ns8_Header_left_display display;
   Ns8_Header_left_choice choice;
} Ns8_Header_left;

EXTERN int asn1E_Ns8_Header_left (OSCTXT* pctxt,
   Ns8_Header_left *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Header_left (OSCTXT* pctxt, Ns8_Header_left *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Header_left (OSCTXT* pctxt, Ns8_Header_left* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Header_left (OSCTXT* pctxt, Ns8_Header_left* pvalue);

EXTERN int DOMTest_Ns8_Header_left (OSCTXT* pctxt, Ns8_Header_left* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Header_left (Ns8_Header_left* pvalue);

/**************************************************************/
/*                                                            */
/*  Master_page_sequence                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Master_page_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Master_page_sequence {
   struct {
      unsigned header_leftPresent : 1;
   } m;
   Ns8_Header header;
   Ns8_Header_left header_left;
} Ns8_Master_page_sequence;

EXTERN int asn1E_Ns8_Master_page_sequence (OSCTXT* pctxt,
   Ns8_Master_page_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Master_page_sequence (OSCTXT* pctxt, 
   Ns8_Master_page_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Master_page_sequence (OSCTXT* pctxt, 
   Ns8_Master_page_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Master_page_sequence (OSCTXT* pctxt, 
   Ns8_Master_page_sequence* pvalue);

EXTERN int DOMTest_Ns8_Master_page_sequence (OSCTXT* pctxt, 
   Ns8_Master_page_sequence* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Master_page_sequence (Ns8_Master_page_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_display                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_display	(TM_UNIV|TM_PRIM|10)

typedef enum {
   display_false__3 = 0,
   display_true__4 = 1
} Ns8_Footer_display_Root;

typedef OSUINT32 Ns8_Footer_display;

EXTERN int asn1E_Ns8_Footer_display (OSCTXT* pctxt,
   Ns8_Footer_display *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_display (OSCTXT* pctxt, 
   Ns8_Footer_display *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_display (OSCTXT* pctxt, Ns8_Footer_display value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_display (OSCTXT* pctxt, 
   Ns8_Footer_display* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Footer_display_ToString (OSINT32 value);

EXTERN int Ns8_Footer_display_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Footer_display* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_sequence_element                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_sequence_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Footer_sequence_element_h 1
#define T_Ns8_Footer_sequence_element_p 2
#define T_Ns8_Footer_sequence_element_list 3
#define T_Ns8_Footer_sequence_element_table 4
#define T_Ns8_Footer_sequence_element_section 5
#define T_Ns8_Footer_sequence_element_table_of_content 6
#define T_Ns8_Footer_sequence_element_illustration_index 7
#define T_Ns8_Footer_sequence_element_table_index 8
#define T_Ns8_Footer_sequence_element_object_index 9
#define T_Ns8_Footer_sequence_element_user_index 10
#define T_Ns8_Footer_sequence_element_alphabetical_index 11
#define T_Ns8_Footer_sequence_element_bibliography 12
#define T_Ns8_Footer_sequence_element_index_title 13
#define T_Ns8_Footer_sequence_element_change 14
#define T_Ns8_Footer_sequence_element_change_start 15
#define T_Ns8_Footer_sequence_element_change_end 16

typedef struct EXTERN Ns8_Footer_sequence_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_H *h;
      /* t = 2 */
      struct Odf_P *p;
      /* t = 3 */
      struct Odf_List *list;
      /* t = 4 */
      struct Table *table;
      /* t = 5 */
      struct Odf_Section *section;
      /* t = 6 */
      struct Odf_Table_of_content *table_of_content;
      /* t = 7 */
      struct Odf_Illustration_index *illustration_index;
      /* t = 8 */
      struct Odf_Table_index *table_index;
      /* t = 9 */
      struct Odf_Object_index *object_index;
      /* t = 10 */
      struct Odf_User_index *user_index;
      /* t = 11 */
      struct Odf_Alphabetical_index *alphabetical_index;
      /* t = 12 */
      struct Odf_Bibliography *bibliography;
      /* t = 13 */
      struct Odf_Index_title *index_title;
      /* t = 14 */
      struct Odf_Change *change;
      /* t = 15 */
      struct Odf_Change_start *change_start;
      /* t = 16 */
      struct Odf_Change_end *change_end;
   } u;
} Ns8_Footer_sequence_element;

EXTERN int asn1E_Ns8_Footer_sequence_element (OSCTXT* pctxt,
   Ns8_Footer_sequence_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_sequence_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_sequence_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_sequence_element* pvalue);

EXTERN int DOMTest_Ns8_Footer_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_sequence_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_sequence_element (Ns8_Footer_sequence_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_sequence                                           */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_sequence {
   struct {
      unsigned variable_declsPresent : 1;
      unsigned sequence_declsPresent : 1;
      unsigned user_field_declsPresent : 1;
      unsigned dde_connection_declsPresent : 1;
      unsigned alphabetical_index_auto_mark_filePresent : 1;
   } m;
   struct Odf_Variable_decls *variable_decls;
   struct Odf_Sequence_decls *sequence_decls;
   struct Odf_User_field_decls *user_field_decls;
   struct Odf_Dde_connection_decls *dde_connection_decls;
   struct Odf_Alphabetical_index_auto_mark_file *alphabetical_index_auto_mark_file;
   /* List of Ns8_Footer_sequence_element */
   OSRTDList choice_list;
} Ns8_Footer_sequence;

EXTERN int asn1E_Ns8_Footer_sequence (OSCTXT* pctxt,
   Ns8_Footer_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_sequence (OSCTXT* pctxt, 
   Ns8_Footer_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_sequence (OSCTXT* pctxt, 
   Ns8_Footer_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_sequence (OSCTXT* pctxt, 
   Ns8_Footer_sequence* pvalue);

EXTERN int DOMTest_Ns8_Footer_sequence (OSCTXT* pctxt, Ns8_Footer_sequence* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_sequence (Ns8_Footer_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_sequence_1                                         */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_sequence_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_sequence_1 {
   struct {
      unsigned region_leftPresent : 1;
      unsigned region_centerPresent : 1;
      unsigned region_rightPresent : 1;
   } m;
   Ns8_Region_left region_left;
   Ns8_Region_center region_center;
   Ns8_Region_right region_right;
} Ns8_Footer_sequence_1;

EXTERN int asn1E_Ns8_Footer_sequence_1 (OSCTXT* pctxt,
   Ns8_Footer_sequence_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_sequence_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_sequence_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_sequence_1* pvalue);

EXTERN int DOMTest_Ns8_Footer_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_sequence_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_sequence_1 (Ns8_Footer_sequence_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_choice                                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Footer_choice_sequence    1
#define T_Ns8_Footer_choice_sequence_1  2

typedef struct EXTERN Ns8_Footer_choice {
   int t;
   union {
      /* t = 1 */
      Ns8_Footer_sequence *sequence;
      /* t = 2 */
      Ns8_Footer_sequence_1 *sequence_1;
   } u;
} Ns8_Footer_choice;

EXTERN int asn1E_Ns8_Footer_choice (OSCTXT* pctxt,
   Ns8_Footer_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_choice (OSCTXT* pctxt, Ns8_Footer_choice *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_choice (OSCTXT* pctxt, Ns8_Footer_choice* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_choice (OSCTXT* pctxt, Ns8_Footer_choice* pvalue)
   ;

EXTERN int DOMTest_Ns8_Footer_choice (OSCTXT* pctxt, Ns8_Footer_choice* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_choice (Ns8_Footer_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer                                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer {
   struct {
      unsigned displayPresent : 1;
   } m;
   Ns8_Footer_display display;
   Ns8_Footer_choice choice;
} Ns8_Footer;

EXTERN int asn1E_Ns8_Footer (OSCTXT* pctxt,
   Ns8_Footer *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer (OSCTXT* pctxt, Ns8_Footer *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer (OSCTXT* pctxt, Ns8_Footer* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer (OSCTXT* pctxt, Ns8_Footer* pvalue);

EXTERN int DOMTest_Ns8_Footer (OSCTXT* pctxt, Ns8_Footer* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer (Ns8_Footer* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left_display                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left_display	(TM_UNIV|TM_PRIM|10)

typedef enum {
   display_false__4 = 0,
   display_true__5 = 1
} Ns8_Footer_left_display_Root;

typedef OSUINT32 Ns8_Footer_left_display;

EXTERN int asn1E_Ns8_Footer_left_display (OSCTXT* pctxt,
   Ns8_Footer_left_display *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left_display (OSCTXT* pctxt, 
   Ns8_Footer_left_display *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left_display (OSCTXT* pctxt, 
   Ns8_Footer_left_display value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left_display (OSCTXT* pctxt, 
   Ns8_Footer_left_display* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Footer_left_display_ToString (OSINT32 value);

EXTERN int Ns8_Footer_left_display_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Footer_left_display* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left_sequence_element                              */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left_sequence_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Footer_left_sequence_element_h 1
#define T_Ns8_Footer_left_sequence_element_p 2
#define T_Ns8_Footer_left_sequence_element_list 3
#define T_Ns8_Footer_left_sequence_element_table 4
#define T_Ns8_Footer_left_sequence_element_section 5
#define T_Ns8_Footer_left_sequence_element_table_of_content 6
#define T_Ns8_Footer_left_sequence_element_illustration_index 7
#define T_Ns8_Footer_left_sequence_element_table_index 8
#define T_Ns8_Footer_left_sequence_element_object_index 9
#define T_Ns8_Footer_left_sequence_element_user_index 10
#define T_Ns8_Footer_left_sequence_element_alphabetical_index 11
#define T_Ns8_Footer_left_sequence_element_bibliography 12
#define T_Ns8_Footer_left_sequence_element_index_title 13
#define T_Ns8_Footer_left_sequence_element_change 14
#define T_Ns8_Footer_left_sequence_element_change_start 15
#define T_Ns8_Footer_left_sequence_element_change_end 16

typedef struct EXTERN Ns8_Footer_left_sequence_element {
   int t;
   union {
      /* t = 1 */
      struct Odf_H *h;
      /* t = 2 */
      struct Odf_P *p;
      /* t = 3 */
      struct Odf_List *list;
      /* t = 4 */
      struct Table *table;
      /* t = 5 */
      struct Odf_Section *section;
      /* t = 6 */
      struct Odf_Table_of_content *table_of_content;
      /* t = 7 */
      struct Odf_Illustration_index *illustration_index;
      /* t = 8 */
      struct Odf_Table_index *table_index;
      /* t = 9 */
      struct Odf_Object_index *object_index;
      /* t = 10 */
      struct Odf_User_index *user_index;
      /* t = 11 */
      struct Odf_Alphabetical_index *alphabetical_index;
      /* t = 12 */
      struct Odf_Bibliography *bibliography;
      /* t = 13 */
      struct Odf_Index_title *index_title;
      /* t = 14 */
      struct Odf_Change *change;
      /* t = 15 */
      struct Odf_Change_start *change_start;
      /* t = 16 */
      struct Odf_Change_end *change_end;
   } u;
} Ns8_Footer_left_sequence_element;

EXTERN int asn1E_Ns8_Footer_left_sequence_element (OSCTXT* pctxt,
   Ns8_Footer_left_sequence_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_element* pvalue);

EXTERN int DOMTest_Ns8_Footer_left_sequence_element (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_element* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_left_sequence_element (
   Ns8_Footer_left_sequence_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left_sequence                                      */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left_sequence	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_left_sequence {
   struct {
      unsigned variable_declsPresent : 1;
      unsigned sequence_declsPresent : 1;
      unsigned user_field_declsPresent : 1;
      unsigned dde_connection_declsPresent : 1;
      unsigned alphabetical_index_auto_mark_filePresent : 1;
   } m;
   struct Odf_Variable_decls *variable_decls;
   struct Odf_Sequence_decls *sequence_decls;
   struct Odf_User_field_decls *user_field_decls;
   struct Odf_Dde_connection_decls *dde_connection_decls;
   struct Odf_Alphabetical_index_auto_mark_file *alphabetical_index_auto_mark_file;
   /* List of Ns8_Footer_left_sequence_element */
   OSRTDList choice_list;
} Ns8_Footer_left_sequence;

EXTERN int asn1E_Ns8_Footer_left_sequence (OSCTXT* pctxt,
   Ns8_Footer_left_sequence *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left_sequence (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left_sequence (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left_sequence (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence* pvalue);

EXTERN int DOMTest_Ns8_Footer_left_sequence (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_left_sequence (Ns8_Footer_left_sequence* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left_sequence_1                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left_sequence_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_left_sequence_1 {
   struct {
      unsigned region_leftPresent : 1;
      unsigned region_centerPresent : 1;
      unsigned region_rightPresent : 1;
   } m;
   Ns8_Region_left region_left;
   Ns8_Region_center region_center;
   Ns8_Region_right region_right;
} Ns8_Footer_left_sequence_1;

EXTERN int asn1E_Ns8_Footer_left_sequence_1 (OSCTXT* pctxt,
   Ns8_Footer_left_sequence_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_1* pvalue);

EXTERN int DOMTest_Ns8_Footer_left_sequence_1 (OSCTXT* pctxt, 
   Ns8_Footer_left_sequence_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_left_sequence_1 (Ns8_Footer_left_sequence_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left_choice                                        */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left_choice	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Footer_left_choice_sequence 1
#define T_Ns8_Footer_left_choice_sequence_1 2

typedef struct EXTERN Ns8_Footer_left_choice {
   int t;
   union {
      /* t = 1 */
      Ns8_Footer_left_sequence *sequence;
      /* t = 2 */
      Ns8_Footer_left_sequence_1 *sequence_1;
   } u;
} Ns8_Footer_left_choice;

EXTERN int asn1E_Ns8_Footer_left_choice (OSCTXT* pctxt,
   Ns8_Footer_left_choice *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left_choice (OSCTXT* pctxt, 
   Ns8_Footer_left_choice *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left_choice (OSCTXT* pctxt, 
   Ns8_Footer_left_choice* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left_choice (OSCTXT* pctxt, 
   Ns8_Footer_left_choice* pvalue);

EXTERN int DOMTest_Ns8_Footer_left_choice (OSCTXT* pctxt, 
   Ns8_Footer_left_choice* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_left_choice (Ns8_Footer_left_choice* pvalue);

/**************************************************************/
/*                                                            */
/*  Footer_left                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Footer_left	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Footer_left {
   struct {
      unsigned displayPresent : 1;
   } m;
   Ns8_Footer_left_display display;
   Ns8_Footer_left_choice choice;
} Ns8_Footer_left;

EXTERN int asn1E_Ns8_Footer_left (OSCTXT* pctxt,
   Ns8_Footer_left *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Footer_left (OSCTXT* pctxt, Ns8_Footer_left *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Footer_left (OSCTXT* pctxt, Ns8_Footer_left* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Footer_left (OSCTXT* pctxt, Ns8_Footer_left* pvalue);

EXTERN int DOMTest_Ns8_Footer_left (OSCTXT* pctxt, Ns8_Footer_left* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Footer_left (Ns8_Footer_left* pvalue);

/**************************************************************/
/*                                                            */
/*  Master_page_sequence_1                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Master_page_sequence_1	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Master_page_sequence_1 {
   struct {
      unsigned footer_leftPresent : 1;
   } m;
   Ns8_Footer footer;
   Ns8_Footer_left footer_left;
} Ns8_Master_page_sequence_1;

EXTERN int asn1E_Ns8_Master_page_sequence_1 (OSCTXT* pctxt,
   Ns8_Master_page_sequence_1 *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Master_page_sequence_1 (OSCTXT* pctxt, 
   Ns8_Master_page_sequence_1 *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Master_page_sequence_1 (OSCTXT* pctxt, 
   Ns8_Master_page_sequence_1* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Master_page_sequence_1 (OSCTXT* pctxt, 
   Ns8_Master_page_sequence_1* pvalue);

EXTERN int DOMTest_Ns8_Master_page_sequence_1 (OSCTXT* pctxt, 
   Ns8_Master_page_sequence_1* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Master_page_sequence_1 (Ns8_Master_page_sequence_1* pvalue);

/**************************************************************/
/*                                                            */
/*  Master_page_element                                       */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Master_page_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Master_page_element_rect  1
#define T_Ns8_Master_page_element_line  2
#define T_Ns8_Master_page_element_polyline 3
#define T_Ns8_Master_page_element_polygon 4
#define T_Ns8_Master_page_element_regular_polygon 5
#define T_Ns8_Master_page_element_path  6
#define T_Ns8_Master_page_element_circle 7
#define T_Ns8_Master_page_element_ellipse 8
#define T_Ns8_Master_page_element_g     9
#define T_Ns8_Master_page_element_page_thumbnail 10
#define T_Ns8_Master_page_element_frame 11
#define T_Ns8_Master_page_element_measure 12
#define T_Ns8_Master_page_element_caption 13
#define T_Ns8_Master_page_element_connector 14
#define T_Ns8_Master_page_element_control 15
#define T_Ns8_Master_page_element_scene 16
#define T_Ns8_Master_page_element_custom_shape 17

typedef struct EXTERN Ns8_Master_page_element {
   int t;
   union {
      /* t = 1 */
      struct Ns3_Rect *rect;
      /* t = 2 */
      struct Ns3_Line *line;
      /* t = 3 */
      struct Ns3_Polyline *polyline;
      /* t = 4 */
      struct Ns3_Polygon *polygon;
      /* t = 5 */
      struct Ns3_Regular_polygon *regular_polygon;
      /* t = 6 */
      struct Ns3_Path *path;
      /* t = 7 */
      struct Ns3_Circle *circle;
      /* t = 8 */
      struct Ns3_Ellipse *ellipse;
      /* t = 9 */
      struct Ns3_G *g;
      /* t = 10 */
      struct Ns3_Page_thumbnail *page_thumbnail;
      /* t = 11 */
      struct Ns3_Frame *frame;
      /* t = 12 */
      struct Ns3_Measure *measure;
      /* t = 13 */
      struct Ns3_Caption *caption;
      /* t = 14 */
      struct Ns3_Connector *connector;
      /* t = 15 */
      struct Ns3_Control *control;
      /* t = 16 */
      struct Ns7_Scene *scene;
      /* t = 17 */
      struct Ns3_Custom_shape *custom_shape;
   } u;
} Ns8_Master_page_element;

EXTERN int asn1E_Ns8_Master_page_element (OSCTXT* pctxt,
   Ns8_Master_page_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Master_page_element (OSCTXT* pctxt, 
   Ns8_Master_page_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Master_page_element (OSCTXT* pctxt, 
   Ns8_Master_page_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Master_page_element (OSCTXT* pctxt, 
   Ns8_Master_page_element* pvalue);

EXTERN int DOMTest_Ns8_Master_page_element (OSCTXT* pctxt, 
   Ns8_Master_page_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Master_page_element (Ns8_Master_page_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Master_page                                               */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Master_page	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Master_page {
   struct {
      unsigned style_namePresent : 1;
      unsigned display_namePresent : 1;
      unsigned next_style_namePresent : 1;
      unsigned sequencePresent : 1;
      unsigned sequence_1Present : 1;
      unsigned formsPresent : 1;
      unsigned notesPresent : 1;
   } m;
   struct Ns3_Style_name *style_name;
   Ns8_Display_name display_name;
   Ns8_Name name;
   Ns8_Master_page_next_style_name next_style_name;
   Ns8_Page_layout_name page_layout_name;
   Ns8_Master_page_sequence sequence;
   Ns8_Master_page_sequence_1 sequence_1;
   struct Ns13_Forms *forms;
   /* List of Ns8_Style */
   OSRTDList style_list;
   /* List of Ns8_Master_page_element */
   OSRTDList choice_list;
   struct Ns10_Notes *notes;
} Ns8_Master_page;

EXTERN int asn1E_Ns8_Master_page (OSCTXT* pctxt,
   Ns8_Master_page *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Master_page (OSCTXT* pctxt, Ns8_Master_page *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Master_page (OSCTXT* pctxt, Ns8_Master_page* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Master_page (OSCTXT* pctxt, Ns8_Master_page* pvalue);

EXTERN int DOMTest_Ns8_Master_page (OSCTXT* pctxt, Ns8_Master_page* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Master_page (Ns8_Master_page* pvalue);

/**************************************************************/
/*                                                            */
/*  Handout_master_element                                    */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Handout_master_element	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns8_Handout_master_element_rect 1
#define T_Ns8_Handout_master_element_line 2
#define T_Ns8_Handout_master_element_polyline 3
#define T_Ns8_Handout_master_element_polygon 4
#define T_Ns8_Handout_master_element_regular_polygon 5
#define T_Ns8_Handout_master_element_path 6
#define T_Ns8_Handout_master_element_circle 7
#define T_Ns8_Handout_master_element_ellipse 8
#define T_Ns8_Handout_master_element_g  9
#define T_Ns8_Handout_master_element_page_thumbnail 10
#define T_Ns8_Handout_master_element_frame 11
#define T_Ns8_Handout_master_element_measure 12
#define T_Ns8_Handout_master_element_caption 13
#define T_Ns8_Handout_master_element_connector 14
#define T_Ns8_Handout_master_element_control 15
#define T_Ns8_Handout_master_element_scene 16
#define T_Ns8_Handout_master_element_custom_shape 17

typedef struct EXTERN Ns8_Handout_master_element {
   int t;
   union {
      /* t = 1 */
      struct Ns3_Rect *rect;
      /* t = 2 */
      struct Ns3_Line *line;
      /* t = 3 */
      struct Ns3_Polyline *polyline;
      /* t = 4 */
      struct Ns3_Polygon *polygon;
      /* t = 5 */
      struct Ns3_Regular_polygon *regular_polygon;
      /* t = 6 */
      struct Ns3_Path *path;
      /* t = 7 */
      struct Ns3_Circle *circle;
      /* t = 8 */
      struct Ns3_Ellipse *ellipse;
      /* t = 9 */
      struct Ns3_G *g;
      /* t = 10 */
      struct Ns3_Page_thumbnail *page_thumbnail;
      /* t = 11 */
      struct Ns3_Frame *frame;
      /* t = 12 */
      struct Ns3_Measure *measure;
      /* t = 13 */
      struct Ns3_Caption *caption;
      /* t = 14 */
      struct Ns3_Connector *connector;
      /* t = 15 */
      struct Ns3_Control *control;
      /* t = 16 */
      struct Ns7_Scene *scene;
      /* t = 17 */
      struct Ns3_Custom_shape *custom_shape;
   } u;
} Ns8_Handout_master_element;

EXTERN int asn1E_Ns8_Handout_master_element (OSCTXT* pctxt,
   Ns8_Handout_master_element *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Handout_master_element (OSCTXT* pctxt, 
   Ns8_Handout_master_element *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Handout_master_element (OSCTXT* pctxt, 
   Ns8_Handout_master_element* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Handout_master_element (OSCTXT* pctxt, 
   Ns8_Handout_master_element* pvalue);

EXTERN int DOMTest_Ns8_Handout_master_element (OSCTXT* pctxt, 
   Ns8_Handout_master_element* pvalue, xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Handout_master_element (Ns8_Handout_master_element* pvalue);

/**************************************************************/
/*                                                            */
/*  Handout_master                                            */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Handout_master	(TM_UNIV|TM_CONS|16)

typedef struct EXTERN Ns8_Handout_master {
   struct {
      unsigned style_namePresent : 1;
      unsigned presentation_page_layout_namePresent : 1;
      unsigned use_date_time_namePresent : 1;
      unsigned use_footer_namePresent : 1;
      unsigned use_header_namePresent : 1;
   } m;
   struct Ns3_Style_name *style_name;
   struct Ns10_Presentation_page_layout_name *presentation_page_layout_name;
   const OSUTF8CHAR* use_date_time_name;
   const OSUTF8CHAR* use_footer_name;
   const OSUTF8CHAR* use_header_name;
   Ns8_Page_layout_name page_layout_name;
   /* List of Ns8_Handout_master_element */
   OSRTDList choice_list;
} Ns8_Handout_master;

EXTERN int asn1E_Ns8_Handout_master (OSCTXT* pctxt,
   Ns8_Handout_master *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Handout_master (OSCTXT* pctxt, 
   Ns8_Handout_master *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Handout_master (OSCTXT* pctxt, 
   Ns8_Handout_master* pvalue, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Handout_master (OSCTXT* pctxt, 
   Ns8_Handout_master* pvalue);

EXTERN int DOMTest_Ns8_Handout_master (OSCTXT* pctxt, Ns8_Handout_master* pvalue, 
   xmlNodePtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns8_Handout_master (Ns8_Handout_master* pvalue);

/**************************************************************/
/*                                                            */
/*  Legend_expansion                                          */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Legend_expansion	(TM_UNIV|TM_PRIM|10)

typedef enum {
   Legend_expansion_balanced = 0,
   Legend_expansion_custom = 1,
   Legend_expansion_high = 2,
   Legend_expansion_wide = 3
} Ns8_Legend_expansion_Root;

typedef OSUINT32 Ns8_Legend_expansion;

EXTERN int asn1E_Ns8_Legend_expansion (OSCTXT* pctxt,
   Ns8_Legend_expansion *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Legend_expansion (OSCTXT* pctxt, 
   Ns8_Legend_expansion *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Legend_expansion (OSCTXT* pctxt, 
   Ns8_Legend_expansion value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Legend_expansion (OSCTXT* pctxt, 
   Ns8_Legend_expansion* pvalue);

EXTERN const OSUTF8CHAR* Ns8_Legend_expansion_ToString (OSINT32 value);

EXTERN int Ns8_Legend_expansion_ToEnum (OSCTXT* pctxt,
   const OSUTF8CHAR* value, Ns8_Legend_expansion* pvalue);

/**************************************************************/
/*                                                            */
/*  Legend_expansion_aspect_ratio                             */
/*                                                            */
/**************************************************************/

#define TV_Ns8_Legend_expansion_aspect_ratio	(TM_UNIV|TM_PRIM|9)

typedef OSREAL Ns8_Legend_expansion_aspect_ratio;

EXTERN int asn1E_Ns8_Legend_expansion_aspect_ratio (OSCTXT* pctxt,
   Ns8_Legend_expansion_aspect_ratio *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns8_Legend_expansion_aspect_ratio (OSCTXT* pctxt, 
   Ns8_Legend_expansion_aspect_ratio *pvalue, ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns8_Legend_expansion_aspect_ratio (OSCTXT* pctxt, 
   Ns8_Legend_expansion_aspect_ratio value, const OSUTF8CHAR* elemName, 
   const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns8_Legend_expansion_aspect_ratio (OSCTXT* pctxt, 
   Ns8_Legend_expansion_aspect_ratio* pvalue);

#ifdef __cplusplus
}
#endif

#endif
