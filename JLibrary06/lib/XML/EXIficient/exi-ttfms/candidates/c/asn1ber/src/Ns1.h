/**
 * This file was generated by the Objective Systems ASN1C Compiler
 * (http://www.obj-sys.com).  Version: 6.0B, Date: 18-Oct-2006.
 */
#ifndef NS1_H
#define NS1_H

#ifdef __cplusplus
extern "C" {
#endif

#include <stdio.h>
#include <stdlib.h>
#include "rtkey.h"
#include "rtbersrc/asn1ber.h"
#include "rtsrc/asn1type.h"
#include "rtxmlsrc/asn1xml.h"
#include "libxml/parser.h"

/**
 * Header file for ASN.1 module Ns1
 */
/**************************************************************/
/*                                                            */
/*  Country                                                   */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Country	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns1_Country;

EXTERN int asn1E_Ns1_Country (OSCTXT* pctxt,
   Ns1_Country pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Country (OSCTXT* pctxt, Ns1_Country *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Country (OSCTXT* pctxt, Ns1_Country value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Country (OSCTXT* pctxt, Ns1_Country* pvalue);

/**************************************************************/
/*                                                            */
/*  Language                                                  */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Language	(TM_UNIV|TM_PRIM|12)

typedef const OSUTF8CHAR* Ns1_Language;

EXTERN int asn1E_Ns1_Language (OSCTXT* pctxt,
   Ns1_Language pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Language (OSCTXT* pctxt, Ns1_Language *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Language (OSCTXT* pctxt, Ns1_Language value, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Language (OSCTXT* pctxt, Ns1_Language* pvalue);

/**************************************************************/
/*                                                            */
/*  Max_height                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Max_height	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns1_Max_height_alt            1
#define T_Ns1_Max_height_alt_1          2

typedef struct EXTERN Ns1_Max_height {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns1_Max_height;

EXTERN int asn1E_Ns1_Max_height (OSCTXT* pctxt,
   Ns1_Max_height *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Max_height (OSCTXT* pctxt, Ns1_Max_height *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Max_height (OSCTXT* pctxt, Ns1_Max_height* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Max_height (OSCTXT* pctxt, Ns1_Max_height* pvalue);

EXTERN int DOMTest_Ns1_Max_height (OSCTXT* pctxt, Ns1_Max_height* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns1_Max_height (Ns1_Max_height* pvalue);

/**************************************************************/
/*                                                            */
/*  Max_width                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Max_width	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns1_Max_width_alt             1
#define T_Ns1_Max_width_alt_1           2

typedef struct EXTERN Ns1_Max_width {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns1_Max_width;

EXTERN int asn1E_Ns1_Max_width (OSCTXT* pctxt,
   Ns1_Max_width *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Max_width (OSCTXT* pctxt, Ns1_Max_width *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Max_width (OSCTXT* pctxt, Ns1_Max_width* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Max_width (OSCTXT* pctxt, Ns1_Max_width* pvalue);

EXTERN int DOMTest_Ns1_Max_width (OSCTXT* pctxt, Ns1_Max_width* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns1_Max_width (Ns1_Max_width* pvalue);

/**************************************************************/
/*                                                            */
/*  Min_height                                                */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Min_height	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns1_Min_height_alt            1
#define T_Ns1_Min_height_alt_1          2

typedef struct EXTERN Ns1_Min_height {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns1_Min_height;

EXTERN int asn1E_Ns1_Min_height (OSCTXT* pctxt,
   Ns1_Min_height *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Min_height (OSCTXT* pctxt, Ns1_Min_height *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Min_height (OSCTXT* pctxt, Ns1_Min_height* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Min_height (OSCTXT* pctxt, Ns1_Min_height* pvalue);

EXTERN int DOMTest_Ns1_Min_height (OSCTXT* pctxt, Ns1_Min_height* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns1_Min_height (Ns1_Min_height* pvalue);

/**************************************************************/
/*                                                            */
/*  Min_width                                                 */
/*                                                            */
/**************************************************************/

#define TV_Ns1_Min_width	(TM_UNIV|TM_CONS|0)

/* Choice tag constants */

#define T_Ns1_Min_width_alt             1
#define T_Ns1_Min_width_alt_1           2

typedef struct EXTERN Ns1_Min_width {
   int t;
   union {
      /* t = 1 */
      const OSUTF8CHAR* alt;
      /* t = 2 */
      const OSUTF8CHAR* alt_1;
   } u;
} Ns1_Min_width;

EXTERN int asn1E_Ns1_Min_width (OSCTXT* pctxt,
   Ns1_Min_width *pvalue, ASN1TagType tagging);

EXTERN int asn1D_Ns1_Min_width (OSCTXT* pctxt, Ns1_Min_width *pvalue, 
   ASN1TagType tagging, int length);

EXTERN int XmlEnc_Ns1_Min_width (OSCTXT* pctxt, Ns1_Min_width* pvalue, 
   const OSUTF8CHAR* elemName, const OSUTF8CHAR* nsPrefix);

EXTERN int XmlDec_Ns1_Min_width (OSCTXT* pctxt, Ns1_Min_width* pvalue);

EXTERN int DOMTest_Ns1_Min_width (OSCTXT* pctxt, Ns1_Min_width* pvalue, 
   xmlAttrPtr pXmlNode, OSBOOL setChild);

EXTERN void asn1Init_Ns1_Min_width (Ns1_Min_width* pvalue);

#ifdef __cplusplus
}
#endif

#endif
